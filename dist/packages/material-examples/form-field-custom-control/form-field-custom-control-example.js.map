{"version":3,"file":"form-field-custom-control-example.js","sourceRoot":"","sources":["../../../../src/material-examples/form-field-custom-control/form-field-custom-control-example.ts"],"names":[],"mappings":"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","sourcesContent":["import {FocusMonitor} from '@angular/cdk/a11y';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {Component, ElementRef, Input, OnDestroy} from '@angular/core';\nimport {FormBuilder, FormGroup} from '@angular/forms';\nimport {MatFormFieldControl} from '@angular/material';\nimport {Subject} from 'rxjs';\n\n/** @title Form field with custom telephone number input control. */\n@Component({\n  selector: 'form-field-custom-control-example',\n  templateUrl: 'form-field-custom-control-example.html',\n  styleUrls: ['form-field-custom-control-example.css'],\n})\nexport class FormFieldCustomControlExample {}\n\n/** Data structure for holding telephone number. */\nexport class MyTel {\n  constructor(public area: string, public exchange: string, public subscriber: string) {}\n}\n\n/** Custom `MatFormFieldControl` for telephone number input. */\n@Component({\n  selector: 'example-tel-input',\n  templateUrl: 'example-tel-input-example.html',\n  styleUrls: ['example-tel-input-example.css'],\n  providers: [{provide: MatFormFieldControl, useExisting: MyTelInput}],\n  host: {\n    '[class.example-floating]': 'shouldLabelFloat',\n    '[id]': 'id',\n    '[attr.aria-describedby]': 'describedBy',\n  }\n})\nexport class MyTelInput implements MatFormFieldControl<MyTel>, OnDestroy {\n  static nextId = 0;\n\n  parts: FormGroup;\n  stateChanges = new Subject<void>();\n  focused = false;\n  ngControl = null;\n  errorState = false;\n  controlType = 'example-tel-input';\n  id = `example-tel-input-${MyTelInput.nextId++}`;\n  describedBy = '';\n\n  get empty() {\n    const {value: {area, exchange, subscriber}} = this.parts;\n\n    return !area && !exchange && !subscriber;\n  }\n\n  get shouldLabelFloat() { return this.focused || !this.empty; }\n\n  @Input()\n  get placeholder(): string { return this._placeholder; }\n  set placeholder(value: string) {\n    this._placeholder = value;\n    this.stateChanges.next();\n  }\n  private _placeholder: string;\n\n  @Input()\n  get required(): boolean { return this._required; }\n  set required(value: boolean) {\n    this._required = coerceBooleanProperty(value);\n    this.stateChanges.next();\n  }\n  private _required = false;\n\n  @Input()\n  get disabled(): boolean { return this._disabled; }\n  set disabled(value: boolean) {\n    this._disabled = coerceBooleanProperty(value);\n    this._disabled ? this.parts.disable() : this.parts.enable();\n    this.stateChanges.next();\n  }\n  private _disabled = false;\n\n  @Input()\n  get value(): MyTel | null {\n    const {value: {area, exchange, subscriber}} = this.parts;\n    if (area.length === 3 && exchange.length === 3 && subscriber.length === 4) {\n      return new MyTel(area, exchange, subscriber);\n    }\n    return null;\n  }\n  set value(tel: MyTel | null) {\n    const {area, exchange, subscriber} = tel || new MyTel('', '', '');\n    this.parts.setValue({area, exchange, subscriber});\n    this.stateChanges.next();\n  }\n\n  constructor(fb: FormBuilder, private fm: FocusMonitor, private elRef: ElementRef<HTMLElement>) {\n    this.parts = fb.group({\n      area: '',\n      exchange: '',\n      subscriber: '',\n    });\n\n    fm.monitor(elRef, true).subscribe(origin => {\n      this.focused = !!origin;\n      this.stateChanges.next();\n    });\n  }\n\n  ngOnDestroy() {\n    this.stateChanges.complete();\n    this.fm.stopMonitoring(this.elRef);\n  }\n\n  setDescribedByIds(ids: string[]) {\n    this.describedBy = ids.join(' ');\n  }\n\n  onContainerClick(event: MouseEvent) {\n    if ((event.target as Element).tagName.toLowerCase() != 'input') {\n      this.elRef.nativeElement.querySelector('input')!.focus();\n    }\n  }\n}\n"]}