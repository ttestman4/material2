{"version":3,"file":"cdk-virtual-scroll-data-source-example.js","sourceRoot":"","sources":["../../../../src/material-examples/cdk-virtual-scroll-data-source/cdk-virtual-scroll-data-source-example.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA,wDAAsE;AACtE,sCAAiE;AACjE,6BAA+D;AAE/D,sDAAsD;AAOtD;IANA;QAOE,OAAE,GAAG,IAAI,YAAY,EAAE,CAAC;IAC1B,CAAC;IAFY,iCAAiC;QAN7C,gBAAS,CAAC;YACT,QAAQ,EAAE,wCAAwC;YAClD,SAAS,EAAE,CAAC,4CAA4C,CAAC;YACzD,WAAW,EAAE,6CAA6C;YAC1D,eAAe,EAAE,8BAAuB,CAAC,MAAM;SAChD,CAAC;OACW,iCAAiC,CAE7C;IAAD,wCAAC;CAAA,AAFD,IAEC;AAFY,8EAAiC;AAI9C;IAAkC,gCAA8B;IAAhE;QAAA,qEAyCC;QAxCS,YAAM,GAAG,MAAM,CAAC;QAChB,cAAQ,GAAG,GAAG,CAAC;QACf,gBAAU,GAAG,KAAK,CAAC,IAAI,CAAS,EAAC,MAAM,EAAE,KAAI,CAAC,MAAM,EAAC,CAAC,CAAC;QACvD,kBAAY,GAAG,IAAI,GAAG,EAAU,CAAC;QACjC,gBAAU,GAAG,IAAI,sBAAe,CAAyB,KAAI,CAAC,UAAU,CAAC,CAAC;QAC1E,kBAAY,GAAG,IAAI,mBAAY,EAAE,CAAC;;IAmC5C,CAAC;IAjCC,8BAAO,GAAP,UAAQ,gBAAkC;QAA1C,iBASC;QARC,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,gBAAgB,CAAC,UAAU,CAAC,SAAS,CAAC,UAAA,KAAK;YAC/D,IAAM,SAAS,GAAG,KAAI,CAAC,eAAe,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;YACpD,IAAM,OAAO,GAAG,KAAI,CAAC,eAAe,CAAC,KAAK,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;YACpD,KAAK,IAAI,CAAC,GAAG,SAAS,EAAE,CAAC,IAAI,OAAO,EAAE,CAAC,EAAE,EAAE;gBACzC,KAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;aACnB;QACH,CAAC,CAAC,CAAC,CAAC;QACJ,OAAO,IAAI,CAAC,UAAU,CAAC;IACzB,CAAC;IAED,iCAAU,GAAV;QACE,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC;IAClC,CAAC;IAEO,sCAAe,GAAvB,UAAwB,KAAa;QACnC,OAAO,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC;IAC3C,CAAC;IAEO,gCAAS,GAAjB,UAAkB,IAAY;QAA9B,iBAaC;QAZC,IAAI,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE;YAC/B,OAAO;SACR;QACD,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QAE5B,0DAA0D;QAC1D,UAAU,CAAC;;YACT,CAAA,KAAA,KAAI,CAAC,UAAU,CAAA,CAAC,MAAM,YAAC,IAAI,GAAG,KAAI,CAAC,QAAQ,EAAE,KAAI,CAAC,QAAQ,SACnD,KAAK,CAAC,IAAI,CAAC,EAAC,MAAM,EAAE,KAAI,CAAC,QAAQ,EAAC,CAAC;iBACjC,GAAG,CAAC,UAAC,CAAC,EAAE,CAAC,IAAK,OAAA,YAAS,IAAI,GAAG,KAAI,CAAC,QAAQ,GAAG,CAAC,CAAE,EAAnC,CAAmC,CAAC,GAAE;YAC7D,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAI,CAAC,UAAU,CAAC,CAAC;QACxC,CAAC,EAAE,IAAI,CAAC,MAAM,EAAE,GAAG,IAAI,GAAG,GAAG,CAAC,CAAC;IACjC,CAAC;IACH,mBAAC;AAAD,CAAC,AAzCD,CAAkC,wBAAU,GAyC3C;AAzCY,oCAAY","sourcesContent":["import {CollectionViewer, DataSource} from '@angular/cdk/collections';\nimport {ChangeDetectionStrategy, Component} from '@angular/core';\nimport {BehaviorSubject, Observable, Subscription} from 'rxjs';\n\n/** @title Virtual scroll with a custom data source */\n@Component({\n  selector: 'cdk-virtual-scroll-data-source-example',\n  styleUrls: ['cdk-virtual-scroll-data-source-example.css'],\n  templateUrl: 'cdk-virtual-scroll-data-source-example.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CdkVirtualScrollDataSourceExample {\n  ds = new MyDataSource();\n}\n\nexport class MyDataSource extends DataSource<string | undefined> {\n  private length = 100000;\n  private pageSize = 100;\n  private cachedData = Array.from<string>({length: this.length});\n  private fetchedPages = new Set<number>();\n  private dataStream = new BehaviorSubject<(string | undefined)[]>(this.cachedData);\n  private subscription = new Subscription();\n\n  connect(collectionViewer: CollectionViewer): Observable<(string | undefined)[]> {\n    this.subscription.add(collectionViewer.viewChange.subscribe(range => {\n      const startPage = this.getPageForIndex(range.start);\n      const endPage = this.getPageForIndex(range.end - 1);\n      for (let i = startPage; i <= endPage; i++) {\n        this.fetchPage(i);\n      }\n    }));\n    return this.dataStream;\n  }\n\n  disconnect(): void {\n    this.subscription.unsubscribe();\n  }\n\n  private getPageForIndex(index: number): number {\n    return Math.floor(index / this.pageSize);\n  }\n\n  private fetchPage(page: number) {\n    if (this.fetchedPages.has(page)) {\n      return;\n    }\n    this.fetchedPages.add(page);\n\n    // Use `setTimeout` to simulate fetching data from server.\n    setTimeout(() => {\n      this.cachedData.splice(page * this.pageSize, this.pageSize,\n          ...Array.from({length: this.pageSize})\n              .map((_, i) => `Item #${page * this.pageSize + i}`));\n      this.dataStream.next(this.cachedData);\n    }, Math.random() * 1000 + 200);\n  }\n}\n"]}