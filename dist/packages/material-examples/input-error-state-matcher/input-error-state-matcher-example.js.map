{"version":3,"file":"input-error-state-matcher-example.js","sourceRoot":"","sources":["../../../../src/material-examples/input-error-state-matcher/input-error-state-matcher-example.ts"],"names":[],"mappings":";;;;;;;;AAAA,sCAAwC;AACxC,wCAAmF;AAGnF,kEAAkE;AAClE;IAAA;IAKA,CAAC;IAJC,0CAAY,GAAZ,UAAa,OAA2B,EAAE,IAAwC;QAChF,IAAM,WAAW,GAAG,IAAI,IAAI,IAAI,CAAC,SAAS,CAAC;QAC3C,OAAO,CAAC,CAAC,CAAC,OAAO,IAAI,OAAO,CAAC,OAAO,IAAI,CAAC,OAAO,CAAC,KAAK,IAAI,OAAO,CAAC,OAAO,IAAI,WAAW,CAAC,CAAC,CAAC;IAC7F,CAAC;IACH,0BAAC;AAAD,CAAC,AALD,IAKC;AALY,kDAAmB;AAOhC,mDAAmD;AAMnD;IALA;QAME,qBAAgB,GAAG,IAAI,mBAAW,CAAC,EAAE,EAAE;YACrC,kBAAU,CAAC,QAAQ;YACnB,kBAAU,CAAC,KAAK;SACjB,CAAC,CAAC;QAEH,YAAO,GAAG,IAAI,mBAAmB,EAAE,CAAC;IACtC,CAAC;IAPY,6BAA6B;QALzC,gBAAS,CAAC;YACT,QAAQ,EAAE,mCAAmC;YAC7C,WAAW,EAAE,0CAA0C;YACvD,SAAS,EAAE,CAAC,yCAAyC,CAAC;SACvD,CAAC;OACW,6BAA6B,CAOzC;IAAD,oCAAC;CAAA,AAPD,IAOC;AAPY,sEAA6B","sourcesContent":["import {Component} from '@angular/core';\nimport {FormControl, FormGroupDirective, NgForm, Validators} from '@angular/forms';\nimport {ErrorStateMatcher} from '@angular/material/core';\n\n/** Error when invalid control is dirty, touched, or submitted. */\nexport class MyErrorStateMatcher implements ErrorStateMatcher {\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n    const isSubmitted = form && form.submitted;\n    return !!(control && control.invalid && (control.dirty || control.touched || isSubmitted));\n  }\n}\n\n/** @title Input with a custom ErrorStateMatcher */\n@Component({\n  selector: 'input-error-state-matcher-example',\n  templateUrl: './input-error-state-matcher-example.html',\n  styleUrls: ['./input-error-state-matcher-example.css'],\n})\nexport class InputErrorStateMatcherExample {\n  emailFormControl = new FormControl('', [\n    Validators.required,\n    Validators.email,\n  ]);\n\n  matcher = new MyErrorStateMatcher();\n}\n"]}