{"version":3,"file":"datepicker-views-selection-example.js","sourceRoot":"","sources":["../../../../src/material-examples/datepicker-views-selection/datepicker-views-selection-example.ts"],"names":[],"mappings":";;;;;;;;AAAA,sCAAwC;AACxC,wCAA2C;AAC3C,4EAAmE;AACnE,+CAAsF;AAGtF,gFAAgF;AAChF,6FAA6F;AAC7F,iGAAiG;AACjG,2BAA2B;AAC3B,gCAAkC;AAClC,gDAAgD;AAChD,iCAAwD;AAExD,IAAM,MAAM,GAAG,gBAAa,IAAI,OAAO,CAAC;AAExC,2DAA2D;AAC3D,iDAAiD;AACpC,QAAA,UAAU,GAAG;IACxB,KAAK,EAAE;QACL,SAAS,EAAE,SAAS;KACrB;IACD,OAAO,EAAE;QACP,SAAS,EAAE,SAAS;QACpB,cAAc,EAAE,UAAU;QAC1B,aAAa,EAAE,IAAI;QACnB,kBAAkB,EAAE,WAAW;KAChC;CACF,CAAC;AAEF,0DAA0D;AAc1D;IAbA;QAcE,SAAI,GAAG,IAAI,mBAAW,CAAC,MAAM,EAAE,CAAC,CAAC;IAcnC,CAAC;IAZC,2DAAiB,GAAjB,UAAkB,cAAsB;QACtC,IAAM,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;QAClC,SAAS,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC,CAAC;QACtC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;IAChC,CAAC;IAED,4DAAkB,GAAlB,UAAmB,cAAsB,EAAE,UAAiC;QAC1E,IAAM,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;QAClC,SAAS,CAAC,KAAK,CAAC,cAAc,CAAC,KAAK,EAAE,CAAC,CAAC;QACxC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;QAC9B,UAAU,CAAC,KAAK,EAAE,CAAC;IACrB,CAAC;IAdU,+BAA+B;QAb3C,gBAAS,CAAC;YACT,QAAQ,EAAE,oCAAoC;YAC9C,WAAW,EAAE,yCAAyC;YACtD,SAAS,EAAE,CAAC,wCAAwC,CAAC;YACrD,SAAS,EAAE;gBACT,4FAA4F;gBAC5F,8FAA8F;gBAC9F,iCAAiC;gBACjC,EAAC,OAAO,EAAE,kBAAW,EAAE,QAAQ,EAAE,2CAAiB,EAAE,IAAI,EAAE,CAAC,sBAAe,CAAC,EAAC;gBAE5E,EAAC,OAAO,EAAE,uBAAgB,EAAE,QAAQ,EAAE,kBAAU,EAAC;aAClD;SACF,CAAC;OACW,+BAA+B,CAe3C;IAAD,sCAAC;CAAA,AAfD,IAeC;AAfY,0EAA+B","sourcesContent":["import {Component} from '@angular/core';\nimport {FormControl} from '@angular/forms';\nimport {MomentDateAdapter} from '@angular/material-moment-adapter';\nimport {DateAdapter, MAT_DATE_FORMATS, MAT_DATE_LOCALE} from '@angular/material/core';\nimport {MatDatepicker} from '@angular/material/datepicker';\n\n// Depending on whether rollup is used, moment needs to be imported differently.\n// Since Moment.js doesn't have a default export, we normally need to import using the `* as`\n// syntax. However, rollup creates a synthetic default module and we thus need to import it using\n// the `default as` syntax.\nimport * as _moment from 'moment';\n// tslint:disable-next-line:no-duplicate-imports\nimport {default as _rollupMoment, Moment} from 'moment';\n\nconst moment = _rollupMoment || _moment;\n\n// See the Moment.js docs for the meaning of these formats:\n// https://momentjs.com/docs/#/displaying/format/\nexport const MY_FORMATS = {\n  parse: {\n    dateInput: 'MM/YYYY',\n  },\n  display: {\n    dateInput: 'MM/YYYY',\n    monthYearLabel: 'MMM YYYY',\n    dateA11yLabel: 'LL',\n    monthYearA11yLabel: 'MMMM YYYY',\n  },\n};\n\n/** @title Datepicker emulating a Year and month picker */\n@Component({\n  selector: 'datepicker-views-selection-example',\n  templateUrl: 'datepicker-views-selection-example.html',\n  styleUrls: ['datepicker-views-selection-example.css'],\n  providers: [\n    // `MomentDateAdapter` can be automatically provided by importing `MomentDateModule` in your\n    // application's root module. We provide it at the component level here, due to limitations of\n    // our example generation script.\n    {provide: DateAdapter, useClass: MomentDateAdapter, deps: [MAT_DATE_LOCALE]},\n\n    {provide: MAT_DATE_FORMATS, useValue: MY_FORMATS},\n  ],\n})\nexport class DatepickerViewsSelectionExample {\n  date = new FormControl(moment());\n\n  chosenYearHandler(normalizedYear: Moment) {\n    const ctrlValue = this.date.value;\n    ctrlValue.year(normalizedYear.year());\n    this.date.setValue(ctrlValue);\n  }\n\n  chosenMonthHandler(normlizedMonth: Moment, datepicker: MatDatepicker<Moment>) {\n    const ctrlValue = this.date.value;\n    ctrlValue.month(normlizedMonth.month());\n    this.date.setValue(ctrlValue);\n    datepicker.close();\n  }\n}\n"]}