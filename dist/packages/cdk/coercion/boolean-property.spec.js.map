{"version":3,"file":"boolean-property.spec.js","sourceRoot":"","sources":["../../../../src/cdk/coercion/boolean-property.spec.ts"],"names":[],"mappings":";;AAAA,uDAAyD;AAEzD,QAAQ,CAAC,uBAAuB,EAAE;IAEhC,EAAE,CAAC,kCAAkC,EAAE;QACrC,MAAM,CAAC,wCAAqB,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACvD,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,6BAA6B,EAAE;QAChC,MAAM,CAAC,wCAAqB,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAClD,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,wCAAwC,EAAE;QAC3C,MAAM,CAAC,wCAAqB,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC/C,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,4BAA4B,EAAE;QAC/B,MAAM,CAAC,wCAAqB,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC9C,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,2CAA2C,EAAE;QAC9C,MAAM,CAAC,wCAAqB,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACrD,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,0CAA0C,EAAE;QAC7C,MAAM,CAAC,wCAAqB,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACnD,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,wCAAwC,EAAE;QAC3C,MAAM,CAAC,wCAAqB,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACjD,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,yCAAyC,EAAE;QAC5C,MAAM,CAAC,wCAAqB,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACnD,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,2CAA2C,EAAE;QAC9C,MAAM,CAAC,wCAAqB,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACnD,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,iCAAiC,EAAE;QACpC,MAAM,CAAC,wCAAqB,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC/C,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,gCAAgC,EAAE;QACnC,MAAM,CAAC,wCAAqB,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC/C,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import {coerceBooleanProperty} from './boolean-property';\n\ndescribe('coerceBooleanProperty', () => {\n\n  it('should coerce undefined to false', () => {\n    expect(coerceBooleanProperty(undefined)).toBe(false);\n  });\n\n  it('should coerce null to false', () => {\n    expect(coerceBooleanProperty(null)).toBe(false);\n  });\n\n  it('should coerce the empty string to true', () => {\n    expect(coerceBooleanProperty('')).toBe(true);\n  });\n\n  it('should coerce zero to true', () => {\n    expect(coerceBooleanProperty(0)).toBe(true);\n  });\n\n  it('should coerce the string \"false\" to false', () => {\n    expect(coerceBooleanProperty('false')).toBe(false);\n  });\n\n  it('should coerce the boolean false to false', () => {\n    expect(coerceBooleanProperty(false)).toBe(false);\n  });\n\n  it('should coerce the boolean true to true', () => {\n    expect(coerceBooleanProperty(true)).toBe(true);\n  });\n\n  it('should coerce the string \"true\" to true', () => {\n    expect(coerceBooleanProperty('true')).toBe(true);\n  });\n\n  it('should coerce an arbitrary string to true', () => {\n    expect(coerceBooleanProperty('pink')).toBe(true);\n  });\n\n  it('should coerce an object to true', () => {\n    expect(coerceBooleanProperty({})).toBe(true);\n  });\n\n  it('should coerce an array to true', () => {\n    expect(coerceBooleanProperty([])).toBe(true);\n  });\n});\n"]}