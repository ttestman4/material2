{"version":3,"file":"array.spec.js","sourceRoot":"","sources":["../../../../src/cdk/coercion/array.spec.ts"],"names":[],"mappings":";;AAAA,iCAAoC;AAEpC,QAAQ,CAAC,aAAa,EAAE;IAEtB,EAAE,CAAC,kCAAkC,EAAE;QACrC,IAAI,SAAS,GAAG,eAAe,CAAC;QAChC,MAAM,CAAC,mBAAW,CAAC,SAAS,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;IACtD,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,kCAAkC,EAAE;QACrC,IAAI,SAAS,GAAG,EAAE,CAAC;QACnB,MAAM,CAAC,mBAAW,CAAC,SAAS,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;IACtD,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,mCAAmC,EAAE;QACtC,IAAI,SAAS,GAAG,EAAE,SAAS,EAAE,QAAQ,EAAE,CAAC;QACxC,MAAM,CAAC,mBAAW,CAAC,SAAS,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;IACtD,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,qCAAqC,EAAE;QACxC,IAAI,OAAO,GAAG,IAAI,CAAC;QACnB,MAAM,CAAC,mBAAW,CAAC,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;IAClD,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,4CAA4C,EAAE;QAC/C,IAAI,YAAY,GAAG,SAAS,CAAC;QAC7B,MAAM,CAAC,mBAAW,CAAC,YAAY,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;IAC5D,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,sCAAsC,EAAE;QACzC,IAAI,QAAQ,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QACzB,MAAM,CAAC,mBAAW,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IAC/C,CAAC,CAAC,CAAC;AAEL,CAAC,CAAC,CAAC","sourcesContent":["import {coerceArray} from './array';\n\ndescribe('coerceArray', () => {\n\n  it('should wrap a string in an array', () => {\n    let stringVal = 'just a string';\n    expect(coerceArray(stringVal)).toEqual([stringVal]);\n  });\n\n  it('should wrap a number in an array', () => {\n    let numberVal = 42;\n    expect(coerceArray(numberVal)).toEqual([numberVal]);\n  });\n\n  it('should wrap an object in an array', () => {\n    let objectVal = { something: 'clever' };\n    expect(coerceArray(objectVal)).toEqual([objectVal]);\n  });\n\n  it('should wrap a null vall in an array', () => {\n    let nullVal = null;\n    expect(coerceArray(nullVal)).toEqual([nullVal]);\n  });\n\n  it('should wrap an undefined value in an array', () => {\n    let undefinedVal = undefined;\n    expect(coerceArray(undefinedVal)).toEqual([undefinedVal]);\n  });\n\n  it('should not wrap an array in an array', () => {\n    let arrayVal = [1, 2, 3];\n    expect(coerceArray(arrayVal)).toBe(arrayVal);\n  });\n\n});\n"]}