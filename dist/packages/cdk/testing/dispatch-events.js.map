{"version":3,"file":"dispatch-events.js","sourceRoot":"","sources":["../../../../src/cdk/testing/dispatch-events.ts"],"names":[],"mappings":";AAAA;;;;;;GAMG;;AAEH,iDAKyB;AAEzB,+CAA+C;AAC/C,SAAgB,aAAa,CAAC,IAAmB,EAAE,KAAY;IAC7D,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;IAC1B,OAAO,KAAK,CAAC;AACf,CAAC;AAHD,sCAGC;AAED,8DAA8D;AAC9D,SAAgB,iBAAiB,CAAC,IAAmB,EAAE,IAAY,EAAE,SAAmB;IACtF,OAAO,aAAa,CAAC,IAAI,EAAE,+BAAe,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC,CAAC;AAC/D,CAAC;AAFD,8CAEC;AAED,wEAAwE;AACxE,SAAgB,qBAAqB,CAAC,IAAU,EAAE,IAAY,EAAE,OAAe,EAAE,MAAgB;IAE/F,OAAO,aAAa,CAAC,IAAI,EAAE,mCAAmB,CAAC,IAAI,EAAE,OAAO,EAAE,MAAM,CAAC,CAAkB,CAAC;AAC1F,CAAC;AAHD,sDAGC;AAED,wEAAwE;AACxE,SAAgB,kBAAkB,CAAC,IAAU,EAAE,IAAY,EAAE,CAAK,EAAE,CAAK,EACvE,KAAoC;IADuB,kBAAA,EAAA,KAAK;IAAE,kBAAA,EAAA,KAAK;IACvE,sBAAA,EAAA,QAAQ,gCAAgB,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC;IACpC,OAAO,aAAa,CAAC,IAAI,EAAE,KAAK,CAAe,CAAC;AAClD,CAAC;AAHD,gDAGC;AAED,wEAAwE;AACxE,SAAgB,kBAAkB,CAAC,IAAU,EAAE,IAAY,EAAE,CAAK,EAAE,CAAK;IAAZ,kBAAA,EAAA,KAAK;IAAE,kBAAA,EAAA,KAAK;IACvE,OAAO,aAAa,CAAC,IAAI,EAAE,gCAAgB,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AAC3D,CAAC;AAFD,gDAEC","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  createFakeEvent,\n  createKeyboardEvent,\n  createMouseEvent,\n  createTouchEvent\n} from './event-objects';\n\n/** Utility to dispatch any event on a Node. */\nexport function dispatchEvent(node: Node | Window, event: Event): Event {\n  node.dispatchEvent(event);\n  return event;\n}\n\n/** Shorthand to dispatch a fake event on a specified node. */\nexport function dispatchFakeEvent(node: Node | Window, type: string, canBubble?: boolean): Event {\n  return dispatchEvent(node, createFakeEvent(type, canBubble));\n}\n\n/** Shorthand to dispatch a keyboard event with a specified key code. */\nexport function dispatchKeyboardEvent(node: Node, type: string, keyCode: number, target?: Element):\n    KeyboardEvent {\n  return dispatchEvent(node, createKeyboardEvent(type, keyCode, target)) as KeyboardEvent;\n}\n\n/** Shorthand to dispatch a mouse event on the specified coordinates. */\nexport function dispatchMouseEvent(node: Node, type: string, x = 0, y = 0,\n  event = createMouseEvent(type, x, y)): MouseEvent {\n  return dispatchEvent(node, event) as MouseEvent;\n}\n\n/** Shorthand to dispatch a touch event on the specified coordinates. */\nexport function dispatchTouchEvent(node: Node, type: string, x = 0, y = 0) {\n  return dispatchEvent(node, createTouchEvent(type, x, y));\n}\n"]}