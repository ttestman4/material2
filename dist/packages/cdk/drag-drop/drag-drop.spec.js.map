{"version":3,"file":"drag-drop.spec.js","sourceRoot":"","sources":["../../../../src/cdk/drag-drop/drag-drop.spec.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA,sCAAoD;AACpD,iDAAiE;AACjE,uDAAkD;AAClD,yCAAqC;AACrC,uCAAmC;AACnC,iDAA4C;AAE5C,QAAQ,CAAC,UAAU,EAAE;IACnB,IAAI,OAAiB,CAAC;IAEtB,UAAU,CAAC,mBAAS,CAAC;QACnB,iBAAO,CAAC,sBAAsB,CAAC;YAC7B,YAAY,EAAE,CAAC,aAAa,CAAC;YAC7B,OAAO,EAAE,CAAC,iCAAc,CAAC;SAC1B,CAAC,CAAC;QAEH,iBAAO,CAAC,iBAAiB,EAAE,CAAC;IAC9B,CAAC,CAAC,CAAC,CAAC;IAEJ,UAAU,CAAC,gBAAM,CAAC,CAAC,oBAAQ,CAAC,EAAE,UAAC,CAAW;QACxC,OAAO,GAAG,CAAC,CAAC;IACd,CAAC,CAAC,CAAC,CAAC;IAEJ,EAAE,CAAC,kDAAkD,EAAE;QACrD,IAAM,OAAO,GAAG,iBAAO,CAAC,eAAe,CAAC,aAAa,CAAC,CAAC;QACvD,OAAO,CAAC,aAAa,EAAE,CAAC;QACxB,IAAM,GAAG,GAAG,OAAO,CAAC,UAAU,CAAC,OAAO,CAAC,iBAAiB,CAAC,UAAU,CAAC,CAAC;QAErE,MAAM,CAAC,GAAG,YAAY,kBAAO,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC5C,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,sDAAsD,EAAE;QACzD,IAAM,OAAO,GAAG,iBAAO,CAAC,eAAe,CAAC,aAAa,CAAC,CAAC;QACvD,OAAO,CAAC,aAAa,EAAE,CAAC;QACxB,IAAM,GAAG,GAAG,OAAO,CAAC,cAAc,CAAC,OAAO,CAAC,iBAAiB,CAAC,UAAU,CAAC,CAAC;QAEzE,MAAM,CAAC,GAAG,YAAY,2BAAW,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAChD,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAMH;IACE,uBAAmB,UAAmC;QAAnC,eAAU,GAAV,UAAU,CAAyB;IAAG,CAAC;IADtD,aAAa;QAHlB,gBAAS,CAAC;YACT,QAAQ,EAAE,aAAa;SACxB,CAAC;yCAE+B,iBAAU;OADrC,aAAa,CAElB;IAAD,oBAAC;CAAA,AAFD,IAEC","sourcesContent":["import {Component, ElementRef} from '@angular/core';\nimport {fakeAsync, TestBed, inject} from '@angular/core/testing';\nimport {DragDropModule} from './drag-drop-module';\nimport {DragDrop} from './drag-drop';\nimport {DragRef} from './drag-ref';\nimport {DropListRef} from './drop-list-ref';\n\ndescribe('DragDrop', () => {\n  let service: DragDrop;\n\n  beforeEach(fakeAsync(() => {\n    TestBed.configureTestingModule({\n      declarations: [TestComponent],\n      imports: [DragDropModule],\n    });\n\n    TestBed.compileComponents();\n  }));\n\n  beforeEach(inject([DragDrop], (d: DragDrop) => {\n    service = d;\n  }));\n\n  it('should be able to attach a DragRef to a DOM node', () => {\n    const fixture = TestBed.createComponent(TestComponent);\n    fixture.detectChanges();\n    const ref = service.createDrag(fixture.componentInstance.elementRef);\n\n    expect(ref instanceof DragRef).toBe(true);\n  });\n\n  it('should be able to attach a DropListRef to a DOM node', () => {\n    const fixture = TestBed.createComponent(TestComponent);\n    fixture.detectChanges();\n    const ref = service.createDropList(fixture.componentInstance.elementRef);\n\n    expect(ref instanceof DropListRef).toBe(true);\n  });\n});\n\n\n@Component({\n  template: '<div></div>'\n})\nclass TestComponent {\n  constructor(public elementRef: ElementRef<HTMLElement>) {}\n}\n"]}