{"version":3,"file":"drag-drop-registry.spec.js","sourceRoot":"","sources":["../../../../src/cdk/drag-drop/drag-drop-registry.spec.ts"],"names":[],"mappings":"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","sourcesContent":["import {QueryList, ViewChildren, Component} from '@angular/core';\nimport {fakeAsync, TestBed, ComponentFixture, inject} from '@angular/core/testing';\nimport {\n  createMouseEvent,\n  dispatchMouseEvent,\n  createTouchEvent,\n  dispatchTouchEvent,\n  dispatchFakeEvent,\n} from '@angular/cdk/testing';\nimport {DragDropRegistry} from './drag-drop-registry';\nimport {DragDropModule} from './drag-drop-module';\nimport {CdkDrag} from './directives/drag';\nimport {CdkDropList} from './directives/drop-list';\n\ndescribe('DragDropRegistry', () => {\n  let fixture: ComponentFixture<SimpleDropZone>;\n  let testComponent: SimpleDropZone;\n  let registry: DragDropRegistry<CdkDrag, CdkDropList>;\n\n  beforeEach(fakeAsync(() => {\n    TestBed.configureTestingModule({\n      imports: [DragDropModule],\n      declarations: [SimpleDropZone],\n    }).compileComponents();\n\n    fixture = TestBed.createComponent(SimpleDropZone);\n    testComponent = fixture.componentInstance;\n    fixture.detectChanges();\n\n    inject([DragDropRegistry], (c: DragDropRegistry<CdkDrag, CdkDropList>) => {\n      registry = c;\n    })();\n  }));\n\n  afterEach(() => {\n    registry.ngOnDestroy();\n  });\n\n  it('should be able to start dragging an item', () => {\n    const firstItem = testComponent.dragItems.first;\n\n    expect(registry.isDragging(firstItem)).toBe(false);\n    registry.startDragging(firstItem, createMouseEvent('mousedown'));\n    expect(registry.isDragging(firstItem)).toBe(true);\n  });\n\n  it('should be able to stop dragging an item', () => {\n    const firstItem = testComponent.dragItems.first;\n\n    registry.startDragging(firstItem, createMouseEvent('mousedown'));\n    expect(registry.isDragging(firstItem)).toBe(true);\n\n    registry.stopDragging(firstItem);\n    expect(registry.isDragging(firstItem)).toBe(false);\n  });\n\n  it('should stop dragging an item if it is removed', () => {\n    const firstItem = testComponent.dragItems.first;\n\n    registry.startDragging(firstItem, createMouseEvent('mousedown'));\n    expect(registry.isDragging(firstItem)).toBe(true);\n\n    registry.removeDragItem(firstItem);\n    expect(registry.isDragging(firstItem)).toBe(false);\n  });\n\n  it('should dispatch `mousemove` events after starting to drag via the mouse', () => {\n    const spy = jasmine.createSpy('pointerMove spy');\n    const subscription = registry.pointerMove.subscribe(spy);\n\n    registry.startDragging(testComponent.dragItems.first, createMouseEvent('mousedown'));\n    dispatchMouseEvent(document, 'mousemove');\n\n    expect(spy).toHaveBeenCalled();\n\n    subscription.unsubscribe();\n  });\n\n  it('should dispatch `touchmove` events after starting to drag via touch', () => {\n    const spy = jasmine.createSpy('pointerMove spy');\n    const subscription = registry.pointerMove.subscribe(spy);\n\n    registry.startDragging(testComponent.dragItems.first,\n        createTouchEvent('touchstart') as TouchEvent);\n    dispatchTouchEvent(document, 'touchmove');\n\n    expect(spy).toHaveBeenCalled();\n\n    subscription.unsubscribe();\n  });\n\n  it('should dispatch pointer move events if event propagation is stopped', () => {\n    const spy = jasmine.createSpy('pointerMove spy');\n    const subscription = registry.pointerMove.subscribe(spy);\n\n    fixture.nativeElement.addEventListener('mousemove', (e: MouseEvent) => e.stopPropagation());\n    registry.startDragging(testComponent.dragItems.first, createMouseEvent('mousedown'));\n    dispatchMouseEvent(fixture.nativeElement.querySelector('div'), 'mousemove');\n\n    expect(spy).toHaveBeenCalled();\n\n    subscription.unsubscribe();\n  });\n\n  it('should dispatch `mouseup` events after ending the drag via the mouse', () => {\n    const spy = jasmine.createSpy('pointerUp spy');\n    const subscription = registry.pointerUp.subscribe(spy);\n\n    registry.startDragging(testComponent.dragItems.first, createMouseEvent('mousedown'));\n    dispatchMouseEvent(document, 'mouseup');\n\n    expect(spy).toHaveBeenCalled();\n\n    subscription.unsubscribe();\n  });\n\n  it('should dispatch `touchend` events after ending the drag via touch', () => {\n    const spy = jasmine.createSpy('pointerUp spy');\n    const subscription = registry.pointerUp.subscribe(spy);\n\n    registry.startDragging(testComponent.dragItems.first,\n        createTouchEvent('touchstart') as TouchEvent);\n    dispatchTouchEvent(document, 'touchend');\n\n    expect(spy).toHaveBeenCalled();\n\n    subscription.unsubscribe();\n  });\n\n  it('should dispatch pointer up events if event propagation is stopped', () => {\n    const spy = jasmine.createSpy('pointerUp spy');\n    const subscription = registry.pointerUp.subscribe(spy);\n\n    fixture.nativeElement.addEventListener('mouseup', (e: MouseEvent) => e.stopPropagation());\n    registry.startDragging(testComponent.dragItems.first, createMouseEvent('mousedown'));\n    dispatchMouseEvent(fixture.nativeElement.querySelector('div'), 'mouseup');\n\n    expect(spy).toHaveBeenCalled();\n\n    subscription.unsubscribe();\n  });\n\n  it('should complete the pointer event streams on destroy', () => {\n    const pointerUpSpy = jasmine.createSpy('pointerUp complete spy');\n    const pointerMoveSpy = jasmine.createSpy('pointerMove complete spy');\n    const pointerUpSubscription = registry.pointerUp.subscribe(undefined, undefined, pointerUpSpy);\n    const pointerMoveSubscription =\n        registry.pointerMove.subscribe(undefined, undefined, pointerMoveSpy);\n\n    registry.ngOnDestroy();\n\n    expect(pointerUpSpy).toHaveBeenCalled();\n    expect(pointerMoveSpy).toHaveBeenCalled();\n\n    pointerUpSubscription.unsubscribe();\n    pointerMoveSubscription.unsubscribe();\n  });\n\n  it('should not throw when trying to register the same container again', () => {\n    expect(() => registry.registerDropContainer(testComponent.dropInstances.first)).not.toThrow();\n  });\n\n  it('should not prevent the default `touchmove` actions when nothing is being dragged', () => {\n    expect(dispatchTouchEvent(document, 'touchmove').defaultPrevented).toBe(false);\n  });\n\n  it('should prevent the default `touchmove` action when an item is being dragged', () => {\n    registry.startDragging(testComponent.dragItems.first,\n      createTouchEvent('touchstart') as TouchEvent);\n    expect(dispatchTouchEvent(document, 'touchmove').defaultPrevented).toBe(true);\n  });\n\n  it('should prevent the default `touchmove` if event propagation is stopped', () => {\n    registry.startDragging(testComponent.dragItems.first,\n      createTouchEvent('touchstart') as TouchEvent);\n\n    fixture.nativeElement.addEventListener('touchmove', (e: TouchEvent) => e.stopPropagation());\n\n    const event = dispatchTouchEvent(fixture.nativeElement.querySelector('div'), 'touchmove');\n\n    expect(event.defaultPrevented).toBe(true);\n  });\n\n  it('should not prevent the default `wheel` actions when nothing is being dragged', () => {\n    expect(dispatchFakeEvent(document, 'wheel').defaultPrevented).toBe(false);\n  });\n\n  it('should prevent the default `wheel` action when an item is being dragged', () => {\n    registry.startDragging(testComponent.dragItems.first, createMouseEvent('mousedown'));\n    expect(dispatchFakeEvent(document, 'wheel').defaultPrevented).toBe(true);\n  });\n\n  it('should not prevent the default `selectstart` actions when nothing is being dragged', () => {\n    expect(dispatchFakeEvent(document, 'selectstart').defaultPrevented).toBe(false);\n  });\n\n  it('should prevent the default `selectstart` action when an item is being dragged', () => {\n    registry.startDragging(testComponent.dragItems.first, createMouseEvent('mousedown'));\n    expect(dispatchFakeEvent(document, 'selectstart').defaultPrevented).toBe(true);\n  });\n\n\n});\n\n@Component({\n  template: `\n    <div cdkDropList id=\"items\" [cdkDropListData]=\"items\">\n      <div *ngFor=\"let item of items\" cdkDrag>{{item}}</div>\n    </div>\n\n    <div cdkDropList id=\"items\" *ngIf=\"showDuplicateContainer\"></div>\n  `\n})\nclass SimpleDropZone {\n  @ViewChildren(CdkDrag) dragItems: QueryList<CdkDrag>;\n  @ViewChildren(CdkDropList) dropInstances: QueryList<CdkDropList>;\n  items = ['Zero', 'One', 'Two', 'Three'];\n  showDuplicateContainer = false;\n}\n"]}