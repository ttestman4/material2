{"version":3,"file":"scroll-dispatcher.spec.js","sourceRoot":"","sources":["../../../../src/cdk/scrolling/scroll-dispatcher.spec.ts"],"names":[],"mappings":"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","sourcesContent":["import {inject, TestBed, async, fakeAsync, ComponentFixture, tick} from '@angular/core/testing';\nimport {NgModule, Component, ViewChild, ElementRef} from '@angular/core';\nimport {CdkScrollable, ScrollDispatcher, ScrollingModule} from './public-api';\nimport {dispatchFakeEvent} from '@angular/cdk/testing';\n\ndescribe('ScrollDispatcher', () => {\n\n  beforeEach(async(() => {\n    TestBed.configureTestingModule({\n      imports: [ScrollTestModule],\n    });\n\n    TestBed.compileComponents();\n  }));\n\n  describe('Basic usage', () => {\n    let scroll: ScrollDispatcher;\n    let fixture: ComponentFixture<ScrollingComponent>;\n\n    beforeEach(inject([ScrollDispatcher], (s: ScrollDispatcher) => {\n      scroll = s;\n\n      fixture = TestBed.createComponent(ScrollingComponent);\n      fixture.detectChanges();\n    }));\n\n    it('should be registered with the scrollable directive with the scroll service', () => {\n      const componentScrollable = fixture.componentInstance.scrollable;\n      expect(scroll.scrollContainers.has(componentScrollable)).toBe(true);\n    });\n\n    it('should have the scrollable directive deregistered when the component is destroyed', () => {\n      const componentScrollable = fixture.componentInstance.scrollable;\n      expect(scroll.scrollContainers.has(componentScrollable)).toBe(true);\n\n      fixture.destroy();\n      expect(scroll.scrollContainers.has(componentScrollable)).toBe(false);\n    });\n\n    it('should notify through the directive and service that a scroll event occurred',\n        fakeAsync(() => {\n      // Listen for notifications from scroll directive\n      const scrollable = fixture.componentInstance.scrollable;\n      const directiveSpy = jasmine.createSpy('directive scroll callback');\n      scrollable.elementScrolled().subscribe(directiveSpy);\n\n      // Listen for notifications from scroll service with a throttle of 100ms\n      const throttleTime = 100;\n      const serviceSpy = jasmine.createSpy('service scroll callback');\n      scroll.scrolled(throttleTime).subscribe(serviceSpy);\n\n      // Emit a scroll event from the scrolling element in our component.\n      // This event should be picked up by the scrollable directive and notify.\n      // The notification should be picked up by the service.\n      dispatchFakeEvent(fixture.componentInstance.scrollingElement.nativeElement, 'scroll', false);\n\n      // The scrollable directive should have notified the service immediately.\n      expect(directiveSpy).toHaveBeenCalled();\n\n      // Verify that the throttle is used, the service should wait for the throttle time until\n      // sending the notification.\n      expect(serviceSpy).not.toHaveBeenCalled();\n\n      // After the throttle time, the notification should be sent.\n      tick(throttleTime);\n      expect(serviceSpy).toHaveBeenCalled();\n    }));\n\n    it('should not execute the global events in the Angular zone', () => {\n      scroll.scrolled(0).subscribe(() => {});\n      dispatchFakeEvent(document, 'scroll', false);\n\n      expect(fixture.ngZone!.isStable).toBe(true);\n    });\n\n    it('should not execute the scrollable events in the Angular zone', () => {\n      dispatchFakeEvent(fixture.componentInstance.scrollingElement.nativeElement, 'scroll');\n      expect(fixture.ngZone!.isStable).toBe(true);\n    });\n\n    it('should be able to unsubscribe from the global scrollable', () => {\n      const spy = jasmine.createSpy('global scroll callback');\n      const subscription = scroll.scrolled(0).subscribe(spy);\n\n      dispatchFakeEvent(document, 'scroll', false);\n      expect(spy).toHaveBeenCalledTimes(1);\n\n      subscription.unsubscribe();\n      dispatchFakeEvent(document, 'scroll', false);\n\n      expect(spy).toHaveBeenCalledTimes(1);\n    });\n\n    it('should complete the `scrolled` stream on destroy', () => {\n      const completeSpy = jasmine.createSpy('complete spy');\n      const subscription = scroll.scrolled(0).subscribe(undefined, undefined, completeSpy);\n\n      scroll.ngOnDestroy();\n\n      expect(completeSpy).toHaveBeenCalled();\n\n      subscription.unsubscribe();\n    });\n\n    it('should complete the scrollable stream when it is destroyed', () => {\n      const scrollable = fixture.componentInstance.scrollable;\n      const spy = jasmine.createSpy('complete spy');\n      const subscription = scrollable.elementScrolled().subscribe(undefined, undefined, spy);\n\n      fixture.destroy();\n      expect(spy).toHaveBeenCalled();\n      subscription.unsubscribe();\n    });\n\n    it('should not register the same scrollable twice', () => {\n      const scrollable = fixture.componentInstance.scrollable;\n      const scrollSpy = jasmine.createSpy('scroll spy');\n      const scrollSubscription = scroll.scrolled(0).subscribe(scrollSpy);\n\n      expect(scroll.scrollContainers.has(scrollable)).toBe(true);\n\n      scroll.register(scrollable);\n      scroll.deregister(scrollable);\n\n      dispatchFakeEvent(fixture.componentInstance.scrollingElement.nativeElement, 'scroll');\n      fixture.detectChanges();\n\n      expect(scrollSpy).not.toHaveBeenCalled();\n      scrollSubscription.unsubscribe();\n    });\n\n  });\n\n  describe('Nested scrollables', () => {\n    let scroll: ScrollDispatcher;\n    let fixture: ComponentFixture<NestedScrollingComponent>;\n    let element: ElementRef<HTMLElement>;\n\n    beforeEach(inject([ScrollDispatcher], (s: ScrollDispatcher) => {\n      scroll = s;\n\n      fixture = TestBed.createComponent(NestedScrollingComponent);\n      fixture.detectChanges();\n      element = fixture.componentInstance.interestingElement;\n    }));\n\n    it('should be able to identify the containing scrollables of an element', () => {\n      const scrollContainers = scroll.getAncestorScrollContainers(element);\n      const scrollableElementIds =\n          scrollContainers.map(scrollable => scrollable.getElementRef().nativeElement.id);\n\n      expect(scrollableElementIds).toEqual(['scrollable-1', 'scrollable-1a']);\n    });\n\n    it('should emit when one of the ancestor scrollable containers is scrolled', () => {\n      const spy = jasmine.createSpy('scroll spy');\n      const subscription = scroll.ancestorScrolled(element, 0).subscribe(spy);\n      const grandparent = fixture.debugElement.nativeElement.querySelector('#scrollable-1');\n\n      dispatchFakeEvent(grandparent, 'scroll', false);\n      expect(spy).toHaveBeenCalledTimes(1);\n\n      dispatchFakeEvent(window.document, 'scroll', false);\n      expect(spy).toHaveBeenCalledTimes(2);\n\n      subscription.unsubscribe();\n    });\n\n    it('should not emit when a non-ancestor is scrolled', () => {\n      const spy = jasmine.createSpy('scroll spy');\n      const subscription = scroll.ancestorScrolled(element, 0).subscribe(spy);\n      const stranger = fixture.debugElement.nativeElement.querySelector('#scrollable-2');\n\n      dispatchFakeEvent(stranger, 'scroll', false);\n      expect(spy).not.toHaveBeenCalled();\n\n      subscription.unsubscribe();\n    });\n  });\n\n  describe('lazy subscription', () => {\n    let scroll: ScrollDispatcher;\n\n    beforeEach(inject([ScrollDispatcher], (s: ScrollDispatcher) => {\n      scroll = s;\n    }));\n\n    it('should lazily add global listeners as service subscriptions are added and removed', () => {\n      expect(scroll._globalSubscription).toBeNull('Expected no global listeners on init.');\n\n      const subscription = scroll.scrolled(0).subscribe(() => {});\n\n      expect(scroll._globalSubscription).toBeTruthy(\n          'Expected global listeners after a subscription has been added.');\n\n      subscription.unsubscribe();\n\n      expect(scroll._globalSubscription).toBeNull(\n          'Expected global listeners to have been removed after the subscription has stopped.');\n    });\n\n    it('should remove global listeners on unsubscribe, despite any other live scrollables', () => {\n      const fixture = TestBed.createComponent(NestedScrollingComponent);\n      fixture.detectChanges();\n\n      expect(scroll._globalSubscription).toBeNull('Expected no global listeners on init.');\n      expect(scroll.scrollContainers.size).toBe(4, 'Expected multiple scrollables');\n\n      const subscription = scroll.scrolled(0).subscribe(() => {});\n\n      expect(scroll._globalSubscription).toBeTruthy(\n          'Expected global listeners after a subscription has been added.');\n\n      subscription.unsubscribe();\n\n      expect(scroll._globalSubscription).toBeNull(\n          'Expected global listeners to have been removed after the subscription has stopped.');\n      expect(scroll.scrollContainers.size)\n          .toBe(4, 'Expected scrollable count to stay the same');\n    });\n\n    it('should remove the global subscription on destroy', () => {\n      expect(scroll._globalSubscription).toBeNull('Expected no global listeners on init.');\n\n      const subscription = scroll.scrolled(0).subscribe(() => {});\n\n      expect(scroll._globalSubscription).toBeTruthy(\n          'Expected global listeners after a subscription has been added.');\n\n      scroll.ngOnDestroy();\n\n      expect(scroll._globalSubscription).toBeNull(\n          'Expected global listeners to have been removed after the subscription has stopped.');\n\n      subscription.unsubscribe();\n    });\n\n  });\n});\n\n\n/** Simple component that contains a large div and can be scrolled. */\n@Component({\n  template: `<div #scrollingElement cdk-scrollable style=\"height: 9999px\"></div>`\n})\nclass ScrollingComponent {\n  @ViewChild(CdkScrollable) scrollable: CdkScrollable;\n  @ViewChild('scrollingElement') scrollingElement: ElementRef<HTMLElement>;\n}\n\n\n/** Component containing nested scrollables. */\n@Component({\n  template: `\n    <div id=\"scrollable-1\" cdk-scrollable>\n      <div id=\"scrollable-1a\" cdk-scrollable>\n        <div #interestingElement></div>\n      </div>\n      <div id=\"scrollable-1b\" cdk-scrollable></div>\n    </div>\n    <div id=\"scrollable-2\" cdk-scrollable></div>\n  `\n})\nclass NestedScrollingComponent {\n  @ViewChild('interestingElement') interestingElement: ElementRef<HTMLElement>;\n}\n\nconst TEST_COMPONENTS = [ScrollingComponent, NestedScrollingComponent];\n@NgModule({\n  imports: [ScrollingModule],\n  providers: [ScrollDispatcher],\n  exports: TEST_COMPONENTS,\n  declarations: TEST_COMPONENTS,\n  entryComponents: TEST_COMPONENTS,\n})\nclass ScrollTestModule { }\n"]}