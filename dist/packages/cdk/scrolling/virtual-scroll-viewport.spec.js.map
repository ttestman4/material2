{"version":3,"file":"virtual-scroll-viewport.spec.js","sourceRoot":"","sources":["../../../../src/cdk/scrolling/virtual-scroll-viewport.spec.ts"],"names":[],"mappings":"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","sourcesContent":["import {ArrayDataSource} from '@angular/cdk/collections';\nimport {\n  CdkVirtualForOf,\n  CdkVirtualScrollViewport,\n  ScrollDispatcher,\n  ScrollingModule\n} from '@angular/cdk/scrolling';\nimport {dispatchFakeEvent} from '@angular/cdk/testing';\nimport {\n  Component,\n  Input,\n  NgZone,\n  TrackByFunction,\n  ViewChild,\n  ViewContainerRef,\n  ViewEncapsulation\n} from '@angular/core';\nimport {async, ComponentFixture, fakeAsync, flush, inject, TestBed} from '@angular/core/testing';\nimport {animationFrameScheduler, Subject} from 'rxjs';\n\n\ndescribe('CdkVirtualScrollViewport', () => {\n  describe ('with FixedSizeVirtualScrollStrategy', () => {\n    let fixture: ComponentFixture<FixedSizeVirtualScroll>;\n    let testComponent: FixedSizeVirtualScroll;\n    let viewport: CdkVirtualScrollViewport;\n\n    beforeEach(async(() => {\n      TestBed.configureTestingModule({\n        imports: [ScrollingModule],\n        declarations: [FixedSizeVirtualScroll],\n      }).compileComponents();\n    }));\n\n    beforeEach(() => {\n      fixture = TestBed.createComponent(FixedSizeVirtualScroll);\n      testComponent = fixture.componentInstance;\n      viewport = testComponent.viewport;\n    });\n\n    it('should render initial state', fakeAsync(() => {\n      finishInit(fixture);\n\n      const contentWrapper =\n          viewport.elementRef.nativeElement.querySelector('.cdk-virtual-scroll-content-wrapper')!;\n      expect(contentWrapper.children.length)\n          .toBe(4, 'should render 4 50px items to fill 200px space');\n    }));\n\n    it('should get the data length', fakeAsync(() => {\n      finishInit(fixture);\n\n      expect(viewport.getDataLength()).toBe(testComponent.items.length);\n    }));\n\n    it('should get the viewport size', fakeAsync(() => {\n      finishInit(fixture);\n\n      expect(viewport.getViewportSize()).toBe(testComponent.viewportSize);\n    }));\n\n    it('should update viewport size', fakeAsync(() => {\n      testComponent.viewportSize = 300;\n      fixture.detectChanges();\n      flush();\n      viewport.checkViewportSize();\n      expect(viewport.getViewportSize()).toBe(300);\n\n      testComponent.viewportSize = 500;\n      fixture.detectChanges();\n      flush();\n      viewport.checkViewportSize();\n      expect(viewport.getViewportSize()).toBe(500);\n    }));\n\n    it('should get the rendered range', fakeAsync(() => {\n      finishInit(fixture);\n\n      expect(viewport.getRenderedRange())\n          .toEqual({start: 0, end: 4}, 'should render the first 4 50px items to fill 200px space');\n    }));\n\n    it('should get the rendered content offset', fakeAsync(() => {\n      finishInit(fixture);\n      triggerScroll(viewport, testComponent.itemSize + 5);\n      fixture.detectChanges();\n      flush();\n\n      expect(viewport.getOffsetToRenderedContentStart()).toBe(testComponent.itemSize,\n          'should have 50px offset since first 50px item is not rendered');\n    }));\n\n    it('should get the scroll offset', fakeAsync(() => {\n      finishInit(fixture);\n      triggerScroll(viewport, testComponent.itemSize + 5);\n      fixture.detectChanges();\n      flush();\n\n      expect(viewport.measureScrollOffset()).toBe(testComponent.itemSize + 5);\n    }));\n\n    it('should get the rendered content size', fakeAsync(() => {\n      finishInit(fixture);\n\n      expect(viewport.measureRenderedContentSize())\n          .toBe(testComponent.viewportSize,\n              'should render 4 50px items with combined size of 200px to fill 200px space');\n    }));\n\n    it('should measure range size', fakeAsync(() => {\n      finishInit(fixture);\n\n      expect(viewport.measureRangeSize({start: 1, end: 3}))\n          .toBe(testComponent.itemSize * 2, 'combined size of 2 50px items should be 100px');\n    }));\n\n    it('should set total content size', fakeAsync(() => {\n      finishInit(fixture);\n\n      viewport.setTotalContentSize(10000);\n      flush();\n      fixture.detectChanges();\n\n      expect(viewport.elementRef.nativeElement.scrollHeight).toBe(10000);\n    }));\n\n    it('should set total content size in horizontal mode', fakeAsync(() => {\n      testComponent.orientation = 'horizontal';\n      finishInit(fixture);\n\n      viewport.setTotalContentSize(10000);\n      flush();\n      fixture.detectChanges();\n\n      expect(viewport.elementRef.nativeElement.scrollWidth).toBe(10000);\n    }));\n\n    it('should set a class based on the orientation', fakeAsync(() => {\n      finishInit(fixture);\n      const viewportElement: HTMLElement =\n          fixture.nativeElement.querySelector('.cdk-virtual-scroll-viewport');\n\n      expect(viewportElement.classList).toContain('cdk-virtual-scroll-orientation-vertical');\n\n      testComponent.orientation = 'horizontal';\n      fixture.detectChanges();\n\n      expect(viewportElement.classList).toContain('cdk-virtual-scroll-orientation-horizontal');\n    }));\n\n    it('should set the vertical class if an invalid orientation is set', fakeAsync(() => {\n      testComponent.orientation = 'diagonal';\n      finishInit(fixture);\n      const viewportElement: HTMLElement =\n          fixture.nativeElement.querySelector('.cdk-virtual-scroll-viewport');\n\n      expect(viewportElement.classList).toContain('cdk-virtual-scroll-orientation-vertical');\n    }));\n\n    it('should set rendered range', fakeAsync(() => {\n      finishInit(fixture);\n      viewport.setRenderedRange({start: 2, end: 3});\n      fixture.detectChanges();\n      flush();\n\n      const items = fixture.elementRef.nativeElement.querySelectorAll('.item');\n      expect(items.length).toBe(1, 'Expected 1 item to be rendered');\n      expect(items[0].innerText.trim()).toBe('2 - 2', 'Expected item with index 2 to be rendered');\n    }));\n\n    it('should set content offset to top of content', fakeAsync(() => {\n      finishInit(fixture);\n      viewport.setRenderedContentOffset(10, 'to-start');\n      fixture.detectChanges();\n      flush();\n\n      expect(viewport.getOffsetToRenderedContentStart()).toBe(10);\n    }));\n\n    it('should set content offset to bottom of content', fakeAsync(() => {\n      finishInit(fixture);\n      const contentSize = viewport.measureRenderedContentSize();\n\n      expect(contentSize).toBeGreaterThan(0);\n\n      viewport.setRenderedContentOffset(contentSize + 10, 'to-end');\n      fixture.detectChanges();\n      flush();\n\n      expect(viewport.getOffsetToRenderedContentStart()).toBe(10);\n    }));\n\n    it('should scroll to offset', fakeAsync(() => {\n      finishInit(fixture);\n      viewport.scrollToOffset(testComponent.itemSize * 2);\n\n      triggerScroll(viewport);\n      fixture.detectChanges();\n      flush();\n\n      expect(viewport.measureScrollOffset()).toBe(testComponent.itemSize * 2);\n      expect(viewport.getRenderedRange()).toEqual({start: 2, end: 6});\n    }));\n\n    it('should scroll to index', fakeAsync(() => {\n      finishInit(fixture);\n      viewport.scrollToIndex(2);\n\n      triggerScroll(viewport);\n      fixture.detectChanges();\n      flush();\n\n      expect(viewport.measureScrollOffset()).toBe(testComponent.itemSize * 2);\n      expect(viewport.getRenderedRange()).toEqual({start: 2, end: 6});\n    }));\n\n    it('should scroll to offset in horizontal mode', fakeAsync(() => {\n      testComponent.orientation = 'horizontal';\n      finishInit(fixture);\n      viewport.scrollToOffset(testComponent.itemSize * 2);\n\n      triggerScroll(viewport);\n      fixture.detectChanges();\n      flush();\n\n      expect(viewport.measureScrollOffset()).toBe(testComponent.itemSize * 2);\n      expect(viewport.getRenderedRange()).toEqual({start: 2, end: 6});\n    }));\n\n    it('should scroll to index in horizontal mode', fakeAsync(() => {\n      testComponent.orientation = 'horizontal';\n      finishInit(fixture);\n      viewport.scrollToIndex(2);\n\n      triggerScroll(viewport);\n      fixture.detectChanges();\n      flush();\n\n      expect(viewport.measureScrollOffset()).toBe(testComponent.itemSize * 2);\n      expect(viewport.getRenderedRange()).toEqual({start: 2, end: 6});\n    }));\n\n    it('should output scrolled index', fakeAsync(() => {\n      finishInit(fixture);\n      triggerScroll(viewport, testComponent.itemSize * 2 - 1);\n      fixture.detectChanges();\n      flush();\n\n      expect(testComponent.scrolledToIndex).toBe(1);\n\n      triggerScroll(viewport, testComponent.itemSize * 2);\n      fixture.detectChanges();\n      flush();\n\n      expect(testComponent.scrolledToIndex).toBe(2);\n    }));\n\n    it('should update viewport as user scrolls down', fakeAsync(() => {\n      finishInit(fixture);\n\n      const maxOffset =\n          testComponent.itemSize * testComponent.items.length - testComponent.viewportSize;\n      for (let offset = 1; offset <= maxOffset; offset += 10) {\n        triggerScroll(viewport, offset);\n        fixture.detectChanges();\n        flush();\n\n        const expectedRange = {\n          start: Math.floor(offset / testComponent.itemSize),\n          end: Math.ceil((offset + testComponent.viewportSize) / testComponent.itemSize)\n        };\n        expect(viewport.getRenderedRange())\n            .toEqual(expectedRange,\n                `rendered range should match expected value at scroll offset ${offset}`);\n        expect(viewport.getOffsetToRenderedContentStart())\n            .toBe(expectedRange.start * testComponent.itemSize,\n                `rendered content offset should match expected value at scroll offset ${offset}`);\n        expect(viewport.measureRenderedContentSize())\n            .toBe((expectedRange.end - expectedRange.start) * testComponent.itemSize,\n                `rendered content size should match expected value at offset ${offset}`);\n      }\n    }));\n\n    it('should update viewport as user scrolls up', fakeAsync(() => {\n      finishInit(fixture);\n\n      const maxOffset =\n          testComponent.itemSize * testComponent.items.length - testComponent.viewportSize;\n      for (let offset = maxOffset - 1; offset >= 0; offset -= 10) {\n        triggerScroll(viewport, offset);\n        fixture.detectChanges();\n        flush();\n\n        const expectedRange = {\n          start: Math.floor(offset / testComponent.itemSize),\n          end: Math.ceil((offset + testComponent.viewportSize) / testComponent.itemSize)\n        };\n        expect(viewport.getRenderedRange())\n            .toEqual(expectedRange,\n                `rendered range should match expected value at scroll offset ${offset}`);\n        expect(viewport.getOffsetToRenderedContentStart())\n            .toBe(expectedRange.start * testComponent.itemSize,\n                `rendered content offset should match expected value at scroll offset ${offset}`);\n        expect(viewport.measureRenderedContentSize())\n            .toBe((expectedRange.end - expectedRange.start) * testComponent.itemSize,\n                `rendered content size should match expected value at offset ${offset}`);\n      }\n    }));\n\n    it('should render buffer element at the end when scrolled to the top', fakeAsync(() => {\n      testComponent.minBufferPx = testComponent.itemSize;\n      testComponent.maxBufferPx = testComponent.itemSize;\n      finishInit(fixture);\n\n      expect(viewport.getRenderedRange()).toEqual({start: 0, end: 5},\n          'should render the first 5 50px items to fill 200px space, plus one buffer element at' +\n          ' the end');\n    }));\n\n    it('should render buffer element at the start and end when scrolled to the middle',\n        fakeAsync(() => {\n          testComponent.minBufferPx = testComponent.itemSize;\n          testComponent.maxBufferPx = testComponent.itemSize;\n          finishInit(fixture);\n          triggerScroll(viewport, testComponent.itemSize * 2);\n          fixture.detectChanges();\n          flush();\n\n          expect(viewport.getRenderedRange()).toEqual({start: 1, end: 7},\n              'should render 6 50px items to fill 200px space, plus one buffer element at the' +\n              ' start and end');\n        }));\n\n    it('should render buffer element at the start when scrolled to the bottom', fakeAsync(() => {\n      testComponent.minBufferPx = testComponent.itemSize;\n      testComponent.maxBufferPx = testComponent.itemSize;\n      finishInit(fixture);\n      triggerScroll(viewport, testComponent.itemSize * 6);\n      fixture.detectChanges();\n      flush();\n\n      expect(viewport.getRenderedRange()).toEqual({start: 5, end: 10},\n          'should render the last 5 50px items to fill 200px space, plus one buffer element at' +\n          ' the start');\n    }));\n\n    it('should handle dynamic item size', fakeAsync(() => {\n      finishInit(fixture);\n      triggerScroll(viewport, testComponent.itemSize * 2);\n      fixture.detectChanges();\n      flush();\n\n      expect(viewport.getRenderedRange())\n          .toEqual({start: 2, end: 6}, 'should render 4 50px items to fill 200px space');\n\n      testComponent.itemSize *= 2;\n      fixture.detectChanges();\n      flush();\n\n      expect(viewport.getRenderedRange())\n          .toEqual({start: 1, end: 3}, 'should render 2 100px items to fill 200px space');\n    }));\n\n    it('should handle dynamic buffer size', fakeAsync(() => {\n      finishInit(fixture);\n      triggerScroll(viewport, testComponent.itemSize * 2);\n      fixture.detectChanges();\n      flush();\n\n      expect(viewport.getRenderedRange())\n          .toEqual({start: 2, end: 6}, 'should render 4 50px items to fill 200px space');\n\n      testComponent.minBufferPx = testComponent.itemSize;\n      testComponent.maxBufferPx = testComponent.itemSize;\n      fixture.detectChanges();\n      flush();\n\n      expect(viewport.getRenderedRange())\n          .toEqual({start: 1, end: 7}, 'should expand to 1 buffer element on each side');\n    }));\n\n    it('should handle dynamic item array', fakeAsync(() => {\n      finishInit(fixture);\n      triggerScroll(viewport, testComponent.itemSize * 6);\n      fixture.detectChanges();\n      flush();\n\n      expect(viewport.getOffsetToRenderedContentStart())\n          .toBe(testComponent.itemSize * 6, 'should be scrolled to bottom of 10 item list');\n\n      testComponent.items = Array(5).fill(0);\n      fixture.detectChanges();\n      flush();\n\n      triggerScroll(viewport);\n      fixture.detectChanges();\n      flush();\n\n      expect(viewport.getOffsetToRenderedContentStart())\n          .toBe(testComponent.itemSize, 'should be scrolled to bottom of 5 item list');\n    }));\n\n    it('should update viewport as user scrolls right in horizontal mode', fakeAsync(() => {\n      testComponent.orientation = 'horizontal';\n      finishInit(fixture);\n\n      const maxOffset =\n          testComponent.itemSize * testComponent.items.length - testComponent.viewportSize;\n      for (let offset = 1; offset <= maxOffset; offset += 10) {\n        triggerScroll(viewport, offset);\n        fixture.detectChanges();\n        flush();\n\n        const expectedRange = {\n          start: Math.floor(offset / testComponent.itemSize),\n          end: Math.ceil((offset + testComponent.viewportSize) / testComponent.itemSize)\n        };\n        expect(viewport.getRenderedRange())\n            .toEqual(expectedRange,\n                `rendered range should match expected value at scroll offset ${offset}`);\n        expect(viewport.getOffsetToRenderedContentStart())\n            .toBe(expectedRange.start * testComponent.itemSize,\n                `rendered content offset should match expected value at scroll offset ${offset}`);\n        expect(viewport.measureRenderedContentSize())\n            .toBe((expectedRange.end - expectedRange.start) * testComponent.itemSize,\n                `rendered content size should match expected value at offset ${offset}`);\n      }\n    }));\n\n    it('should update viewport as user scrolls left in horizontal mode', fakeAsync(() => {\n      testComponent.orientation = 'horizontal';\n      finishInit(fixture);\n\n      const maxOffset =\n          testComponent.itemSize * testComponent.items.length - testComponent.viewportSize;\n      for (let offset = maxOffset - 1; offset >= 0; offset -= 10) {\n        triggerScroll(viewport, offset);\n        fixture.detectChanges();\n        flush();\n\n        const expectedRange = {\n          start: Math.floor(offset / testComponent.itemSize),\n          end: Math.ceil((offset + testComponent.viewportSize) / testComponent.itemSize)\n        };\n        expect(viewport.getRenderedRange())\n            .toEqual(expectedRange,\n                `rendered range should match expected value at scroll offset ${offset}`);\n        expect(viewport.getOffsetToRenderedContentStart())\n            .toBe(expectedRange.start * testComponent.itemSize,\n                `rendered content offset should match expected value at scroll offset ${offset}`);\n        expect(viewport.measureRenderedContentSize())\n            .toBe((expectedRange.end - expectedRange.start) * testComponent.itemSize,\n                `rendered content size should match expected value at offset ${offset}`);\n      }\n    }));\n\n    it('should work with an Observable', fakeAsync(() => {\n      const data = new Subject<number[]>();\n      testComponent.items = data as any;\n      finishInit(fixture);\n\n      expect(viewport.getRenderedRange())\n          .toEqual({start: 0, end: 0}, 'no items should be rendered');\n\n      data.next([1, 2, 3]);\n      fixture.detectChanges();\n      flush();\n\n      expect(viewport.getRenderedRange())\n          .toEqual({start: 0, end: 3}, 'newly emitted items should be rendered');\n    }));\n\n    it('should work with a DataSource', fakeAsync(() => {\n      const data = new Subject<number[]>();\n      testComponent.items = new ArrayDataSource(data) as any;\n      finishInit(fixture);\n\n      expect(viewport.getRenderedRange())\n          .toEqual({start: 0, end: 0}, 'no items should be rendered');\n\n      data.next([1, 2, 3]);\n      fixture.detectChanges();\n      flush();\n\n      expect(viewport.getRenderedRange())\n          .toEqual({start: 0, end: 3}, 'newly emitted items should be rendered');\n    }));\n\n    it('should trackBy value by default', fakeAsync(() => {\n      testComponent.items = [];\n      spyOn(testComponent.virtualForViewContainer, 'detach').and.callThrough();\n      finishInit(fixture);\n\n      testComponent.items = [0];\n      fixture.detectChanges();\n      flush();\n\n      expect(testComponent.virtualForViewContainer.detach).not.toHaveBeenCalled();\n\n      testComponent.items = [1];\n      fixture.detectChanges();\n      flush();\n\n      expect(testComponent.virtualForViewContainer.detach).toHaveBeenCalled();\n    }));\n\n    it('should trackBy index when specified', fakeAsync(() => {\n      testComponent.trackBy = i => i;\n      testComponent.items = [];\n      spyOn(testComponent.virtualForViewContainer, 'detach').and.callThrough();\n      finishInit(fixture);\n\n      testComponent.items = [0];\n      fixture.detectChanges();\n      flush();\n\n      expect(testComponent.virtualForViewContainer.detach).not.toHaveBeenCalled();\n\n      testComponent.items = [1];\n      fixture.detectChanges();\n      flush();\n\n      expect(testComponent.virtualForViewContainer.detach).not.toHaveBeenCalled();\n    }));\n\n    it('should recycle views when template cache is large enough to accommodate', fakeAsync(() => {\n      testComponent.trackBy = i => i;\n      const spy =\n          spyOn(testComponent.virtualForViewContainer, 'createEmbeddedView').and.callThrough();\n      finishInit(fixture);\n\n      // Should create views for the initial rendered items.\n      expect(testComponent.virtualForViewContainer.createEmbeddedView).toHaveBeenCalledTimes(4);\n\n      spy.calls.reset();\n      triggerScroll(viewport, 10);\n      fixture.detectChanges();\n      flush();\n\n      // As we first start to scroll we need to create one more item. This is because the first item\n      // is still partially on screen and therefore can't be removed yet. At the same time a new\n      // item is now partially on the screen at the bottom and so a new view is needed.\n      expect(testComponent.virtualForViewContainer.createEmbeddedView).toHaveBeenCalledTimes(1);\n\n      spy.calls.reset();\n      const maxOffset =\n          testComponent.itemSize * testComponent.items.length - testComponent.viewportSize;\n      for (let offset = 10; offset <= maxOffset; offset += 10) {\n        triggerScroll(viewport, offset);\n        fixture.detectChanges();\n        flush();\n      }\n\n      // As we scroll through the rest of the items, no new views should be created, our existing 5\n      // can just be recycled as appropriate.\n      expect(testComponent.virtualForViewContainer.createEmbeddedView).not.toHaveBeenCalled();\n    }));\n\n    it('should not recycle views when template cache is full', fakeAsync(() => {\n      testComponent.trackBy = i => i;\n      testComponent.templateCacheSize = 0;\n      const spy =\n          spyOn(testComponent.virtualForViewContainer, 'createEmbeddedView').and.callThrough();\n      finishInit(fixture);\n\n      // Should create views for the initial rendered items.\n      expect(testComponent.virtualForViewContainer.createEmbeddedView).toHaveBeenCalledTimes(4);\n\n      spy.calls.reset();\n      triggerScroll(viewport, 10);\n      fixture.detectChanges();\n      flush();\n\n      // As we first start to scroll we need to create one more item. This is because the first item\n      // is still partially on screen and therefore can't be removed yet. At the same time a new\n      // item is now partially on the screen at the bottom and so a new view is needed.\n      expect(testComponent.virtualForViewContainer.createEmbeddedView).toHaveBeenCalledTimes(1);\n\n      spy.calls.reset();\n      const maxOffset =\n          testComponent.itemSize * testComponent.items.length - testComponent.viewportSize;\n      for (let offset = 10; offset <= maxOffset; offset += 10) {\n        triggerScroll(viewport, offset);\n        fixture.detectChanges();\n        flush();\n      }\n\n      // Since our template cache size is 0, as we scroll through the rest of the items, we need to\n      // create a new view for each one.\n      expect(testComponent.virtualForViewContainer.createEmbeddedView).toHaveBeenCalledTimes(5);\n    }));\n\n    it('should render up to maxBufferPx when buffer dips below minBufferPx', fakeAsync(() => {\n      testComponent.minBufferPx = testComponent.itemSize;\n      testComponent.maxBufferPx = testComponent.itemSize * 2;\n      finishInit(fixture);\n\n      expect(viewport.getRenderedRange())\n          .toEqual({start: 0, end: 6}, 'should have 2 buffer items initially');\n\n      triggerScroll(viewport, 50);\n      fixture.detectChanges();\n      flush();\n\n      expect(viewport.getRenderedRange())\n          .toEqual({start: 0, end: 6}, 'should not render additional buffer yet');\n\n      triggerScroll(viewport, 51);\n      fixture.detectChanges();\n      flush();\n\n      expect(viewport.getRenderedRange())\n          .toEqual({start: 0, end: 8}, 'should render 2 more buffer items');\n    }));\n\n    it('should throw if maxBufferPx is less than minBufferPx', fakeAsync(() => {\n      testComponent.minBufferPx = 100;\n      testComponent.maxBufferPx = 99;\n      expect(() => finishInit(fixture)).toThrow();\n    }));\n\n    it('should register and degregister with ScrollDispatcher',\n        fakeAsync(inject([ScrollDispatcher], (dispatcher: ScrollDispatcher) => {\n          spyOn(dispatcher, 'register').and.callThrough();\n          spyOn(dispatcher, 'deregister').and.callThrough();\n          finishInit(fixture);\n          expect(dispatcher.register).toHaveBeenCalledWith(testComponent.viewport);\n          fixture.destroy();\n          expect(dispatcher.deregister).toHaveBeenCalledWith(testComponent.viewport);\n        })));\n\n    it('should emit on viewChange inside the Angular zone', fakeAsync(() => {\n      const zoneTest = jasmine.createSpy('zone test');\n      testComponent.virtualForOf.viewChange.subscribe(() => zoneTest(NgZone.isInAngularZone()));\n      finishInit(fixture);\n      expect(zoneTest).toHaveBeenCalledWith(true);\n    }));\n\n    it('should not throw when disposing of a view that will not fit in the cache', fakeAsync(() => {\n      finishInit(fixture);\n      testComponent.items = new Array(200).fill(0);\n      testComponent.templateCacheSize = 1; // Reduce the cache size to something we can easily hit.\n      fixture.detectChanges();\n      flush();\n\n      expect(() => {\n        for (let i = 0; i < 50; i++) {\n          viewport.scrollToIndex(i);\n          triggerScroll(viewport);\n          fixture.detectChanges();\n          flush();\n        }\n      }).not.toThrow();\n    }));\n\n  });\n\n  describe('with RTL direction', () => {\n    let fixture: ComponentFixture<FixedSizeVirtualScrollWithRtlDirection>;\n    let testComponent: FixedSizeVirtualScrollWithRtlDirection;\n    let viewport: CdkVirtualScrollViewport;\n    let viewportEl: HTMLElement;\n    let contentWrapperEl: HTMLElement;\n\n    beforeEach(() => {\n      TestBed.configureTestingModule({\n        imports: [ScrollingModule],\n        declarations: [FixedSizeVirtualScrollWithRtlDirection],\n      }).compileComponents();\n\n      fixture = TestBed.createComponent(FixedSizeVirtualScrollWithRtlDirection);\n      testComponent = fixture.componentInstance;\n      viewport = testComponent.viewport;\n      viewportEl = viewport.elementRef.nativeElement;\n      contentWrapperEl =\n          viewportEl.querySelector('.cdk-virtual-scroll-content-wrapper') as HTMLElement;\n    });\n\n    it('should initially be scrolled all the way right and showing the first item in horizontal' +\n       ' mode', fakeAsync(() => {\n          testComponent.orientation = 'horizontal';\n          finishInit(fixture);\n\n          expect(viewport.measureScrollOffset('right')).toBe(0);\n          expect(contentWrapperEl.style.transform).toMatch(/translateX\\(0(px)?\\)/);\n          expect((contentWrapperEl.children[0] as HTMLElement).innerText.trim()).toBe('0 - 0');\n        }));\n\n    it('should scroll through items as user scrolls to the left in horizontal mode',\n        fakeAsync(() => {\n          testComponent.orientation = 'horizontal';\n          finishInit(fixture);\n\n          triggerScroll(viewport, testComponent.itemSize * testComponent.items.length);\n          fixture.detectChanges();\n          flush();\n\n          expect(contentWrapperEl.style.transform).toBe('translateX(-300px)');\n          expect((contentWrapperEl.children[0] as HTMLElement).innerText.trim()).toBe('6 - 6');\n        }));\n\n    it('should interpret scrollToOffset amount as an offset from the right in horizontal mode',\n        fakeAsync(() => {\n          testComponent.orientation = 'horizontal';\n          finishInit(fixture);\n\n          viewport.scrollToOffset(100);\n          triggerScroll(viewport);\n          fixture.detectChanges();\n          flush();\n\n          expect(viewport.measureScrollOffset('right')).toBe(100);\n        }));\n\n    it('should scroll to the correct index in horizontal mode', fakeAsync(() => {\n      testComponent.orientation = 'horizontal';\n      finishInit(fixture);\n\n      viewport.scrollToIndex(2);\n      triggerScroll(viewport);\n      fixture.detectChanges();\n      flush();\n\n      expect((contentWrapperEl.children[0] as HTMLElement).innerText.trim()).toBe('2 - 2');\n    }));\n\n    it('should emit the scrolled to index in horizontal mode', fakeAsync(() => {\n      testComponent.orientation = 'horizontal';\n      finishInit(fixture);\n\n      expect(testComponent.scrolledToIndex).toBe(0);\n\n      viewport.scrollToIndex(2);\n      triggerScroll(viewport);\n      fixture.detectChanges();\n      flush();\n\n      expect(testComponent.scrolledToIndex).toBe(2);\n    }));\n\n    it('should set total content size', fakeAsync(() => {\n      finishInit(fixture);\n\n      viewport.setTotalContentSize(10000);\n      flush();\n      fixture.detectChanges();\n\n      expect(viewport.elementRef.nativeElement.scrollHeight).toBe(10000);\n    }));\n\n    it('should set total content size in horizontal mode', fakeAsync(() => {\n      testComponent.orientation = 'horizontal';\n      finishInit(fixture);\n\n      viewport.setTotalContentSize(10000);\n      flush();\n      fixture.detectChanges();\n\n      expect(viewport.elementRef.nativeElement.scrollWidth).toBe(10000);\n    }));\n  });\n\n  describe('with no VirtualScrollStrategy', () => {\n    beforeEach(() => {\n      TestBed.configureTestingModule({\n        imports: [ScrollingModule],\n        declarations: [VirtualScrollWithNoStrategy],\n      }).compileComponents();\n    });\n\n    it('should fail on construction', fakeAsync(() => {\n      expect(() => TestBed.createComponent(VirtualScrollWithNoStrategy)).toThrowError(\n          'Error: cdk-virtual-scroll-viewport requires the \"itemSize\" property to be set.');\n    }));\n  });\n});\n\n\n/** Finish initializing the virtual scroll component at the beginning of a test. */\nfunction finishInit(fixture: ComponentFixture<any>) {\n  // On the first cycle we render and measure the viewport.\n  fixture.detectChanges();\n  flush();\n\n  // On the second cycle we render the items.\n  fixture.detectChanges();\n  flush();\n\n  // Flush the initial fake scroll event.\n  animationFrameScheduler.flush();\n  flush();\n  fixture.detectChanges();\n}\n\n/** Trigger a scroll event on the viewport (optionally setting a new scroll offset). */\nfunction triggerScroll(viewport: CdkVirtualScrollViewport, offset?: number) {\n  if (offset !== undefined) {\n    viewport.scrollToOffset(offset);\n  }\n  dispatchFakeEvent(viewport.elementRef.nativeElement, 'scroll');\n  animationFrameScheduler.flush();\n}\n\n\n@Component({\n  template: `\n    <cdk-virtual-scroll-viewport\n        [itemSize]=\"itemSize\" [minBufferPx]=\"minBufferPx\" [maxBufferPx]=\"maxBufferPx\"\n        [orientation]=\"orientation\" [style.height.px]=\"viewportHeight\"\n        [style.width.px]=\"viewportWidth\" (scrolledIndexChange)=\"scrolledToIndex = $event\">\n      <div class=\"item\"\n           *cdkVirtualFor=\"let item of items; let i = index; trackBy: trackBy; \\\n                           templateCacheSize: templateCacheSize\"\n           [style.height.px]=\"itemSize\" [style.width.px]=\"itemSize\">\n        {{i}} - {{item}}\n      </div>\n    </cdk-virtual-scroll-viewport>\n  `,\n  styles: [`\n    .cdk-virtual-scroll-content-wrapper {\n      display: flex;\n      flex-direction: column;\n    }\n\n    .cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper {\n      flex-direction: row;\n    }\n  `],\n  encapsulation: ViewEncapsulation.None,\n})\nclass FixedSizeVirtualScroll {\n  @ViewChild(CdkVirtualScrollViewport) viewport: CdkVirtualScrollViewport;\n  @ViewChild(CdkVirtualForOf) virtualForOf: CdkVirtualForOf<any>;\n  @ViewChild(CdkVirtualForOf, {read: ViewContainerRef}) virtualForViewContainer: ViewContainerRef;\n\n  @Input() orientation = 'vertical';\n  @Input() viewportSize = 200;\n  @Input() viewportCrossSize = 100;\n  @Input() itemSize = 50;\n  @Input() minBufferPx = 0;\n  @Input() maxBufferPx = 0;\n  @Input() items = Array(10).fill(0).map((_, i) => i);\n  @Input() trackBy: TrackByFunction<number>;\n  @Input() templateCacheSize = 20;\n\n  scrolledToIndex = 0;\n\n  get viewportWidth() {\n    return this.orientation == 'horizontal' ? this.viewportSize : this.viewportCrossSize;\n  }\n\n  get viewportHeight() {\n    return this.orientation == 'horizontal' ? this.viewportCrossSize : this.viewportSize;\n  }\n}\n\n@Component({\n  template: `\n    <cdk-virtual-scroll-viewport dir=\"rtl\"\n        [itemSize]=\"itemSize\" [minBufferPx]=\"minBufferPx\" [maxBufferPx]=\"maxBufferPx\"\n        [orientation]=\"orientation\" [style.height.px]=\"viewportHeight\"\n        [style.width.px]=\"viewportWidth\" (scrolledIndexChange)=\"scrolledToIndex = $event\">\n      <div class=\"item\"\n           *cdkVirtualFor=\"let item of items; let i = index; trackBy: trackBy; \\\n                           templateCacheSize: templateCacheSize\"\n           [style.height.px]=\"itemSize\" [style.width.px]=\"itemSize\">\n        {{i}} - {{item}}\n      </div>\n    </cdk-virtual-scroll-viewport>\n  `,\n  styles: [`\n    .cdk-virtual-scroll-content-wrapper {\n      display: flex;\n      flex-direction: column;\n    }\n\n    .cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper {\n      flex-direction: row;\n    }\n  `],\n  encapsulation: ViewEncapsulation.None,\n})\nclass FixedSizeVirtualScrollWithRtlDirection {\n  @ViewChild(CdkVirtualScrollViewport) viewport: CdkVirtualScrollViewport;\n  @ViewChild(CdkVirtualForOf, {read: ViewContainerRef}) virtualForViewContainer: ViewContainerRef;\n\n  @Input() orientation = 'vertical';\n  @Input() viewportSize = 200;\n  @Input() viewportCrossSize = 100;\n  @Input() itemSize = 50;\n  @Input() minBufferPx = 0;\n  @Input() maxBufferPx = 0;\n  @Input() items = Array(10).fill(0).map((_, i) => i);\n  @Input() trackBy: TrackByFunction<number>;\n  @Input() templateCacheSize = 20;\n\n  scrolledToIndex = 0;\n\n  get viewportWidth() {\n    return this.orientation == 'horizontal' ? this.viewportSize : this.viewportCrossSize;\n  }\n\n  get viewportHeight() {\n    return this.orientation == 'horizontal' ? this.viewportCrossSize : this.viewportSize;\n  }\n}\n\n@Component({\n  template: `\n    <cdk-virtual-scroll-viewport>\n      <div *cdkVirtualFor=\"let item of items\">{{item}}</div>\n    </cdk-virtual-scroll-viewport>\n  `\n})\nclass VirtualScrollWithNoStrategy {\n  items = [];\n}\n"]}