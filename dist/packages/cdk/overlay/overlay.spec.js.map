{"version":3,"file":"overlay.spec.js","sourceRoot":"","sources":["../../../../src/cdk/overlay/overlay.spec.ts"],"names":[],"mappings":"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","sourcesContent":["import {async, fakeAsync, tick, ComponentFixture, inject, TestBed} from '@angular/core/testing';\nimport {\n  Component,\n  NgModule,\n  ViewChild,\n  ViewContainerRef,\n  ErrorHandler,\n  Injectable,\n  EventEmitter,\n  NgZone,\n} from '@angular/core';\nimport {Direction, Directionality} from '@angular/cdk/bidi';\nimport {dispatchFakeEvent, MockNgZone} from '@angular/cdk/testing';\nimport {\n  ComponentPortal,\n  PortalModule,\n  TemplatePortal,\n  CdkPortal\n} from '@angular/cdk/portal';\nimport {Location} from '@angular/common';\nimport {SpyLocation} from '@angular/common/testing';\nimport {\n  Overlay,\n  OverlayContainer,\n  OverlayModule,\n  OverlayRef,\n  OverlayConfig,\n  PositionStrategy,\n  ScrollStrategy,\n} from './index';\nimport {OverlayReference} from './overlay-reference';\n\n\ndescribe('Overlay', () => {\n  let overlay: Overlay;\n  let componentPortal: ComponentPortal<PizzaMsg>;\n  let templatePortal: TemplatePortal;\n  let overlayContainerElement: HTMLElement;\n  let overlayContainer: OverlayContainer;\n  let viewContainerFixture: ComponentFixture<TestComponentWithTemplatePortals>;\n  let dir: Direction;\n  let zone: MockNgZone;\n  let mockLocation: SpyLocation;\n\n  beforeEach(async(() => {\n    dir = 'ltr';\n    TestBed.configureTestingModule({\n      imports: [OverlayModule, PortalModule, OverlayTestModule],\n      providers: [\n        {\n          provide: Directionality,\n          useFactory: () => {\n            const fakeDirectionality = {};\n            Object.defineProperty(fakeDirectionality, 'value', {get: () => dir});\n            return fakeDirectionality;\n          }\n        },\n        {\n          provide: NgZone,\n          useFactory: () => zone = new MockNgZone()\n        },\n        {\n          provide: Location,\n          useClass: SpyLocation\n        },\n      ],\n    }).compileComponents();\n  }));\n\n  beforeEach(inject([Overlay, OverlayContainer, Location],\n    (o: Overlay, oc: OverlayContainer, l: Location) => {\n      overlay = o;\n      overlayContainer = oc;\n      overlayContainerElement = oc.getContainerElement();\n\n      const fixture = TestBed.createComponent(TestComponentWithTemplatePortals);\n      fixture.detectChanges();\n      templatePortal = fixture.componentInstance.templatePortal;\n      componentPortal = new ComponentPortal(PizzaMsg, fixture.componentInstance.viewContainerRef);\n      viewContainerFixture = fixture;\n      mockLocation = l as SpyLocation;\n    }));\n\n  afterEach(() => {\n    overlayContainer.ngOnDestroy();\n  });\n\n  it('should load a component into an overlay', () => {\n    let overlayRef = overlay.create();\n    overlayRef.attach(componentPortal);\n\n    expect(overlayContainerElement.textContent).toContain('Pizza');\n\n    overlayRef.dispose();\n    expect(overlayContainerElement.childNodes.length).toBe(0);\n    expect(overlayContainerElement.textContent).toBe('');\n  });\n\n  it('should load a template portal into an overlay', () => {\n    let overlayRef = overlay.create();\n    overlayRef.attach(templatePortal);\n\n    expect(overlayContainerElement.textContent).toContain('Cake');\n\n    overlayRef.dispose();\n    expect(overlayContainerElement.childNodes.length).toBe(0);\n    expect(overlayContainerElement.textContent).toBe('');\n  });\n\n  it('should disable pointer events of the pane element if detached', () => {\n    let overlayRef = overlay.create();\n    let paneElement = overlayRef.overlayElement;\n\n    overlayRef.attach(componentPortal);\n    viewContainerFixture.detectChanges();\n\n    expect(paneElement.childNodes.length).not.toBe(0);\n    expect(paneElement.style.pointerEvents)\n      .toBe('auto', 'Expected the overlay pane to enable pointerEvents when attached.');\n\n    overlayRef.detach();\n\n    expect(paneElement.childNodes.length).toBe(0);\n    expect(paneElement.style.pointerEvents)\n      .toBe('none', 'Expected the overlay pane to disable pointerEvents when detached.');\n  });\n\n  it('should open multiple overlays', () => {\n    let pizzaOverlayRef = overlay.create();\n    pizzaOverlayRef.attach(componentPortal);\n\n    let cakeOverlayRef = overlay.create();\n    cakeOverlayRef.attach(templatePortal);\n\n    expect(overlayContainerElement.childNodes.length).toBe(2);\n    expect(overlayContainerElement.textContent).toContain('Pizza');\n    expect(overlayContainerElement.textContent).toContain('Cake');\n\n    pizzaOverlayRef.dispose();\n    expect(overlayContainerElement.childNodes.length).toBe(1);\n    expect(overlayContainerElement.textContent).toContain('Cake');\n\n    cakeOverlayRef.dispose();\n    expect(overlayContainerElement.childNodes.length).toBe(0);\n    expect(overlayContainerElement.textContent).toBe('');\n  });\n\n  it('should ensure that the most-recently-attached overlay is on top', (() => {\n    let pizzaOverlayRef = overlay.create();\n    let cakeOverlayRef = overlay.create();\n\n    pizzaOverlayRef.attach(componentPortal);\n    cakeOverlayRef.attach(templatePortal);\n\n    expect(pizzaOverlayRef.hostElement.nextSibling)\n        .toBeTruthy('Expected pizza to be on the bottom.');\n    expect(cakeOverlayRef.hostElement.nextSibling)\n        .toBeFalsy('Expected cake to be on top.');\n\n    pizzaOverlayRef.dispose();\n    cakeOverlayRef.detach();\n\n    pizzaOverlayRef = overlay.create();\n    pizzaOverlayRef.attach(componentPortal);\n    cakeOverlayRef.attach(templatePortal);\n\n    expect(pizzaOverlayRef.hostElement.nextSibling)\n        .toBeTruthy('Expected pizza to still be on the bottom.');\n    expect(cakeOverlayRef.hostElement.nextSibling)\n        .toBeFalsy('Expected cake to still be on top.');\n  }));\n\n  it('should take the default direction from the global Directionality', () => {\n    dir = 'rtl';\n    const overlayRef = overlay.create();\n\n    overlayRef.attach(componentPortal);\n    expect(overlayRef.hostElement.getAttribute('dir')).toBe('rtl');\n  });\n\n  it('should set the direction', () => {\n    const config = new OverlayConfig({direction: 'rtl'});\n    const overlayRef = overlay.create(config);\n\n    overlayRef.attach(componentPortal);\n\n    expect(overlayRef.hostElement.getAttribute('dir')).toBe('rtl');\n  });\n\n  it('should emit when an overlay is attached', () => {\n    let overlayRef = overlay.create();\n    let spy = jasmine.createSpy('attachments spy');\n\n    overlayRef.attachments().subscribe(spy);\n    overlayRef.attach(componentPortal);\n\n    expect(spy).toHaveBeenCalled();\n  });\n\n  it('should emit the attachment event after everything is added to the DOM', () => {\n    let config = new OverlayConfig({hasBackdrop: true});\n    let overlayRef = overlay.create(config);\n\n    overlayRef.attachments().subscribe(() => {\n      expect(overlayContainerElement.querySelector('pizza'))\n          .toBeTruthy('Expected the overlay to have been attached.');\n\n      expect(overlayContainerElement.querySelector('.cdk-overlay-backdrop'))\n          .toBeTruthy('Expected the backdrop to have been attached.');\n    });\n\n    overlayRef.attach(componentPortal);\n  });\n\n  it('should emit when an overlay is detached', () => {\n    let overlayRef = overlay.create();\n    let spy = jasmine.createSpy('detachments spy');\n\n    overlayRef.detachments().subscribe(spy);\n    overlayRef.attach(componentPortal);\n    overlayRef.detach();\n\n    expect(spy).toHaveBeenCalled();\n  });\n\n  it('should not emit to the detach stream if the overlay has not been attached', () => {\n    let overlayRef = overlay.create();\n    let spy = jasmine.createSpy('detachments spy');\n\n    overlayRef.detachments().subscribe(spy);\n    overlayRef.detach();\n\n    expect(spy).not.toHaveBeenCalled();\n  });\n\n  it('should not emit to the detach stream on dispose if the overlay was not attached', () => {\n    let overlayRef = overlay.create();\n    let spy = jasmine.createSpy('detachments spy');\n\n    overlayRef.detachments().subscribe(spy);\n    overlayRef.dispose();\n\n    expect(spy).not.toHaveBeenCalled();\n  });\n\n  it('should emit the detachment event after the overlay is removed from the DOM', () => {\n    let overlayRef = overlay.create();\n\n    overlayRef.detachments().subscribe(() => {\n      expect(overlayContainerElement.querySelector('pizza'))\n          .toBeFalsy('Expected the overlay to have been detached.');\n    });\n\n    overlayRef.attach(componentPortal);\n    overlayRef.detach();\n  });\n\n  it('should emit and complete the observables when an overlay is disposed', () => {\n    let overlayRef = overlay.create();\n    let disposeSpy = jasmine.createSpy('dispose spy');\n    let attachCompleteSpy = jasmine.createSpy('attachCompleteSpy spy');\n    let detachCompleteSpy = jasmine.createSpy('detachCompleteSpy spy');\n\n    overlayRef.attachments().subscribe(undefined, undefined, attachCompleteSpy);\n    overlayRef.detachments().subscribe(disposeSpy, undefined, detachCompleteSpy);\n\n    overlayRef.attach(componentPortal);\n    overlayRef.dispose();\n\n    expect(disposeSpy).toHaveBeenCalled();\n    expect(attachCompleteSpy).toHaveBeenCalled();\n    expect(detachCompleteSpy).toHaveBeenCalled();\n  });\n\n  it('should complete the attachment observable before the detachment one', () => {\n    let overlayRef = overlay.create();\n    let callbackOrder: string[] = [];\n\n    overlayRef.attachments().subscribe(undefined, undefined, () => callbackOrder.push('attach'));\n    overlayRef.detachments().subscribe(undefined, undefined, () => callbackOrder.push('detach'));\n\n    overlayRef.attach(componentPortal);\n    overlayRef.dispose();\n\n    expect(callbackOrder).toEqual(['attach', 'detach']);\n  });\n\n  it('should default to the ltr direction', () => {\n    const overlayRef = overlay.create();\n    expect(overlayRef.getConfig().direction).toBe('ltr');\n  });\n\n  it('should skip undefined values when applying the defaults', () => {\n    const overlayRef = overlay.create({direction: undefined});\n    expect(overlayRef.getConfig().direction).toBe('ltr');\n  });\n\n  it('should clear out all DOM element references on dispose', fakeAsync(() => {\n    const overlayRef = overlay.create({hasBackdrop: true});\n    overlayRef.attach(componentPortal);\n\n    expect(overlayRef.hostElement).toBeTruthy('Expected overlay host to be defined.');\n    expect(overlayRef.overlayElement).toBeTruthy('Expected overlay element to be defined.');\n    expect(overlayRef.backdropElement).toBeTruthy('Expected backdrop element to be defined.');\n\n    overlayRef.dispose();\n    tick(500);\n\n    expect(overlayRef.hostElement).toBeFalsy('Expected overlay host not to be referenced.');\n    expect(overlayRef.overlayElement).toBeFalsy('Expected overlay element not to be referenced.');\n    expect(overlayRef.backdropElement).toBeFalsy('Expected backdrop element not to be referenced.');\n  }));\n\n  it('should clear the backdrop timeout if the transition finishes first', fakeAsync(() => {\n    const overlayRef = overlay.create({hasBackdrop: true});\n\n    overlayRef.attach(componentPortal);\n    overlayRef.detach();\n\n    const backdrop = overlayContainerElement.querySelector('.cdk-overlay-backdrop')!;\n    dispatchFakeEvent(backdrop, 'transitionend');\n\n    // Note: we don't `tick` or `flush` here. The assertion is that\n    // `fakeAsync` will throw if we have an unflushed timer.\n  }));\n\n  it('should be able to use the `Overlay` provider during app initialization', () => {\n    /** Dummy provider that depends on `Overlay`. */\n    @Injectable()\n    class CustomErrorHandler extends ErrorHandler {\n      constructor(private _overlay: Overlay) { super(); }\n\n      handleError(error: any) {\n        const overlayRef = this._overlay.create({hasBackdrop: !!error});\n        overlayRef.dispose();\n      }\n    }\n\n    overlayContainer.ngOnDestroy();\n\n    TestBed\n      .resetTestingModule()\n      .configureTestingModule({\n        imports: [OverlayModule],\n        providers: [\n          CustomErrorHandler,\n          {provide: ErrorHandler, useExisting: CustomErrorHandler}\n        ]\n      });\n\n    expect(() => TestBed.compileComponents()).not.toThrow();\n  });\n\n  it('should keep the direction in sync with the passed in Directionality', () => {\n    const customDirectionality = {value: 'rtl', change: new EventEmitter<Direction>()};\n    const overlayRef = overlay.create({direction: customDirectionality as Directionality});\n\n    expect(overlayRef.getDirection()).toBe('rtl');\n    customDirectionality.value = 'ltr';\n    expect(overlayRef.getDirection()).toBe('ltr');\n  });\n\n  it('should add and remove the overlay host as the ref is being attached and detached', () => {\n    const overlayRef = overlay.create();\n\n    overlayRef.attach(componentPortal);\n    viewContainerFixture.detectChanges();\n\n    expect(overlayRef.hostElement.parentElement)\n        .toBeTruthy('Expected host element to be in the DOM.');\n\n    overlayRef.detach();\n\n    expect(overlayRef.hostElement.parentElement)\n        .toBeTruthy('Expected host element not to have been removed immediately.');\n\n    viewContainerFixture.detectChanges();\n    zone.simulateZoneExit();\n\n    expect(overlayRef.hostElement.parentElement)\n        .toBeFalsy('Expected host element to have been removed once the zone stabilizes.');\n\n    overlayRef.attach(componentPortal);\n    viewContainerFixture.detectChanges();\n\n    expect(overlayRef.hostElement.parentElement)\n        .toBeTruthy('Expected host element to be back in the DOM.');\n  });\n\n  it('should be able to dispose an overlay on navigation', () => {\n    const overlayRef = overlay.create({disposeOnNavigation: true});\n    overlayRef.attach(componentPortal);\n\n    expect(overlayContainerElement.textContent).toContain('Pizza');\n\n    mockLocation.simulateUrlPop('');\n    expect(overlayContainerElement.childNodes.length).toBe(0);\n    expect(overlayContainerElement.textContent).toBe('');\n  });\n\n  it('should add and remove classes while open', () => {\n    let overlayRef = overlay.create();\n    overlayRef.attach(componentPortal);\n\n    const pane = overlayContainerElement.querySelector('.cdk-overlay-pane') as HTMLElement;\n    expect(pane.classList)\n      .not.toContain('custom-class-one', 'Expected class to be initially missing');\n\n    overlayRef.addPanelClass('custom-class-one');\n    expect(pane.classList).toContain('custom-class-one', 'Expected class to be added');\n\n    overlayRef.removePanelClass('custom-class-one');\n    expect(pane.classList).not.toContain('custom-class-one', 'Expected class to be removed');\n\n    // Destroy the overlay and make sure no errors are thrown when trying to alter\n    // panel classes\n    overlayRef.dispose();\n    expect(() => overlayRef.addPanelClass('custom-class-two')).not.toThrowError();\n  });\n\n  describe('positioning', () => {\n    let config: OverlayConfig;\n\n    beforeEach(() => {\n      config = new OverlayConfig();\n    });\n\n    it('should apply the positioning strategy', fakeAsync(() => {\n      config.positionStrategy = new FakePositionStrategy();\n\n      overlay.create(config).attach(componentPortal);\n      viewContainerFixture.detectChanges();\n      zone.simulateZoneExit();\n      tick();\n\n      expect(overlayContainerElement.querySelectorAll('.fake-positioned').length).toBe(1);\n    }));\n\n    it('should not apply the position if it detaches before the zone stabilizes', fakeAsync(() => {\n      config.positionStrategy = new FakePositionStrategy();\n\n      const overlayRef = overlay.create(config);\n\n      spyOn(config.positionStrategy, 'apply');\n\n      overlayRef.attach(componentPortal);\n      overlayRef.detach();\n      viewContainerFixture.detectChanges();\n      tick();\n\n      expect(config.positionStrategy.apply).not.toHaveBeenCalled();\n    }));\n\n    it('should be able to swap position strategies', fakeAsync(() => {\n      const firstStrategy = new FakePositionStrategy();\n      const secondStrategy = new FakePositionStrategy();\n\n      [firstStrategy, secondStrategy].forEach(strategy => {\n        spyOn(strategy, 'attach');\n        spyOn(strategy, 'apply');\n        spyOn(strategy, 'dispose');\n      });\n\n      config.positionStrategy = firstStrategy;\n\n      const overlayRef = overlay.create(config);\n      overlayRef.attach(componentPortal);\n      viewContainerFixture.detectChanges();\n      zone.simulateZoneExit();\n      tick();\n\n      expect(firstStrategy.attach).toHaveBeenCalledTimes(1);\n      expect(firstStrategy.apply).toHaveBeenCalledTimes(1);\n\n      expect(secondStrategy.attach).not.toHaveBeenCalled();\n      expect(secondStrategy.apply).not.toHaveBeenCalled();\n\n      overlayRef.updatePositionStrategy(secondStrategy);\n      viewContainerFixture.detectChanges();\n      tick();\n\n      expect(firstStrategy.attach).toHaveBeenCalledTimes(1);\n      expect(firstStrategy.apply).toHaveBeenCalledTimes(1);\n      expect(firstStrategy.dispose).toHaveBeenCalledTimes(1);\n\n      expect(secondStrategy.attach).toHaveBeenCalledTimes(1);\n      expect(secondStrategy.apply).toHaveBeenCalledTimes(1);\n    }));\n\n    it('should not do anything when trying to swap a strategy with itself', fakeAsync(() => {\n      const strategy = new FakePositionStrategy();\n\n      spyOn(strategy, 'attach');\n      spyOn(strategy, 'apply');\n      spyOn(strategy, 'dispose');\n\n      config.positionStrategy = strategy;\n\n      const overlayRef = overlay.create(config);\n      overlayRef.attach(componentPortal);\n      viewContainerFixture.detectChanges();\n      zone.simulateZoneExit();\n      tick();\n\n      expect(strategy.attach).toHaveBeenCalledTimes(1);\n      expect(strategy.apply).toHaveBeenCalledTimes(1);\n      expect(strategy.dispose).not.toHaveBeenCalled();\n\n      overlayRef.updatePositionStrategy(strategy);\n      viewContainerFixture.detectChanges();\n      tick();\n\n      expect(strategy.attach).toHaveBeenCalledTimes(1);\n      expect(strategy.apply).toHaveBeenCalledTimes(1);\n      expect(strategy.dispose).not.toHaveBeenCalled();\n    }));\n\n  });\n\n  describe('size', () => {\n    let config: OverlayConfig;\n\n    beforeEach(() => {\n      config = new OverlayConfig();\n    });\n\n    it('should apply the width set in the config', () => {\n      config.width = 500;\n\n      const overlayRef = overlay.create(config);\n\n      overlayRef.attach(componentPortal);\n      expect(overlayRef.overlayElement.style.width).toBe('500px');\n    });\n\n    it('should support using other units if a string width is provided', () => {\n      config.width = '200%';\n\n      const overlayRef = overlay.create(config);\n\n      overlayRef.attach(componentPortal);\n      expect(overlayRef.overlayElement.style.width).toBe('200%');\n    });\n\n    it('should apply the height set in the config', () => {\n      config.height = 500;\n\n      const overlayRef = overlay.create(config);\n\n      overlayRef.attach(componentPortal);\n      expect(overlayRef.overlayElement.style.height).toBe('500px');\n    });\n\n    it('should support using other units if a string height is provided', () => {\n      config.height = '100vh';\n\n      const overlayRef = overlay.create(config);\n\n      overlayRef.attach(componentPortal);\n      expect(overlayRef.overlayElement.style.height).toBe('100vh');\n    });\n\n    it('should apply the min width set in the config', () => {\n      config.minWidth = 200;\n\n      const overlayRef = overlay.create(config);\n\n      overlayRef.attach(componentPortal);\n      expect(overlayRef.overlayElement.style.minWidth).toBe('200px');\n    });\n\n    it('should apply the min height set in the config', () => {\n      config.minHeight = 500;\n\n      const overlayRef = overlay.create(config);\n\n      overlayRef.attach(componentPortal);\n      expect(overlayRef.overlayElement.style.minHeight).toBe('500px');\n    });\n\n    it('should apply the max width set in the config', () => {\n      config.maxWidth = 200;\n\n      const overlayRef = overlay.create(config);\n\n      overlayRef.attach(componentPortal);\n      expect(overlayRef.overlayElement.style.maxWidth).toBe('200px');\n    });\n\n\n    it('should apply the max height set in the config', () => {\n      config.maxHeight = 500;\n\n      const overlayRef = overlay.create(config);\n\n      overlayRef.attach(componentPortal);\n      expect(overlayRef.overlayElement.style.maxHeight).toBe('500px');\n    });\n\n    it('should support zero widths and heights', () => {\n      config.width = 0;\n      config.height = 0;\n\n      const overlayRef = overlay.create(config);\n\n      overlayRef.attach(componentPortal);\n      expect(overlayRef.overlayElement.style.width).toBe('0px');\n      expect(overlayRef.overlayElement.style.height).toBe('0px');\n    });\n\n    it('should be able to reset the various size properties', () => {\n      config.minWidth = config.minHeight = 100;\n      config.width = config.height = 200;\n      config.maxWidth = config.maxHeight = 300;\n\n      const overlayRef = overlay.create(config);\n      overlayRef.attach(componentPortal);\n      const style = overlayRef.overlayElement.style;\n\n      expect(style.minWidth).toBe('100px');\n      expect(style.minHeight).toBe('100px');\n      expect(style.width).toBe('200px');\n      expect(style.height).toBe('200px');\n      expect(style.maxWidth).toBe('300px');\n      expect(style.maxHeight).toBe('300px');\n\n      overlayRef.updateSize({\n        minWidth: '',\n        minHeight: '',\n        width: '',\n        height: '',\n        maxWidth: '',\n        maxHeight: ''\n      });\n\n      overlayRef.updatePosition();\n\n      expect(style.minWidth).toBeFalsy();\n      expect(style.minHeight).toBeFalsy();\n      expect(style.width).toBeFalsy();\n      expect(style.height).toBeFalsy();\n      expect(style.maxWidth).toBeFalsy();\n      expect(style.maxHeight).toBeFalsy();\n    });\n\n  });\n\n  describe('backdrop', () => {\n    let config: OverlayConfig;\n\n    beforeEach(() => {\n      config = new OverlayConfig();\n      config.hasBackdrop = true;\n    });\n\n    it('should create and destroy an overlay backdrop', () => {\n      let overlayRef = overlay.create(config);\n      overlayRef.attach(componentPortal);\n\n      viewContainerFixture.detectChanges();\n      let backdrop = overlayContainerElement.querySelector('.cdk-overlay-backdrop') as HTMLElement;\n      expect(backdrop).toBeTruthy();\n      expect(backdrop.classList).not.toContain('cdk-overlay-backdrop-showing');\n\n      let backdropClickHandler = jasmine.createSpy('backdropClickHander');\n      overlayRef.backdropClick().subscribe(backdropClickHandler);\n\n      backdrop.click();\n      expect(backdropClickHandler).toHaveBeenCalledWith(jasmine.any(MouseEvent));\n    });\n\n    it('should complete the backdrop click stream once the overlay is destroyed', () => {\n      let overlayRef = overlay.create(config);\n\n      overlayRef.attach(componentPortal);\n      viewContainerFixture.detectChanges();\n\n      let completeHandler = jasmine.createSpy('backdrop complete handler');\n\n      overlayRef.backdropClick().subscribe(undefined, undefined, completeHandler);\n      overlayRef.dispose();\n\n      expect(completeHandler).toHaveBeenCalled();\n    });\n\n    it('should apply the default overlay backdrop class', () => {\n      let overlayRef = overlay.create(config);\n      overlayRef.attach(componentPortal);\n      viewContainerFixture.detectChanges();\n\n      let backdrop = overlayContainerElement.querySelector('.cdk-overlay-backdrop') as HTMLElement;\n      expect(backdrop.classList).toContain('cdk-overlay-dark-backdrop');\n    });\n\n    it('should apply a custom class to the backdrop', () => {\n      config.backdropClass = 'cdk-overlay-transparent-backdrop';\n\n      let overlayRef = overlay.create(config);\n      overlayRef.attach(componentPortal);\n      viewContainerFixture.detectChanges();\n\n      let backdrop = overlayContainerElement.querySelector('.cdk-overlay-backdrop') as HTMLElement;\n      expect(backdrop.classList).toContain('cdk-overlay-transparent-backdrop');\n    });\n\n    it('should apply multiple custom classes to the overlay', () => {\n      config.backdropClass = ['custom-class-1', 'custom-class-2'];\n\n      let overlayRef = overlay.create(config);\n      overlayRef.attach(componentPortal);\n      viewContainerFixture.detectChanges();\n\n      let backdrop = overlayContainerElement.querySelector('.cdk-overlay-backdrop') as HTMLElement;\n      expect(backdrop.classList).toContain('custom-class-1');\n      expect(backdrop.classList).toContain('custom-class-2');\n    });\n\n    it('should disable the pointer events of a backdrop that is being removed', () => {\n      let overlayRef = overlay.create(config);\n      overlayRef.attach(componentPortal);\n\n      viewContainerFixture.detectChanges();\n      let backdrop = overlayContainerElement.querySelector('.cdk-overlay-backdrop') as HTMLElement;\n\n      expect(backdrop.style.pointerEvents).toBeFalsy();\n\n      overlayRef.detach();\n\n      expect(backdrop.style.pointerEvents).toBe('none');\n    });\n\n    it('should insert the backdrop before the overlay host in the DOM order', () => {\n      const overlayRef = overlay.create(config);\n\n      overlayRef.attach(componentPortal);\n      viewContainerFixture.detectChanges();\n\n      const backdrop = overlayContainerElement.querySelector('.cdk-overlay-backdrop');\n      const host = overlayContainerElement.querySelector('.cdk-overlay-pane')!.parentElement!;\n      const children = Array.prototype.slice.call(overlayContainerElement.children);\n\n      expect(children.indexOf(backdrop)).toBeGreaterThan(-1);\n      expect(children.indexOf(host)).toBeGreaterThan(-1);\n      expect(children.indexOf(backdrop))\n        .toBeLessThan(children.indexOf(host), 'Expected backdrop to be before the host in the DOM');\n    });\n\n  });\n\n  describe('panelClass', () => {\n    it('should apply a custom overlay pane class', () => {\n      const config = new OverlayConfig({panelClass: 'custom-panel-class'});\n\n      overlay.create(config).attach(componentPortal);\n      viewContainerFixture.detectChanges();\n\n      const pane = overlayContainerElement.querySelector('.cdk-overlay-pane') as HTMLElement;\n      expect(pane.classList).toContain('custom-panel-class');\n    });\n\n    it('should be able to apply multiple classes', () => {\n      const config = new OverlayConfig({panelClass: ['custom-class-one', 'custom-class-two']});\n\n      overlay.create(config).attach(componentPortal);\n      viewContainerFixture.detectChanges();\n\n      const pane = overlayContainerElement.querySelector('.cdk-overlay-pane') as HTMLElement;\n\n      expect(pane.classList).toContain('custom-class-one');\n      expect(pane.classList).toContain('custom-class-two');\n    });\n\n    it('should remove the custom panel class when the overlay is detached', () => {\n      const config = new OverlayConfig({panelClass: 'custom-panel-class'});\n      const overlayRef = overlay.create(config);\n\n      overlayRef.attach(componentPortal);\n      viewContainerFixture.detectChanges();\n\n      const pane = overlayContainerElement.querySelector('.cdk-overlay-pane') as HTMLElement;\n      expect(pane.classList).toContain('custom-panel-class', 'Expected class to be added');\n\n      overlayRef.detach();\n      zone.simulateZoneExit();\n      viewContainerFixture.detectChanges();\n      expect(pane.classList).not.toContain('custom-panel-class', 'Expected class to be removed');\n\n      overlayRef.attach(componentPortal);\n      viewContainerFixture.detectChanges();\n      expect(pane.classList).toContain('custom-panel-class', 'Expected class to be re-added');\n    });\n\n    it('should wait for the overlay to be detached before removing the panelClass', () => {\n      const config = new OverlayConfig({panelClass: 'custom-panel-class'});\n      const overlayRef = overlay.create(config);\n\n      overlayRef.attach(componentPortal);\n      viewContainerFixture.detectChanges();\n\n      const pane = overlayContainerElement.querySelector('.cdk-overlay-pane') as HTMLElement;\n      expect(pane.classList).toContain('custom-panel-class', 'Expected class to be added');\n\n      overlayRef.detach();\n      viewContainerFixture.detectChanges();\n\n      expect(pane.classList)\n          .toContain('custom-panel-class', 'Expected class not to be removed immediately');\n\n      zone.simulateZoneExit();\n\n      expect(pane.classList)\n          .not.toContain('custom-panel-class', 'Expected class to be removed on stable');\n    });\n\n\n  });\n\n  describe('scroll strategy', () => {\n    let fakeScrollStrategy: FakeScrollStrategy;\n    let config: OverlayConfig;\n    let overlayRef: OverlayRef;\n\n    beforeEach(() => {\n      fakeScrollStrategy = new FakeScrollStrategy();\n      config = new OverlayConfig({scrollStrategy: fakeScrollStrategy});\n      overlayRef = overlay.create(config);\n    });\n\n    it('should attach the overlay ref to the scroll strategy', () => {\n      expect(fakeScrollStrategy.overlayRef).toBe(overlayRef,\n          'Expected scroll strategy to have been attached to the current overlay ref.');\n    });\n\n    it('should enable the scroll strategy when the overlay is attached', () => {\n      overlayRef.attach(componentPortal);\n      expect(fakeScrollStrategy.isEnabled).toBe(true, 'Expected scroll strategy to be enabled.');\n    });\n\n    it('should disable the scroll strategy once the overlay is detached', () => {\n      overlayRef.attach(componentPortal);\n      expect(fakeScrollStrategy.isEnabled).toBe(true, 'Expected scroll strategy to be enabled.');\n\n      overlayRef.detach();\n      expect(fakeScrollStrategy.isEnabled).toBe(false, 'Expected scroll strategy to be disabled.');\n    });\n\n    it('should disable the scroll strategy when the overlay is destroyed', () => {\n      overlayRef.dispose();\n      expect(fakeScrollStrategy.isEnabled).toBe(false, 'Expected scroll strategy to be disabled.');\n    });\n  });\n});\n\n/** Simple component for testing ComponentPortal. */\n@Component({\n  selector: 'pizza',\n  template: '<p>Pizza</p>'\n})\nclass PizzaMsg { }\n\n\n/** Test-bed component that contains a TempatePortal and an ElementRef. */\n@Component({template: `<ng-template cdk-portal>Cake</ng-template>`})\nclass TestComponentWithTemplatePortals {\n  @ViewChild(CdkPortal) templatePortal: CdkPortal;\n\n  constructor(public viewContainerRef: ViewContainerRef) { }\n}\n\n// Create a real (non-test) NgModule as a workaround for\n// https://github.com/angular/angular/issues/10760\nconst TEST_COMPONENTS = [PizzaMsg, TestComponentWithTemplatePortals];\n@NgModule({\n  imports: [OverlayModule, PortalModule],\n  exports: TEST_COMPONENTS,\n  declarations: TEST_COMPONENTS,\n  entryComponents: TEST_COMPONENTS,\n})\nclass OverlayTestModule { }\n\nclass FakePositionStrategy implements PositionStrategy {\n  element: HTMLElement;\n\n  apply(): void {\n    this.element.classList.add('fake-positioned');\n  }\n\n  attach(overlayRef: OverlayRef) {\n    this.element = overlayRef.overlayElement;\n  }\n\n  dispose() {}\n}\n\n\nclass FakeScrollStrategy implements ScrollStrategy {\n  isEnabled = false;\n  overlayRef: OverlayReference;\n\n  attach(overlayRef: OverlayReference) {\n    this.overlayRef = overlayRef;\n  }\n\n  enable() {\n    this.isEnabled = true;\n  }\n\n  disable() {\n    this.isEnabled = false;\n  }\n}\n"]}