{"version":3,"file":"overlay-directives.spec.js","sourceRoot":"","sources":["../../../../src/cdk/overlay/overlay-directives.spec.ts"],"names":[],"mappings":"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","sourcesContent":["import {Component, ViewChild} from '@angular/core';\nimport {By} from '@angular/platform-browser';\nimport {ComponentFixture, TestBed, async, inject, fakeAsync, tick} from '@angular/core/testing';\nimport {Directionality} from '@angular/cdk/bidi';\nimport {dispatchKeyboardEvent} from '@angular/cdk/testing';\nimport {ESCAPE, A} from '@angular/cdk/keycodes';\nimport {CdkConnectedOverlay, OverlayModule, CdkOverlayOrigin} from './index';\nimport {OverlayContainer} from './overlay-container';\nimport {\n  ConnectedOverlayPositionChange,\n  ConnectionPositionPair,\n} from './position/connected-position';\nimport {FlexibleConnectedPositionStrategy} from './position/flexible-connected-position-strategy';\n\n\ndescribe('Overlay directives', () => {\n  let overlayContainer: OverlayContainer;\n  let overlayContainerElement: HTMLElement;\n  let fixture: ComponentFixture<ConnectedOverlayDirectiveTest>;\n  let dir: {value: string};\n\n  beforeEach(() => {\n    TestBed.configureTestingModule({\n      imports: [OverlayModule],\n      declarations: [ConnectedOverlayDirectiveTest, ConnectedOverlayPropertyInitOrder],\n      providers: [{provide: Directionality, useFactory: () => dir = {value: 'ltr'}}],\n    });\n  });\n\n  beforeEach(() => {\n    fixture = TestBed.createComponent(ConnectedOverlayDirectiveTest);\n    fixture.detectChanges();\n  });\n\n  beforeEach(inject([OverlayContainer], (oc: OverlayContainer) => {\n    overlayContainer = oc;\n    overlayContainerElement = oc.getContainerElement();\n  }));\n\n  afterEach(() => {\n    overlayContainer.ngOnDestroy();\n  });\n\n  /** Returns the current open overlay pane element. */\n  function getPaneElement() {\n    return overlayContainerElement.querySelector('.cdk-overlay-pane') as HTMLElement;\n  }\n\n  it(`should attach the overlay based on the open property`, () => {\n    fixture.componentInstance.isOpen = true;\n    fixture.detectChanges();\n\n    expect(overlayContainerElement.textContent).toContain('Menu content');\n\n    fixture.componentInstance.isOpen = false;\n    fixture.detectChanges();\n\n    expect(overlayContainerElement.textContent).toBe('');\n  });\n\n  it('should destroy the overlay when the directive is destroyed', () => {\n    fixture.componentInstance.isOpen = true;\n    fixture.detectChanges();\n    fixture.destroy();\n\n    expect(overlayContainerElement.textContent!.trim()).toBe('');\n    expect(getPaneElement())\n      .toBeFalsy('Expected the overlay pane element to be removed when disposed.');\n  });\n\n  it('should use a connected position strategy with a default set of positions', () => {\n    fixture.componentInstance.isOpen = true;\n    fixture.detectChanges();\n\n    let testComponent: ConnectedOverlayDirectiveTest =\n        fixture.debugElement.componentInstance;\n    let overlayDirective = testComponent.connectedOverlayDirective;\n    let strategy =\n      overlayDirective.overlayRef.getConfig().positionStrategy as FlexibleConnectedPositionStrategy;\n\n    expect(strategy instanceof FlexibleConnectedPositionStrategy).toBe(true);\n    expect(strategy.positions.length).toBeGreaterThan(0);\n  });\n\n  it('should set and update the `dir` attribute', () => {\n    dir.value = 'rtl';\n    fixture.componentInstance.isOpen = true;\n    fixture.detectChanges();\n\n    let boundingBox =\n        overlayContainerElement.querySelector('.cdk-overlay-connected-position-bounding-box')!;\n\n    expect(boundingBox.getAttribute('dir')).toBe('rtl');\n\n    fixture.componentInstance.isOpen = false;\n    fixture.detectChanges();\n\n    dir.value = 'ltr';\n    fixture.componentInstance.isOpen = true;\n    fixture.detectChanges();\n\n    boundingBox =\n        overlayContainerElement.querySelector('.cdk-overlay-connected-position-bounding-box')!;\n\n    expect(boundingBox.getAttribute('dir')).toBe('ltr');\n  });\n\n  it('should close when pressing escape', () => {\n    fixture.componentInstance.isOpen = true;\n    fixture.detectChanges();\n\n    dispatchKeyboardEvent(document.body, 'keydown', ESCAPE);\n    fixture.detectChanges();\n\n    expect(overlayContainerElement.textContent!.trim()).toBe('',\n        'Expected overlay to have been detached.');\n  });\n\n  it('should not depend on the order in which the `origin` and `open` are set', async(() => {\n    fixture.destroy();\n\n    const propOrderFixture = TestBed.createComponent(ConnectedOverlayPropertyInitOrder);\n    propOrderFixture.detectChanges();\n\n    const overlayDirective = propOrderFixture.componentInstance.connectedOverlayDirective;\n\n    expect(() => {\n      overlayDirective.open = true;\n      overlayDirective.origin = propOrderFixture.componentInstance.trigger;\n      propOrderFixture.detectChanges();\n    }).not.toThrow();\n  }));\n\n  describe('inputs', () => {\n\n    it('should set the width', () => {\n      fixture.componentInstance.width = 250;\n      fixture.componentInstance.isOpen = true;\n      fixture.detectChanges();\n\n      const pane = overlayContainerElement.querySelector('.cdk-overlay-pane') as HTMLElement;\n      expect(pane.style.width).toEqual('250px');\n\n      fixture.componentInstance.isOpen = false;\n      fixture.detectChanges();\n\n      fixture.componentInstance.width = 500;\n      fixture.componentInstance.isOpen = true;\n      fixture.detectChanges();\n\n      expect(pane.style.width).toEqual('500px');\n    });\n\n    it('should set the height', () => {\n      fixture.componentInstance.height = '100vh';\n      fixture.componentInstance.isOpen = true;\n      fixture.detectChanges();\n\n      const pane = overlayContainerElement.querySelector('.cdk-overlay-pane') as HTMLElement;\n      expect(pane.style.height).toEqual('100vh');\n\n      fixture.componentInstance.isOpen = false;\n      fixture.detectChanges();\n\n      fixture.componentInstance.height = '50vh';\n      fixture.componentInstance.isOpen = true;\n      fixture.detectChanges();\n\n      expect(pane.style.height).toEqual('50vh');\n    });\n\n    it('should set the min width', () => {\n      fixture.componentInstance.minWidth = 250;\n      fixture.componentInstance.isOpen = true;\n      fixture.detectChanges();\n\n      const pane = overlayContainerElement.querySelector('.cdk-overlay-pane') as HTMLElement;\n      expect(pane.style.minWidth).toEqual('250px');\n\n      fixture.componentInstance.isOpen = false;\n      fixture.detectChanges();\n\n      fixture.componentInstance.minWidth = 500;\n      fixture.componentInstance.isOpen = true;\n      fixture.detectChanges();\n\n      expect(pane.style.minWidth).toEqual('500px');\n    });\n\n    it('should set the min height', () => {\n      fixture.componentInstance.minHeight = '500px';\n      fixture.componentInstance.isOpen = true;\n      fixture.detectChanges();\n\n      const pane = overlayContainerElement.querySelector('.cdk-overlay-pane') as HTMLElement;\n      expect(pane.style.minHeight).toEqual('500px');\n\n      fixture.componentInstance.isOpen = false;\n      fixture.detectChanges();\n\n      fixture.componentInstance.minHeight = '250px';\n      fixture.componentInstance.isOpen = true;\n      fixture.detectChanges();\n\n      expect(pane.style.minHeight).toEqual('250px');\n    });\n\n    it('should create the backdrop if designated', () => {\n      fixture.componentInstance.hasBackdrop = true;\n      fixture.componentInstance.isOpen = true;\n      fixture.detectChanges();\n\n      expect(overlayContainerElement.querySelector('.cdk-overlay-backdrop')).toBeTruthy();\n    });\n\n    it('should not create the backdrop by default', () => {\n      fixture.componentInstance.isOpen = true;\n      fixture.detectChanges();\n\n      expect(overlayContainerElement.querySelector('.cdk-overlay-backdrop')).toBeNull();\n    });\n\n    it('should be able to change hasBackdrop after the overlay has been initialized',\n      fakeAsync(() => {\n        // Open once with a backdrop\n        fixture.componentInstance.hasBackdrop = true;\n        fixture.componentInstance.isOpen = true;\n        fixture.detectChanges();\n\n        expect(overlayContainerElement.querySelector('.cdk-overlay-backdrop')).toBeTruthy();\n\n        fixture.componentInstance.isOpen = false;\n        fixture.detectChanges();\n        tick(500);\n\n        // Open again without a backdrop.\n        fixture.componentInstance.hasBackdrop = false;\n        fixture.componentInstance.isOpen = true;\n        fixture.detectChanges();\n\n        expect(overlayContainerElement.querySelector('.cdk-overlay-backdrop')).toBeFalsy();\n      }));\n\n    it('should set the custom backdrop class', () => {\n      fixture.componentInstance.hasBackdrop = true;\n      fixture.componentInstance.isOpen = true;\n      fixture.detectChanges();\n\n      const backdrop =\n          overlayContainerElement.querySelector('.cdk-overlay-backdrop') as HTMLElement;\n      expect(backdrop.classList).toContain('mat-test-class');\n    });\n\n    it('should set the custom panel class', () => {\n      fixture.componentInstance.isOpen = true;\n      fixture.detectChanges();\n\n      const panel\n        = overlayContainerElement.querySelector('.cdk-overlay-pane') as HTMLElement;\n      expect(panel.classList).toContain('cdk-test-panel-class');\n    });\n\n    it('should set the offsetX', () => {\n      fixture.componentInstance.offsetX = 5;\n      fixture.componentInstance.isOpen = true;\n      fixture.detectChanges();\n\n      const pane = overlayContainerElement.querySelector('.cdk-overlay-pane') as HTMLElement;\n\n      expect(pane.style.transform).toContain('translateX(5px)');\n\n      fixture.componentInstance.isOpen = false;\n      fixture.detectChanges();\n\n      fixture.componentInstance.offsetX = 15;\n      fixture.componentInstance.isOpen = true;\n      fixture.detectChanges();\n\n      expect(pane.style.transform).toContain('translateX(15px)');\n    });\n\n    it('should set the offsetY', () => {\n      const trigger = fixture.debugElement.query(By.css('button')).nativeElement;\n      trigger.style.position = 'absolute';\n      trigger.style.top = '30px';\n      trigger.style.height = '20px';\n\n      fixture.componentInstance.offsetY = 45;\n      fixture.componentInstance.isOpen = true;\n      fixture.detectChanges();\n\n      const pane = overlayContainerElement.querySelector('.cdk-overlay-pane') as HTMLElement;\n\n      expect(pane.style.transform).toContain('translateY(45px)');\n\n      fixture.componentInstance.isOpen = false;\n      fixture.detectChanges();\n\n      fixture.componentInstance.offsetY = 55;\n      fixture.componentInstance.isOpen = true;\n      fixture.detectChanges();\n      expect(pane.style.transform).toContain('translateY(55px)');\n    });\n\n    it('should be able to update the origin after init', () => {\n      const testComponent = fixture.componentInstance;\n\n      testComponent.isOpen = true;\n      fixture.detectChanges();\n\n      let triggerRect = fixture.nativeElement.querySelector('#trigger').getBoundingClientRect();\n      let overlayRect = getPaneElement().getBoundingClientRect();\n\n      expect(Math.floor(triggerRect.left)).toBe(Math.floor(overlayRect.left));\n      expect(Math.floor(triggerRect.bottom)).toBe(Math.floor(overlayRect.top));\n\n      testComponent.triggerOverride = testComponent.otherTrigger;\n      fixture.detectChanges();\n\n      triggerRect = fixture.nativeElement.querySelector('#otherTrigger').getBoundingClientRect();\n      overlayRect = getPaneElement().getBoundingClientRect();\n\n      expect(Math.floor(triggerRect.left)).toBe(Math.floor(overlayRect.left));\n      expect(Math.floor(triggerRect.bottom)).toBe(Math.floor(overlayRect.top));\n    });\n\n    it('should update the positions if they change after init', () => {\n      const trigger = fixture.nativeElement.querySelector('#trigger');\n\n      trigger.style.position = 'fixed';\n      trigger.style.top = '200px';\n      trigger.style.left = '200px';\n\n      fixture.componentInstance.isOpen = true;\n      fixture.detectChanges();\n\n      let triggerRect = trigger.getBoundingClientRect();\n      let overlayRect = getPaneElement().getBoundingClientRect();\n\n      expect(Math.floor(triggerRect.left)).toBe(Math.floor(overlayRect.left));\n      expect(Math.floor(triggerRect.bottom)).toBe(Math.floor(overlayRect.top));\n\n      fixture.componentInstance.isOpen = false;\n      fixture.detectChanges();\n\n      fixture.componentInstance.positionOverrides = [{\n        originX: 'end',\n        originY: 'bottom',\n        overlayX: 'start',\n        overlayY: 'top',\n        // TODO(jelbourn) figure out why, when compiling with bazel, these offsets are required.\n        offsetX: 0,\n        offsetY: 0,\n        panelClass: 'custom-class'\n      }];\n\n      fixture.componentInstance.isOpen = true;\n      fixture.detectChanges();\n\n      triggerRect = trigger.getBoundingClientRect();\n      overlayRect = getPaneElement().getBoundingClientRect();\n\n      expect(Math.floor(triggerRect.right)).toBe(Math.floor(overlayRect.left));\n      expect(Math.floor(triggerRect.bottom)).toBe(Math.floor(overlayRect.top));\n    });\n\n    it('should take the offset from the position', () => {\n      const trigger = fixture.nativeElement.querySelector('#trigger');\n\n      trigger.style.position = 'fixed';\n      trigger.style.top = '200px';\n      trigger.style.left = '200px';\n\n      fixture.componentInstance.positionOverrides = [{\n        originX: 'start',\n        originY: 'top',\n        overlayX: 'start',\n        overlayY: 'top',\n        offsetX: 20,\n        offsetY: 10,\n        panelClass: 'custom-class'\n      }];\n\n      fixture.componentInstance.isOpen = true;\n      fixture.detectChanges();\n\n      const triggerRect = trigger.getBoundingClientRect();\n      const overlayRect = getPaneElement().getBoundingClientRect();\n\n      expect(Math.floor(overlayRect.top)).toBe(Math.floor(triggerRect.top) + 10);\n      expect(Math.floor(overlayRect.left)).toBe(Math.floor(triggerRect.left) + 20);\n    });\n\n    it('should be able to set the viewport margin', () => {\n      expect(fixture.componentInstance.connectedOverlayDirective.viewportMargin).not.toBe(10);\n\n      fixture.componentInstance.viewportMargin = 10;\n      fixture.detectChanges();\n\n      expect(fixture.componentInstance.connectedOverlayDirective.viewportMargin).toBe(10);\n    });\n\n    it('should allow for flexible positioning to be enabled', () => {\n      expect(fixture.componentInstance.connectedOverlayDirective.flexibleDimensions).not.toBe(true);\n\n      fixture.componentInstance.flexibleDimensions = true;\n      fixture.detectChanges();\n\n      expect(fixture.componentInstance.connectedOverlayDirective.flexibleDimensions).toBe(true);\n    });\n\n    it('should allow for growing after open to be enabled', () => {\n      expect(fixture.componentInstance.connectedOverlayDirective.growAfterOpen).not.toBe(true);\n\n      fixture.componentInstance.growAfterOpen = true;\n      fixture.detectChanges();\n\n      expect(fixture.componentInstance.connectedOverlayDirective.growAfterOpen).toBe(true);\n    });\n\n    it('should allow for pushing to be enabled', () => {\n      expect(fixture.componentInstance.connectedOverlayDirective.push).not.toBe(true);\n\n      fixture.componentInstance.push = true;\n      fixture.detectChanges();\n\n      expect(fixture.componentInstance.connectedOverlayDirective.push).toBe(true);\n    });\n\n    it('should update the element size if it changes while open', () => {\n      fixture.componentInstance.width = 250;\n      fixture.componentInstance.height = 250;\n      fixture.componentInstance.isOpen = true;\n      fixture.detectChanges();\n\n      const pane = overlayContainerElement.querySelector('.cdk-overlay-pane') as HTMLElement;\n      expect(pane.style.width).toBe('250px');\n      expect(pane.style.height).toBe('250px');\n\n      fixture.componentInstance.width = 100;\n      fixture.componentInstance.height = 100;\n      fixture.detectChanges();\n\n      expect(pane.style.width).toBe('100px');\n      expect(pane.style.height).toBe('100px');\n    });\n\n  });\n\n  describe('outputs', () => {\n    it('should emit backdropClick appropriately', () => {\n      fixture.componentInstance.hasBackdrop = true;\n      fixture.componentInstance.isOpen = true;\n      fixture.detectChanges();\n\n      const backdrop =\n          overlayContainerElement.querySelector('.cdk-overlay-backdrop') as HTMLElement;\n      backdrop.click();\n      fixture.detectChanges();\n\n      expect(fixture.componentInstance.backdropClickHandler)\n          .toHaveBeenCalledWith(jasmine.any(MouseEvent));\n    });\n\n    it('should emit positionChange appropriately', () => {\n      expect(fixture.componentInstance.positionChangeHandler).not.toHaveBeenCalled();\n      fixture.componentInstance.isOpen = true;\n      fixture.detectChanges();\n\n      expect(fixture.componentInstance.positionChangeHandler).toHaveBeenCalled();\n\n      const latestCall = fixture.componentInstance.positionChangeHandler.calls.mostRecent();\n\n      expect(latestCall.args[0] instanceof ConnectedOverlayPositionChange)\n          .toBe(true, `Expected directive to emit an instance of ConnectedOverlayPositionChange.`);\n    });\n\n    it('should emit attach and detach appropriately', () => {\n      expect(fixture.componentInstance.attachHandler).not.toHaveBeenCalled();\n      expect(fixture.componentInstance.detachHandler).not.toHaveBeenCalled();\n      fixture.componentInstance.isOpen = true;\n      fixture.detectChanges();\n\n      expect(fixture.componentInstance.attachHandler).toHaveBeenCalled();\n      expect(fixture.componentInstance.attachResult instanceof HTMLElement)\n          .toBe(true, `Expected pane to be populated with HTML elements when attach was called.`);\n      expect(fixture.componentInstance.detachHandler).not.toHaveBeenCalled();\n\n      fixture.componentInstance.isOpen = false;\n      fixture.detectChanges();\n      expect(fixture.componentInstance.detachHandler).toHaveBeenCalled();\n    });\n\n    it('should emit the keydown events from the overlay', () => {\n      expect(fixture.componentInstance.keydownHandler).not.toHaveBeenCalled();\n\n      fixture.componentInstance.isOpen = true;\n      fixture.detectChanges();\n\n      const event = dispatchKeyboardEvent(document.body, 'keydown', A);\n      fixture.detectChanges();\n\n      expect(fixture.componentInstance.keydownHandler).toHaveBeenCalledWith(event);\n    });\n\n  });\n\n});\n\n\n@Component({\n  template: `\n  <button cdk-overlay-origin id=\"trigger\" #trigger=\"cdkOverlayOrigin\">Toggle menu</button>\n  <button cdk-overlay-origin id=\"otherTrigger\" #otherTrigger=\"cdkOverlayOrigin\">Toggle menu</button>\n\n  <ng-template cdk-connected-overlay\n            [cdkConnectedOverlayOpen]=\"isOpen\"\n            [cdkConnectedOverlayWidth]=\"width\"\n            [cdkConnectedOverlayHeight]=\"height\"\n            [cdkConnectedOverlayOrigin]=\"triggerOverride || trigger\"\n            [cdkConnectedOverlayHasBackdrop]=\"hasBackdrop\"\n            [cdkConnectedOverlayViewportMargin]=\"viewportMargin\"\n            [cdkConnectedOverlayFlexibleDimensions]=\"flexibleDimensions\"\n            [cdkConnectedOverlayGrowAfterOpen]=\"growAfterOpen\"\n            [cdkConnectedOverlayPush]=\"push\"\n            cdkConnectedOverlayBackdropClass=\"mat-test-class\"\n            cdkConnectedOverlayPanelClass=\"cdk-test-panel-class\"\n            (backdropClick)=\"backdropClickHandler($event)\"\n            [cdkConnectedOverlayOffsetX]=\"offsetX\"\n            [cdkConnectedOverlayOffsetY]=\"offsetY\"\n            (positionChange)=\"positionChangeHandler($event)\"\n            (attach)=\"attachHandler()\"\n            (detach)=\"detachHandler()\"\n            (overlayKeydown)=\"keydownHandler($event)\"\n            [cdkConnectedOverlayMinWidth]=\"minWidth\"\n            [cdkConnectedOverlayMinHeight]=\"minHeight\"\n            [cdkConnectedOverlayPositions]=\"positionOverrides\">\n    <p>Menu content</p>\n  </ng-template>`,\n})\nclass ConnectedOverlayDirectiveTest {\n  @ViewChild(CdkConnectedOverlay) connectedOverlayDirective: CdkConnectedOverlay;\n  @ViewChild('trigger') trigger: CdkOverlayOrigin;\n  @ViewChild('otherTrigger') otherTrigger: CdkOverlayOrigin;\n\n  isOpen = false;\n  width: number | string;\n  height: number | string;\n  minWidth: number | string;\n  minHeight: number | string;\n  offsetX: number;\n  offsetY: number;\n  triggerOverride: CdkOverlayOrigin;\n  hasBackdrop: boolean;\n  viewportMargin: number;\n  flexibleDimensions: boolean;\n  growAfterOpen: boolean;\n  push: boolean;\n  backdropClickHandler = jasmine.createSpy('backdropClick handler');\n  positionChangeHandler = jasmine.createSpy('positionChange handler');\n  keydownHandler = jasmine.createSpy('keydown handler');\n  positionOverrides: ConnectionPositionPair[];\n  attachHandler = jasmine.createSpy('attachHandler').and.callFake(() => {\n    this.attachResult =\n        this.connectedOverlayDirective.overlayRef.overlayElement.querySelector('p') as HTMLElement;\n  });\n  detachHandler = jasmine.createSpy('detachHandler');\n  attachResult: HTMLElement;\n}\n\n@Component({\n  template: `\n  <button cdk-overlay-origin #trigger=\"cdkOverlayOrigin\">Toggle menu</button>\n  <ng-template cdk-connected-overlay>Menu content</ng-template>`,\n})\nclass ConnectedOverlayPropertyInitOrder {\n  @ViewChild(CdkConnectedOverlay) connectedOverlayDirective: CdkConnectedOverlay;\n  @ViewChild('trigger') trigger: CdkOverlayOrigin;\n}\n"]}