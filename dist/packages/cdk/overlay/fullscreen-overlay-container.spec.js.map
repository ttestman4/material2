{"version":3,"file":"fullscreen-overlay-container.spec.js","sourceRoot":"","sources":["../../../../src/cdk/overlay/fullscreen-overlay-container.spec.ts"],"names":[],"mappings":"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","sourcesContent":["import {async, inject, TestBed} from '@angular/core/testing';\nimport {Component, NgModule, ViewChild, ViewContainerRef} from '@angular/core';\nimport {PortalModule, CdkPortal} from '@angular/cdk/portal';\nimport {DOCUMENT} from '@angular/platform-browser';\nimport {Overlay, OverlayContainer, OverlayModule, FullscreenOverlayContainer} from './index';\n\ndescribe('FullscreenOverlayContainer', () => {\n  let overlay: Overlay;\n  let overlayContainer: FullscreenOverlayContainer;\n  let fullscreenListeners: Set<Function>;\n  let fakeDocument: any;\n\n  beforeEach(async(() => {\n    fullscreenListeners = new Set();\n\n    TestBed.configureTestingModule({\n      imports: [OverlayTestModule],\n      providers: [{\n        provide: DOCUMENT,\n        useFactory: () => {\n          // Provide a (very limited) stub for the document. This is the most practical solution for\n          // now since we only hit a handful of Document APIs. If we end up having to add more\n          // stubs here, we should reconsider whether to use a Proxy instead. Avoiding a proxy for\n          // now since it isn't supported on IE. See:\n          // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy\n          fakeDocument = {\n            body: document.body,\n            fullscreenElement: document.createElement('div'),\n            fullscreenEnabled: true,\n            addEventListener: function(eventName: string, listener: Function) {\n              if (eventName === 'fullscreenchange') {\n                fullscreenListeners.add(listener);\n              } else {\n                document.addEventListener.apply(document, arguments);\n              }\n            },\n            removeEventListener: function(eventName: string, listener: Function) {\n              if (eventName === 'fullscreenchange') {\n                fullscreenListeners.delete(listener);\n              } else {\n                document.addEventListener.apply(document, arguments);\n              }\n            },\n            querySelectorAll: function() {\n              return document.querySelectorAll.apply(document, arguments);\n            },\n            createElement: function() {\n              return document.createElement.apply(document, arguments);\n            },\n          };\n\n          return fakeDocument;\n        }\n      }]\n    }).compileComponents();\n  }));\n\n  beforeEach(inject([Overlay, OverlayContainer], (o: Overlay, oc: OverlayContainer) => {\n    overlay = o;\n    overlayContainer = oc as FullscreenOverlayContainer;\n  }));\n\n  afterEach(() => {\n    overlayContainer.ngOnDestroy();\n    fakeDocument = null;\n  });\n\n  it('should open an overlay inside a fullscreen element and move it to the body', () => {\n    const fixture = TestBed.createComponent(TestComponentWithTemplatePortals);\n    const overlayRef = overlay.create();\n    const fullscreenElement = fakeDocument.fullscreenElement;\n\n    overlayRef.attach(fixture.componentInstance.templatePortal);\n    fixture.detectChanges();\n\n    expect(fullscreenElement.contains(overlayRef.overlayElement)).toBe(true);\n\n    fakeDocument.fullscreenElement = null;\n    fullscreenListeners.forEach(listener => listener());\n    fixture.detectChanges();\n\n    expect(fullscreenElement.contains(overlayRef.overlayElement)).toBe(false);\n    expect(document.body.contains(overlayRef.overlayElement)).toBe(true);\n  });\n\n  it('should open an overlay inside the body and move it to a fullscreen element', () => {\n    const fullscreenElement = fakeDocument.fullscreenElement;\n    fakeDocument.fullscreenElement = null;\n\n    const fixture = TestBed.createComponent(TestComponentWithTemplatePortals);\n    const overlayRef = overlay.create();\n\n    overlayRef.attach(fixture.componentInstance.templatePortal);\n    fixture.detectChanges();\n\n    expect(fullscreenElement.contains(overlayRef.overlayElement)).toBe(false);\n    expect(document.body.contains(overlayRef.overlayElement)).toBe(true);\n\n    fakeDocument.fullscreenElement = fullscreenElement;\n    fullscreenListeners.forEach(listener => listener());\n    fixture.detectChanges();\n\n    expect(fullscreenElement.contains(overlayRef.overlayElement)).toBe(true);\n  });\n\n});\n\n/** Test-bed component that contains a TempatePortal and an ElementRef. */\n@Component({\n  template: `<ng-template cdk-portal>Cake</ng-template>`,\n  providers: [Overlay],\n})\nclass TestComponentWithTemplatePortals {\n  @ViewChild(CdkPortal) templatePortal: CdkPortal;\n\n  constructor(public viewContainerRef: ViewContainerRef) { }\n}\n\n@NgModule({\n  imports: [OverlayModule, PortalModule],\n  declarations: [TestComponentWithTemplatePortals],\n  providers: [{\n    provide: OverlayContainer,\n    useClass: FullscreenOverlayContainer\n  }]\n})\nclass OverlayTestModule { }\n"]}