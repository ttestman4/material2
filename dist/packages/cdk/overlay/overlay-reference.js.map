{"version":3,"file":"overlay-reference.js","sourceRoot":"","sources":["../../../../src/cdk/overlay/overlay-reference.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAgBA,sCAYC;;;IAXC,kCAAqC;;IACrC,kCAAkB;;IAClB,mCAAoB;;IACpB,0CAA4B;;IAC5B,uCAAyB;;IACzB,qCAAqB;;IACrB,uCAA2B;;IAC3B,sCAAkC;;IAClC,0CAA2B;;IAC3B,wCAA8B;;IAC9B,wCAAwD","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Portal} from '@angular/cdk/portal';\nimport {Direction, Directionality} from '@angular/cdk/bidi';\n\n/**\n * Basic interface for an overlay. Used to avoid circular type references between\n * `OverlayRef`, `PositionStrategy` and `ScrollStrategy`, and `OverlayConfig`.\n * @docs-private\n */\nexport interface OverlayReference {\n  attach: (portal: Portal<any>) => any;\n  detach: () => any;\n  dispose: () => void;\n  overlayElement: HTMLElement;\n  hostElement: HTMLElement;\n  getConfig: () => any;\n  hasAttached: () => boolean;\n  updateSize: (config: any) => void;\n  updatePosition: () => void;\n  getDirection: () => Direction;\n  setDirection: (dir: Direction | Directionality) => void;\n}\n"]}