{"version":3,"file":"directionality.spec.js","sourceRoot":"","sources":["../../../../src/cdk/bidi/directionality.spec.ts"],"names":[],"mappings":"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","sourcesContent":["import {async, fakeAsync, TestBed} from '@angular/core/testing';\nimport {Component, ViewChild} from '@angular/core';\nimport {By} from '@angular/platform-browser';\nimport {BidiModule, Directionality, Dir, Direction, DIR_DOCUMENT} from './index';\n\ndescribe('Directionality', () => {\n  let fakeDocument: FakeDocument;\n\n  beforeEach(async(() => {\n    fakeDocument = {body: {}, documentElement: {}};\n\n    TestBed.configureTestingModule({\n      imports: [BidiModule],\n      declarations: [ElementWithDir, ElementWithPredefinedAutoDir, InjectsDirectionality],\n      providers: [{provide: DIR_DOCUMENT, useFactory: () => fakeDocument}],\n    }).compileComponents();\n  }));\n\n  describe('Service', () => {\n    it('should read dir from the html element if not specified on the body', () => {\n      fakeDocument.documentElement.dir = 'rtl';\n\n      const fixture = TestBed.createComponent(InjectsDirectionality);\n      const testComponent = fixture.debugElement.componentInstance;\n\n      expect(testComponent.dir.value).toBe('rtl');\n    });\n\n    it('should read dir from the body even it is also specified on the html element', () => {\n      fakeDocument.documentElement.dir = 'ltr';\n      fakeDocument.body.dir = 'rtl';\n\n      const fixture = TestBed.createComponent(InjectsDirectionality);\n      const testComponent = fixture.debugElement.componentInstance;\n\n      expect(testComponent.dir.value).toBe('rtl');\n    });\n\n    it('should default to ltr if nothing is specified on either body or the html element', () => {\n      const fixture = TestBed.createComponent(InjectsDirectionality);\n      const testComponent = fixture.debugElement.componentInstance;\n\n      expect(testComponent.dir.value).toBe('ltr');\n    });\n\n    it('should complete the `change` stream on destroy', () => {\n      const fixture = TestBed.createComponent(InjectsDirectionality);\n      const spy = jasmine.createSpy('complete spy');\n      const subscription =\n          fixture.componentInstance.dir.change.subscribe(undefined, undefined, spy);\n\n      fixture.componentInstance.dir.ngOnDestroy();\n      expect(spy).toHaveBeenCalled();\n\n      subscription.unsubscribe();\n    });\n\n    it('should default to ltr if an invalid direction is set on the body', () => {\n      fakeDocument.body.dir = 'not-valid';\n\n      const fixture = TestBed.createComponent(InjectsDirectionality);\n      const testComponent = fixture.debugElement.componentInstance;\n\n      expect(testComponent.dir.value).toBe('ltr');\n    });\n\n  });\n\n  describe('Dir directive', () => {\n    it('should provide itself as Directionality', () => {\n      const fixture = TestBed.createComponent(ElementWithDir);\n      const injectedDirectionality =\n        fixture.debugElement.query(By.directive(InjectsDirectionality)).componentInstance.dir;\n\n      fixture.detectChanges();\n\n      expect(injectedDirectionality.value).toBe('rtl');\n    });\n\n    it('should emit a change event when the value changes', fakeAsync(() => {\n      const fixture = TestBed.createComponent(ElementWithDir);\n      const injectedDirectionality =\n        fixture.debugElement.query(By.directive(InjectsDirectionality)).componentInstance.dir;\n\n      fixture.detectChanges();\n\n      let direction = injectedDirectionality.value;\n      injectedDirectionality.change.subscribe((dir: Direction) => { direction = dir; });\n\n      expect(direction).toBe('rtl');\n      expect(injectedDirectionality.value).toBe('rtl');\n      expect(fixture.componentInstance.changeCount).toBe(0);\n\n      fixture.componentInstance.direction = 'ltr';\n\n      fixture.detectChanges();\n\n      expect(direction).toBe('ltr');\n      expect(injectedDirectionality.value).toBe('ltr');\n      expect(fixture.componentInstance.changeCount).toBe(1);\n    }));\n\n    it('should complete the change stream on destroy', fakeAsync(() => {\n      const fixture = TestBed.createComponent(ElementWithDir);\n      const dir =\n        fixture.debugElement.query(By.directive(InjectsDirectionality)).componentInstance.dir;\n      const spy = jasmine.createSpy('complete spy');\n      const subscription = dir.change.subscribe(undefined, undefined, spy);\n\n      fixture.destroy();\n      expect(spy).toHaveBeenCalled();\n      subscription.unsubscribe();\n    }));\n\n    it('should default to ltr if an invalid value is passed in', () => {\n      const fixture = TestBed.createComponent(ElementWithDir);\n\n      fixture.detectChanges();\n      expect(fixture.componentInstance.dir.value).toBe('rtl');\n\n      fixture.componentInstance.direction = 'not-valid';\n      fixture.detectChanges();\n      expect(fixture.componentInstance.dir.value).toBe('ltr');\n    });\n\n    it('should preserve the consumer-provided `dir` attribute while ' +\n      'normalizing the directive value', () => {\n        const fixture = TestBed.createComponent(ElementWithPredefinedAutoDir);\n        fixture.detectChanges();\n\n        const element = fixture.nativeElement.querySelector('div');\n\n        expect(element.getAttribute('dir')).toBe('auto');\n        expect(fixture.componentInstance.dir.value).toBe('ltr');\n      });\n\n  });\n});\n\n\n@Component({\n  template: `\n    <div [dir]=\"direction\" (dirChange)=\"changeCount = changeCount + 1\">\n      <injects-directionality></injects-directionality>\n    </div>\n  `\n})\nclass ElementWithDir {\n  @ViewChild(Dir) dir: Dir;\n  direction = 'rtl';\n  changeCount = 0;\n}\n\n@Component({\n  template: '<div dir=\"auto\"></div>'\n})\nclass ElementWithPredefinedAutoDir {\n  @ViewChild(Dir) dir: Dir;\n}\n\n/** Test component with Dir directive. */\n@Component({\n  selector: 'injects-directionality',\n  template: `<div></div>`\n})\nclass InjectsDirectionality {\n  constructor(public dir: Directionality) { }\n}\n\ninterface FakeDocument {\n  documentElement: {dir?: string};\n  body: {dir?: string};\n}\n"]}