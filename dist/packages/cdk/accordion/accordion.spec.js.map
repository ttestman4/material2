{"version":3,"file":"accordion.spec.js","sourceRoot":"","sources":["../../../../src/cdk/accordion/accordion.spec.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA,iDAAqD;AACrD,sCAAmD;AACnD,8DAA6C;AAC7C,mEAA6E;AAC7E,2CAAkE;AAElE,QAAQ,CAAC,cAAc,EAAE;IACvB,UAAU,CAAC,eAAK,CAAC;QACf,iBAAO,CAAC,sBAAsB,CAAC;YAC7B,OAAO,EAAE;gBACP,oCAAuB;gBACvB,+BAAkB;aACnB;YACD,YAAY,EAAE;gBACZ,UAAU;gBACV,WAAW;aACZ;SACF,CAAC,CAAC;QACH,iBAAO,CAAC,iBAAiB,EAAE,CAAC;IAC9B,CAAC,CAAC,CAAC,CAAC;IAEJ,EAAE,CAAC,mDAAmD,EAAE;QACtD,IAAM,OAAO,GAAG,iBAAO,CAAC,eAAe,CAAC,UAAU,CAAC,CAAC;QAC9C,IAAA;;0FAE2D,EAF1D,kBAAU,EAAE,mBAE8C,CAAC;QAElE,UAAU,CAAC,IAAI,EAAE,CAAC;QAClB,OAAO,CAAC,aAAa,EAAE,CAAC;QACxB,MAAM,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,UAAU,EAAE,CAAC;QACzC,MAAM,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC,SAAS,EAAE,CAAC;QAEzC,WAAW,CAAC,IAAI,EAAE,CAAC;QACnB,OAAO,CAAC,aAAa,EAAE,CAAC;QACxB,MAAM,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,SAAS,EAAE,CAAC;QACxC,MAAM,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC,UAAU,EAAE,CAAC;IAC5C,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,2DAA2D,EAAE;QAC9D,IAAM,OAAO,GAAG,iBAAO,CAAC,eAAe,CAAC,UAAU,CAAC,CAAC;QAC9C,IAAA;;0FAE2D,EAF1D,kBAAU,EAAE,mBAE8C,CAAC;QAElE,OAAO,CAAC,iBAAiB,CAAC,KAAK,GAAG,IAAI,CAAC;QACvC,OAAO,CAAC,aAAa,EAAE,CAAC;QACxB,UAAU,CAAC,QAAQ,GAAG,IAAI,CAAC;QAC3B,WAAW,CAAC,QAAQ,GAAG,IAAI,CAAC;QAC5B,OAAO,CAAC,aAAa,EAAE,CAAC;QACxB,MAAM,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,UAAU,EAAE,CAAC;QACzC,MAAM,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC,UAAU,EAAE,CAAC;IAC5C,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,wDAAwD,EAAE;QAC3D,IAAM,OAAO,GAAG,iBAAO,CAAC,eAAe,CAAC,WAAW,CAAC,CAAC;QACrD,IAAM,SAAS,GAAG,OAAO,CAAC,iBAAiB,CAAC,SAAS,CAAC;QACtD,IAAM,SAAS,GAAG,OAAO,CAAC,iBAAiB,CAAC,SAAS,CAAC;QAEtD,MAAM,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC;IAC5D,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAOH;IALA;QAME,UAAK,GAAY,KAAK,CAAC;IACzB,CAAC;IAFK,UAAU;QALf,gBAAS,CAAC,EAAC,QAAQ,EAAE,yJAIH,EAAC,CAAC;OACf,UAAU,CAEf;IAAD,iBAAC;CAAA,AAFD,IAEC;AASD;IAAA;IAGA,CAAC;IAFyB;QAAvB,gBAAS,CAAC,WAAW,CAAC;kCAAY,6BAAgB;kDAAC;IAC5B;QAAvB,gBAAS,CAAC,WAAW,CAAC;kCAAY,6BAAgB;kDAAC;IAFhD,WAAW;QANhB,gBAAS,CAAC,EAAC,QAAQ,EAAE,+MAKH,EAAC,CAAC;OACf,WAAW,CAGhB;IAAD,kBAAC;CAAA,AAHD,IAGC","sourcesContent":["import {async, TestBed} from '@angular/core/testing';\nimport {Component, ViewChild} from '@angular/core';\nimport {By} from '@angular/platform-browser';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {CdkAccordionModule, CdkAccordionItem} from './public-api';\n\ndescribe('CdkAccordion', () => {\n  beforeEach(async(() => {\n    TestBed.configureTestingModule({\n      imports: [\n        BrowserAnimationsModule,\n        CdkAccordionModule\n      ],\n      declarations: [\n        SetOfItems,\n        NestedItems,\n      ],\n    });\n    TestBed.compileComponents();\n  }));\n\n  it('should ensure only one item is expanded at a time', () => {\n    const fixture = TestBed.createComponent(SetOfItems);\n    const [firstPanel, secondPanel] = fixture.debugElement\n      .queryAll(By.directive(CdkAccordionItem))\n      .map(el => el.injector.get<CdkAccordionItem>(CdkAccordionItem));\n\n    firstPanel.open();\n    fixture.detectChanges();\n    expect(firstPanel.expanded).toBeTruthy();\n    expect(secondPanel.expanded).toBeFalsy();\n\n    secondPanel.open();\n    fixture.detectChanges();\n    expect(firstPanel.expanded).toBeFalsy();\n    expect(secondPanel.expanded).toBeTruthy();\n  });\n\n  it('should allow multiple items to be expanded simultaneously', () => {\n    const fixture = TestBed.createComponent(SetOfItems);\n    const [firstPanel, secondPanel] = fixture.debugElement\n      .queryAll(By.directive(CdkAccordionItem))\n      .map(el => el.injector.get<CdkAccordionItem>(CdkAccordionItem));\n\n    fixture.componentInstance.multi = true;\n    fixture.detectChanges();\n    firstPanel.expanded = true;\n    secondPanel.expanded = true;\n    fixture.detectChanges();\n    expect(firstPanel.expanded).toBeTruthy();\n    expect(secondPanel.expanded).toBeTruthy();\n  });\n\n  it('should not register nested items to the same accordion', () => {\n    const fixture = TestBed.createComponent(NestedItems);\n    const innerItem = fixture.componentInstance.innerItem;\n    const outerItem = fixture.componentInstance.outerItem;\n\n    expect(innerItem.accordion).not.toBe(outerItem.accordion);\n  });\n});\n\n@Component({template: `\n  <cdk-accordion [multi]=\"multi\">\n    <cdk-accordion-item></cdk-accordion-item>\n    <cdk-accordion-item></cdk-accordion-item>\n  </cdk-accordion>`})\nclass SetOfItems {\n  multi: boolean = false;\n}\n\n\n@Component({template: `\n  <cdk-accordion>\n    <cdk-accordion-item #outerItem=\"cdkAccordionItem\">\n      <cdk-accordion-item #innerItem=\"cdkAccordionItem\"></cdk-accordion-item>\n    </cdk-accordion-item>\n  </cdk-accordion>`})\nclass NestedItems {\n  @ViewChild('outerItem') outerItem: CdkAccordionItem;\n  @ViewChild('innerItem') innerItem: CdkAccordionItem;\n}\n"]}