{"version":3,"file":"accordion-item.spec.js","sourceRoot":"","sources":["../../../../src/cdk/accordion/accordion-item.spec.ts"],"names":[],"mappings":"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","sourcesContent":["import {async, TestBed, ComponentFixture} from '@angular/core/testing';\nimport {Component} from '@angular/core';\nimport {By} from '@angular/platform-browser';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {CdkAccordionModule, CdkAccordionItem} from './public-api';\n\ndescribe('CdkAccordionItem', () => {\n  beforeEach(async(() => {\n    TestBed.configureTestingModule({\n      imports: [\n        BrowserAnimationsModule,\n        CdkAccordionModule\n      ],\n      declarations: [\n        SingleItem,\n        ItemGroupWithoutAccordion,\n        ItemGroupWithAccordion\n      ],\n    });\n    TestBed.compileComponents();\n  }));\n\n  describe('single item', () => {\n    let fixture: ComponentFixture<SingleItem>;\n    let item: CdkAccordionItem;\n\n    beforeEach(() => {\n      fixture = TestBed.createComponent(SingleItem);\n      item = fixture.debugElement\n        .query(By.directive(CdkAccordionItem))\n        .injector.get<CdkAccordionItem>(CdkAccordionItem);\n    });\n\n    describe('that is not disabled', () => {\n      beforeEach(() => {\n        item.disabled = false;\n      });\n\n      it('should toggle its expanded state', () => {\n        expect(item.expanded).toBe(false);\n        item.toggle();\n        expect(item.expanded).toBe(true);\n        item.toggle();\n        expect(item.expanded).toBe(false);\n      });\n\n      it('should set its expanded state to expanded', () => {\n        item.expanded = false;\n        item.open();\n        expect(item.expanded).toBe(true);\n      });\n\n      it('should set its expanded state to closed', () => {\n        item.expanded = true;\n        item.close();\n        expect(item.expanded).toBe(false);\n      });\n\n      it('should emit a closed event', () => {\n        item.open();\n        fixture.detectChanges();\n        spyOn(item.closed, 'emit');\n        item.close();\n        fixture.detectChanges();\n        expect(item.closed.emit).toHaveBeenCalled();\n      });\n\n      it('should not emit a closed event when the item is closed already', () => {\n        expect(item.expanded).toBe(false);\n        spyOn(item.closed, 'emit');\n        item.close();\n        fixture.detectChanges();\n        expect(item.closed.emit).not.toHaveBeenCalled();\n      });\n\n      it('should emit an opened event', () => {\n        spyOn(item.opened, 'emit');\n        item.open();\n        fixture.detectChanges();\n        expect(item.opened.emit).toHaveBeenCalled();\n      });\n\n      it('should emit a destroyed event', () => {\n        spyOn(item.destroyed, 'emit');\n        item.ngOnDestroy();\n        fixture.detectChanges();\n        expect(item.destroyed.emit).toHaveBeenCalled();\n      });\n    });\n\n    describe('that is disabled', () => {\n      beforeEach(() => {\n        item.disabled = true;\n      });\n\n      it('should not toggle its expanded state', () => {\n        expect(item.expanded).toBe(false);\n        item.toggle();\n        expect(item.expanded).toBe(false);\n      });\n\n      it('should not set its expanded state to expanded', () => {\n        item.expanded = false;\n        item.open();\n        expect(item.expanded).toBe(false);\n      });\n\n      it('should not set its expanded state to closed', () => {\n        item.expanded = true;\n        item.close();\n        expect(item.expanded).toBe(true);\n      });\n\n      it('should not emit a closed event', () => {\n        spyOn(item.closed, 'emit');\n        item.close();\n        fixture.detectChanges();\n        expect(item.closed.emit).not.toHaveBeenCalled();\n      });\n\n      it('should not emit an opened event', () => {\n        spyOn(item.opened, 'emit');\n        item.open();\n        fixture.detectChanges();\n        expect(item.opened.emit).not.toHaveBeenCalled();\n      });\n\n      it('should emit a destroyed event', () => {\n        spyOn(item.destroyed, 'emit');\n        item.ngOnDestroy();\n        fixture.detectChanges();\n        expect(item.destroyed.emit).toHaveBeenCalled();\n      });\n    });\n\n    it('should emit to and complete the `destroyed` stream on destroy', () => {\n      const emitSpy = jasmine.createSpy('emit spy');\n      const completeSpy = jasmine.createSpy('complete spy');\n      const subscription = item.destroyed.subscribe(emitSpy, undefined, completeSpy);\n\n      fixture.detectChanges();\n      fixture.destroy();\n\n      expect(emitSpy).toHaveBeenCalled();\n      expect(completeSpy).toHaveBeenCalled();\n\n      subscription.unsubscribe();\n    });\n\n    it('should complete the `opened` stream on destroy', () => {\n      const completeSpy = jasmine.createSpy('complete spy');\n      const subscription = item.opened.subscribe(() => {}, undefined, completeSpy);\n\n      fixture.detectChanges();\n      fixture.destroy();\n\n      expect(completeSpy).toHaveBeenCalled();\n\n      subscription.unsubscribe();\n    });\n\n    it('should complete the `closed` stream on destroy', () => {\n      const completeSpy = jasmine.createSpy('complete spy');\n      const subscription = item.closed.subscribe(() => {}, undefined, completeSpy);\n\n      fixture.detectChanges();\n      fixture.destroy();\n\n      expect(completeSpy).toHaveBeenCalled();\n\n      subscription.unsubscribe();\n    });\n\n  });\n\n  describe('items without accordion', () => {\n    let fixture: ComponentFixture<SingleItem>;\n    let firstItem: CdkAccordionItem;\n    let secondItem: CdkAccordionItem;\n\n    beforeEach(() => {\n      fixture = TestBed.createComponent(ItemGroupWithoutAccordion);\n      [firstItem, secondItem] = fixture.debugElement\n        .queryAll(By.directive(CdkAccordionItem))\n        .map(el => el.injector.get<CdkAccordionItem>(CdkAccordionItem));\n    });\n\n    it('should not change expanded state based on unrelated items', () => {\n      expect(firstItem.expanded).toBe(false);\n      expect(secondItem.expanded).toBe(false);\n      firstItem.open();\n      fixture.detectChanges();\n      expect(firstItem.expanded).toBe(true);\n      expect(secondItem.expanded).toBe(false);\n      secondItem.open();\n      fixture.detectChanges();\n      expect(firstItem.expanded).toBe(true);\n      expect(secondItem.expanded).toBe(true);\n    });\n\n    it('should not change expanded state for disabled items', () => {\n      firstItem.disabled = true;\n      expect(firstItem.expanded).toBe(false);\n      expect(secondItem.expanded).toBe(false);\n      firstItem.open();\n      fixture.detectChanges();\n      expect(firstItem.expanded).toBe(false);\n      expect(secondItem.expanded).toBe(false);\n      secondItem.open();\n      fixture.detectChanges();\n      expect(firstItem.expanded).toBe(false);\n      expect(secondItem.expanded).toBe(true);\n    });\n  });\n\n\n  describe('items in accordion', () => {\n    let fixture: ComponentFixture<SingleItem>;\n    let firstItem: CdkAccordionItem;\n    let secondItem: CdkAccordionItem;\n\n    beforeEach(() => {\n      fixture = TestBed.createComponent(ItemGroupWithAccordion);\n      [firstItem, secondItem] = fixture.debugElement\n        .queryAll(By.directive(CdkAccordionItem))\n        .map(el => el.injector.get<CdkAccordionItem>(CdkAccordionItem));\n    });\n\n    it('should change expanded state based on related items', () => {\n      expect(firstItem.expanded).toBe(false);\n      expect(secondItem.expanded).toBe(false);\n      firstItem.open();\n      fixture.detectChanges();\n      expect(firstItem.expanded).toBe(true);\n      expect(secondItem.expanded).toBe(false);\n      secondItem.open();\n      fixture.detectChanges();\n      expect(firstItem.expanded).toBe(false);\n      expect(secondItem.expanded).toBe(true);\n    });\n  });\n});\n\n@Component({\n  template: `<cdk-accordion-item #item1></cdk-accordion-item>`\n})\nclass SingleItem {}\n\n@Component({\n  template: `\n    <cdk-accordion-item #item1></cdk-accordion-item>\n    <cdk-accordion-item #item2></cdk-accordion-item>\n  `\n})\nclass ItemGroupWithoutAccordion {}\n\n@Component({\n  template: `\n    <cdk-accordion>\n      <cdk-accordion-item #item1></cdk-accordion-item>\n      <cdk-accordion-item #item2></cdk-accordion-item>\n    </cdk-accordion>\n  `\n})\nclass ItemGroupWithAccordion {}\n"]}