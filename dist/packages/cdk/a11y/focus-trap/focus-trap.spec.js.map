{"version":3,"file":"focus-trap.spec.js","sourceRoot":"","sources":["../../../../../src/cdk/a11y/focus-trap/focus-trap.spec.ts"],"names":[],"mappings":"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","sourcesContent":["import {Platform} from '@angular/cdk/platform';\nimport {Component, PLATFORM_ID, ViewChild} from '@angular/core';\nimport {async, ComponentFixture, TestBed} from '@angular/core/testing';\nimport {A11yModule, FocusTrap, CdkTrapFocus} from '../index';\n\n\ndescribe('FocusTrap', () => {\n\n  beforeEach(async(() => {\n    TestBed.configureTestingModule({\n      imports: [A11yModule],\n      declarations: [\n        FocusTrapWithBindings,\n        SimpleFocusTrap,\n        FocusTrapTargets,\n        FocusTrapWithSvg,\n        FocusTrapWithoutFocusableElements,\n        FocusTrapWithAutoCapture,\n        FocusTrapUnfocusableTarget,\n      ],\n    });\n\n    TestBed.compileComponents();\n  }));\n\n  describe('with default element', () => {\n    let fixture: ComponentFixture<SimpleFocusTrap>;\n    let focusTrapInstance: FocusTrap;\n\n    beforeEach(() => {\n      fixture = TestBed.createComponent(SimpleFocusTrap);\n      fixture.detectChanges();\n      focusTrapInstance = fixture.componentInstance.focusTrapDirective.focusTrap;\n    });\n\n    it('wrap focus from end to start', () => {\n      // Because we can't mimic a real tab press focus change in a unit test, just call the\n      // focus event handler directly.\n      const result = focusTrapInstance.focusFirstTabbableElement();\n\n      expect(document.activeElement!.nodeName.toLowerCase())\n          .toBe('input', 'Expected input element to be focused');\n      expect(result).toBe(true, 'Expected return value to be true if focus was shifted.');\n    });\n\n    it('should wrap focus from start to end', () => {\n      // Because we can't mimic a real tab press focus change in a unit test, just call the\n      // focus event handler directly.\n      const result = focusTrapInstance.focusLastTabbableElement();\n\n      const platformId = TestBed.get(PLATFORM_ID);\n      // In iOS button elements are never tabbable, so the last element will be the input.\n      const lastElement = new Platform(platformId).IOS ? 'input' : 'button';\n\n      expect(document.activeElement!.nodeName.toLowerCase())\n          .toBe(lastElement, `Expected ${lastElement} element to be focused`);\n\n      expect(result).toBe(true, 'Expected return value to be true if focus was shifted.');\n    });\n\n    it('should return false if it did not manage to find a focusable element', () => {\n      fixture.destroy();\n\n      const newFixture = TestBed.createComponent(FocusTrapWithoutFocusableElements);\n      newFixture.detectChanges();\n\n      const focusTrap = newFixture.componentInstance.focusTrapDirective.focusTrap;\n      const result = focusTrap.focusFirstTabbableElement();\n\n      expect(result).toBe(false);\n    });\n\n    it('should be enabled by default', () => {\n      expect(focusTrapInstance.enabled).toBe(true);\n    });\n\n  });\n\n  describe('with bindings', () => {\n    let fixture: ComponentFixture<FocusTrapWithBindings>;\n\n    beforeEach(() => {\n      fixture = TestBed.createComponent(FocusTrapWithBindings);\n      fixture.detectChanges();\n    });\n\n    it('should clean up its anchor sibling elements on destroy', () => {\n      const rootElement = fixture.debugElement.nativeElement as HTMLElement;\n\n      expect(rootElement.querySelectorAll('div.cdk-visually-hidden').length).toBe(2);\n\n      fixture.componentInstance.renderFocusTrap = false;\n      fixture.detectChanges();\n\n      expect(rootElement.querySelectorAll('div.cdk-visually-hidden').length).toBe(0);\n    });\n\n    it('should set the appropriate tabindex on the anchors, based on the disabled state', () => {\n      const anchors = Array.from(\n        fixture.debugElement.nativeElement.querySelectorAll('div.cdk-visually-hidden')\n      ) as HTMLElement[];\n\n      expect(anchors.every(current => current.getAttribute('tabindex') === '0')).toBe(true);\n      expect(anchors.every(current => current.getAttribute('aria-hidden') === 'true')).toBe(true);\n\n      fixture.componentInstance._isFocusTrapEnabled = false;\n      fixture.detectChanges();\n\n      expect(anchors.every(current => !current.hasAttribute('tabindex'))).toBe(true);\n    });\n  });\n\n  describe('with focus targets', () => {\n    let fixture: ComponentFixture<FocusTrapTargets>;\n    let focusTrapInstance: FocusTrap;\n\n    beforeEach(() => {\n      fixture = TestBed.createComponent(FocusTrapTargets);\n      fixture.detectChanges();\n      focusTrapInstance = fixture.componentInstance.focusTrapDirective.focusTrap;\n    });\n\n    it('should be able to set initial focus target', () => {\n      // Because we can't mimic a real tab press focus change in a unit test, just call the\n      // focus event handler directly.\n      focusTrapInstance.focusInitialElement();\n      expect(document.activeElement!.id).toBe('middle');\n    });\n\n    it('should be able to prioritize the first focus target', () => {\n      // Because we can't mimic a real tab press focus change in a unit test, just call the\n      // focus event handler directly.\n      focusTrapInstance.focusFirstTabbableElement();\n      expect(document.activeElement!.id).toBe('first');\n    });\n\n    it('should be able to prioritize the last focus target', () => {\n      // Because we can't mimic a real tab press focus change in a unit test, just call the\n      // focus event handler directly.\n      focusTrapInstance.focusLastTabbableElement();\n      expect(document.activeElement!.id).toBe('last');\n    });\n\n    it('should warn if the initial focus target is not focusable', () => {\n      const alternateFixture = TestBed.createComponent(FocusTrapUnfocusableTarget);\n      alternateFixture.detectChanges();\n      focusTrapInstance = fixture.componentInstance.focusTrapDirective.focusTrap;\n\n      spyOn(console, 'warn');\n      focusTrapInstance.focusInitialElement();\n\n      expect(console.warn).toHaveBeenCalled();\n    });\n\n  });\n\n  describe('special cases', () => {\n    it('should not throw when it has a SVG child', () => {\n      let fixture = TestBed.createComponent(FocusTrapWithSvg);\n\n      fixture.detectChanges();\n\n      let focusTrapInstance = fixture.componentInstance.focusTrapDirective.focusTrap;\n\n      expect(() => focusTrapInstance.focusFirstTabbableElement()).not.toThrow();\n      expect(() => focusTrapInstance.focusLastTabbableElement()).not.toThrow();\n    });\n  });\n\n  describe('with autoCapture', () => {\n    it('should automatically capture and return focus on init / destroy', async(() => {\n      const fixture = TestBed.createComponent(FocusTrapWithAutoCapture);\n      fixture.detectChanges();\n\n      const buttonOutsideTrappedRegion = fixture.nativeElement.querySelector('button');\n      buttonOutsideTrappedRegion.focus();\n      expect(document.activeElement).toBe(buttonOutsideTrappedRegion);\n\n      fixture.componentInstance.showTrappedRegion = true;\n      fixture.detectChanges();\n\n      fixture.whenStable().then(() => {\n        expect(document.activeElement!.id).toBe('auto-capture-target');\n\n        fixture.destroy();\n        expect(document.activeElement).toBe(buttonOutsideTrappedRegion);\n      });\n    }));\n  });\n});\n\n\n@Component({\n  template: `\n    <div cdkTrapFocus>\n      <input>\n      <button>SAVE</button>\n    </div>\n    `\n})\nclass SimpleFocusTrap {\n  @ViewChild(CdkTrapFocus) focusTrapDirective: CdkTrapFocus;\n}\n\n@Component({\n  template: `\n    <button type=\"button\">Toggle</button>\n    <div *ngIf=\"showTrappedRegion\" cdkTrapFocus cdkTrapFocusAutoCapture>\n      <input id=\"auto-capture-target\">\n      <button>SAVE</button>\n    </div>\n    `\n})\nclass FocusTrapWithAutoCapture {\n  @ViewChild(CdkTrapFocus) focusTrapDirective: CdkTrapFocus;\n  showTrappedRegion = false;\n}\n\n\n@Component({\n  template: `\n    <div *ngIf=\"renderFocusTrap\" [cdkTrapFocus]=\"_isFocusTrapEnabled\">\n      <input>\n      <button>SAVE</button>\n    </div>\n    `\n})\nclass FocusTrapWithBindings {\n  @ViewChild(CdkTrapFocus) focusTrapDirective: CdkTrapFocus;\n  renderFocusTrap = true;\n  _isFocusTrapEnabled = true;\n}\n\n\n@Component({\n  template: `\n    <div cdkTrapFocus>\n      <input>\n      <button>before</button>\n      <button id=\"first\" cdkFocusRegionStart></button>\n      <button id=\"middle\" cdkFocusInitial></button>\n      <button id=\"last\" cdkFocusRegionEnd></button>\n      <button>after</button>\n      <input>\n    </div>\n    `\n})\nclass FocusTrapTargets {\n  @ViewChild(CdkTrapFocus) focusTrapDirective: CdkTrapFocus;\n}\n\n@Component({\n  template: `\n    <div cdkTrapFocus>\n      <div cdkFocusInitial></div>\n    </div>\n    `\n})\nclass FocusTrapUnfocusableTarget {\n  @ViewChild(CdkTrapFocus) focusTrapDirective: CdkTrapFocus;\n}\n\n@Component({\n  template: `\n    <div cdkTrapFocus>\n      <svg xmlns=\"http://www.w3.org/2000/svg\">\n        <circle cx=\"100\" cy=\"100\" r=\"100\"/>\n      </svg>\n    </div>\n    `\n})\nclass FocusTrapWithSvg {\n  @ViewChild(CdkTrapFocus) focusTrapDirective: CdkTrapFocus;\n}\n\n@Component({\n  template: `\n    <div cdkTrapFocus>\n      <p>Hello</p>\n    </div>\n    `\n})\nclass FocusTrapWithoutFocusableElements {\n  @ViewChild(CdkTrapFocus) focusTrapDirective: CdkTrapFocus;\n}\n"]}