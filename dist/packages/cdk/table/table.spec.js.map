{"version":3,"file":"table.spec.js","sourceRoot":"","sources":["../../../../src/cdk/table/table.spec.ts"],"names":[],"mappings":"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","sourcesContent":["import {CollectionViewer, DataSource} from '@angular/cdk/collections';\nimport {\n  AfterContentInit,\n  Component,\n  ContentChild,\n  ContentChildren,\n  Input,\n  QueryList,\n  Type,\n  ViewChild,\n  AfterViewInit\n} from '@angular/core';\nimport {ComponentFixture, fakeAsync, flush, TestBed} from '@angular/core/testing';\nimport {BehaviorSubject, combineLatest, Observable, of as observableOf} from 'rxjs';\nimport {map} from 'rxjs/operators';\nimport {CdkColumnDef} from './cell';\nimport {CdkTableModule} from './index';\nimport {CdkHeaderRowDef, CdkRowDef, CdkCellOutlet} from './row';\nimport {CdkTable} from './table';\nimport {\n  getTableDuplicateColumnNameError,\n  getTableMissingMatchingRowDefError,\n  getTableMissingRowDefsError,\n  getTableMultipleDefaultRowDefsError,\n  getTableUnknownColumnError,\n  getTableUnknownDataSourceError\n} from './table-errors';\nimport {BidiModule} from '@angular/cdk/bidi';\n\ndescribe('CdkTable', () => {\n  let fixture: ComponentFixture<any>;\n  let component: any;\n  let tableElement: HTMLElement;\n\n  function createComponent<T>(componentType: Type<T>, declarations: any[] = []):\n      ComponentFixture<T> {\n    TestBed.configureTestingModule({\n      imports: [CdkTableModule, BidiModule],\n      declarations: [componentType, ...declarations],\n    }).compileComponents();\n\n    return TestBed.createComponent<T>(componentType);\n  }\n\n  function setupTableTestApp(componentType: Type<any>, declarations: any[] = []) {\n    fixture = createComponent(componentType, declarations);\n    component = fixture.componentInstance;\n    fixture.detectChanges();\n\n    tableElement = fixture.nativeElement.querySelector('.cdk-table');\n  }\n\n  describe('in a typical simple use case', () => {\n    let dataSource: FakeDataSource;\n    let table: CdkTable<TestData>;\n\n    beforeEach(() => {\n      setupTableTestApp(SimpleCdkTableApp);\n\n      component = fixture.componentInstance as SimpleCdkTableApp;\n      dataSource = component.dataSource;\n      table = component.table;\n\n      fixture.detectChanges();\n    });\n\n    describe('should initialize', () => {\n      it('with a connected data source', () => {\n        expect(table.dataSource).toBe(dataSource);\n        expect(dataSource.isConnected).toBe(true);\n      });\n\n      it('with a rendered header with the right number of header cells', () => {\n        const header = getHeaderRows(tableElement)[0];\n\n        expect(header).toBeTruthy();\n        expect(header.classList).toContain('customHeaderRowClass');\n        expect(getHeaderCells(header).length).toBe(component.columnsToRender.length);\n      });\n\n      it('with rendered rows with right number of row cells', () => {\n        const rows = getRows(tableElement);\n\n        expect(rows.length).toBe(dataSource.data.length);\n        rows.forEach(row => {\n          expect(row.classList).toContain('customRowClass');\n          expect(getCells(row).length).toBe(component.columnsToRender.length);\n        });\n      });\n\n      it('with column class names provided to header and data row cells', () => {\n        const header = getHeaderRows(tableElement)[0];\n        getHeaderCells(header).forEach((headerCell, index) => {\n          expect(headerCell.classList).toContain(`cdk-column-${component.columnsToRender[index]}`);\n        });\n\n        getRows(tableElement).forEach(row => {\n          getCells(row).forEach((cell, index) => {\n            expect(cell.classList).toContain(`cdk-column-${component.columnsToRender[index]}`);\n          });\n        });\n      });\n\n      it('with the right accessibility roles', () => {\n        expect(tableElement.getAttribute('role')).toBe('grid');\n\n        expect(getHeaderRows(tableElement)[0].getAttribute('role')).toBe('row');\n        const header = getHeaderRows(tableElement)[0];\n        getHeaderCells(header).forEach(cell => {\n          expect(cell.getAttribute('role')).toBe('columnheader');\n        });\n\n        getRows(tableElement).forEach(row => {\n          expect(row.getAttribute('role')).toBe('row');\n          getCells(row).forEach(cell => {\n            expect(cell.getAttribute('role')).toBe('gridcell');\n          });\n        });\n      });\n    });\n\n    it('should disconnect the data source when table is destroyed', () => {\n      expect(dataSource.isConnected).toBe(true);\n\n      fixture.destroy();\n      expect(dataSource.isConnected).toBe(false);\n    });\n\n    it('should re-render the rows when the data changes', () => {\n      dataSource.addData();\n      fixture.detectChanges();\n\n      expect(getRows(tableElement).length).toBe(dataSource.data.length);\n\n      // Check that the number of cells is correct\n      getRows(tableElement).forEach(row => {\n        expect(getCells(row).length).toBe(component.columnsToRender.length);\n      });\n    });\n\n    it('should clear the `mostRecentCellOutlet` on destroy', () => {\n      // Note: we cast the assertions here to booleans, because they may\n      // contain circular objects which will throw Jasmine into an infinite\n      // when its tries to stringify them to show a test failure.\n      expect(!!CdkCellOutlet.mostRecentCellOutlet).toBe(true);\n\n      fixture.destroy();\n\n      expect(!!CdkCellOutlet.mostRecentCellOutlet).toBe(false);\n    });\n\n    describe('should correctly use the differ to add/remove/move rows', () => {\n      function addInitialIndexAttribute() {\n        // Each row receives an attribute 'initialIndex' the element's original place\n        getRows(tableElement).forEach((row: Element, index: number) => {\n          row.setAttribute('initialIndex', index.toString());\n        });\n\n        // Prove that the attributes match their indicies\n        const initialRows = getRows(tableElement);\n        expect(initialRows[0].getAttribute('initialIndex')).toBe('0');\n        expect(initialRows[1].getAttribute('initialIndex')).toBe('1');\n        expect(initialRows[2].getAttribute('initialIndex')).toBe('2');\n      }\n\n      it('when the data is heterogeneous', () => {\n        addInitialIndexAttribute();\n\n        // Swap first and second data in data array\n        const copiedData = component.dataSource!.data.slice();\n        const temp = copiedData[0];\n        copiedData[0] = copiedData[1];\n        copiedData[1] = temp;\n\n        // Remove the third element\n        copiedData.splice(2, 1);\n\n        // Add new data\n        component.dataSource!.data = copiedData;\n        component.dataSource!.addData();\n\n        // Expect that the first and second rows were swapped and that the last row is new\n        const changedRows = getRows(tableElement);\n        expect(changedRows.length).toBe(3);\n        expect(changedRows[0].getAttribute('initialIndex')).toBe('1');\n        expect(changedRows[1].getAttribute('initialIndex')).toBe('0');\n        expect(changedRows[2].getAttribute('initialIndex')).toBe(null);\n      });\n\n      it('when the data contains multiple occurrences of the same object instance', () => {\n        const obj = {value: true};\n        component.dataSource!.data = [obj, obj, obj];\n        addInitialIndexAttribute();\n\n        const copiedData = component.dataSource!.data.slice();\n\n        // Remove the third element and add a new different obj in the beginning.\n        copiedData.splice(2, 1);\n        copiedData.unshift({value: false});\n\n        // Add new data\n        component.dataSource!.data = copiedData;\n\n        // Expect that two of the three rows still have an initial index. Not as concerned about\n        // the order they are in, but more important that there was no unnecessary removes/inserts.\n        const changedRows = getRows(tableElement);\n        expect(changedRows.length).toBe(3);\n        let numInitialRows = 0;\n        changedRows.forEach(row => {\n          if (row.getAttribute('initialIndex') !== null) {\n            numInitialRows++;\n          }\n        });\n        expect(numInitialRows).toBe(2);\n      });\n    });\n\n    it('should clear the row view containers on destroy', () => {\n      const rowOutlet = fixture.componentInstance.table._rowOutlet.viewContainer;\n      const headerPlaceholder = fixture.componentInstance.table._headerRowOutlet.viewContainer;\n\n      spyOn(rowOutlet, 'clear').and.callThrough();\n      spyOn(headerPlaceholder, 'clear').and.callThrough();\n\n      fixture.destroy();\n\n      expect(rowOutlet.clear).toHaveBeenCalled();\n      expect(headerPlaceholder.clear).toHaveBeenCalled();\n    });\n\n    it('should match the right table content with dynamic data', () => {\n      const initialDataLength = dataSource.data.length;\n      expect(dataSource.data.length).toBe(3);\n\n      let data = dataSource.data;\n      expectTableToMatchContent(tableElement, [\n        ['Column A', 'Column B', 'Column C'],\n        [data[0].a, data[0].b, data[0].c],\n        [data[1].a, data[1].b, data[1].c],\n        [data[2].a, data[2].b, data[2].c],\n        ['Footer A', 'Footer B', 'Footer C'],\n      ]);\n\n      // Add data to the table and recreate what the rendered output should be.\n      dataSource.addData();\n      expect(dataSource.data.length).toBe(initialDataLength + 1); // Make sure data was added\n      fixture.detectChanges();\n\n      data = dataSource.data;\n      expectTableToMatchContent(tableElement, [\n        ['Column A', 'Column B', 'Column C'],\n        [data[0].a, data[0].b, data[0].c],\n        [data[1].a, data[1].b, data[1].c],\n        [data[2].a, data[2].b, data[2].c],\n        [data[3].a, data[3].b, data[3].c],\n        ['Footer A', 'Footer B', 'Footer C'],\n      ]);\n    });\n\n    it('should be able to dynamically change the columns for header and rows', () => {\n      expect(dataSource.data.length).toBe(3);\n\n      let data = dataSource.data;\n      expectTableToMatchContent(tableElement, [\n        ['Column A', 'Column B', 'Column C'],\n        [data[0].a, data[0].b, data[0].c],\n        [data[1].a, data[1].b, data[1].c],\n        [data[2].a, data[2].b, data[2].c],\n        ['Footer A', 'Footer B', 'Footer C'],\n      ]);\n\n      // Remove column_a and swap column_b/column_c.\n      component.columnsToRender = ['column_c', 'column_b'];\n      fixture.detectChanges();\n\n      let changedTableContent = [['Column C', 'Column B']];\n      dataSource.data.forEach(rowData => changedTableContent.push([rowData.c, rowData.b]));\n\n      data = dataSource.data;\n      expectTableToMatchContent(tableElement, [\n        ['Column C', 'Column B'],\n        [data[0].c, data[0].b],\n        [data[1].c, data[1].b],\n        [data[2].c, data[2].b],\n        ['Footer C', 'Footer B'],\n      ]);\n    });\n  });\n\n  it('should render no rows when the data is null', fakeAsync(() => {\n    setupTableTestApp(NullDataCdkTableApp);\n    fixture.detectChanges();\n\n    expect(getRows(tableElement).length).toBe(0);\n  }));\n\n  it('should be able to render multiple header and footer rows', () => {\n    setupTableTestApp(MultipleHeaderFooterRowsCdkTableApp);\n    fixture.detectChanges();\n\n    expectTableToMatchContent(tableElement, [\n      ['first-header'],\n      ['second-header'],\n      ['first-footer'],\n      ['second-footer'],\n    ]);\n  });\n\n  it('should be able to render and change multiple header and footer rows', () => {\n    setupTableTestApp(MultipleHeaderFooterRowsCdkTableApp);\n    fixture.detectChanges();\n\n    expectTableToMatchContent(tableElement, [\n      ['first-header'],\n      ['second-header'],\n      ['first-footer'],\n      ['second-footer'],\n    ]);\n\n    component.showAlternativeHeadersAndFooters = true;\n    fixture.detectChanges();\n\n    expectTableToMatchContent(tableElement, [\n      ['first-header'],\n      ['second-header'],\n      ['first-footer'],\n      ['second-footer'],\n    ]);\n  });\n\n  it('should be able to project a caption', fakeAsync(() => {\n    setupTableTestApp(NativeHtmlTableWithCaptionApp);\n    fixture.detectChanges();\n\n    const caption = tableElement.querySelector('caption');\n\n    expect(caption).toBeTruthy();\n    expect(tableElement.firstElementChild).toBe(caption);\n  }));\n\n  describe('with different data inputs other than data source', () => {\n    let baseData: TestData[] = [\n      {a: 'a_1', b: 'b_1', c: 'c_1'},\n      {a: 'a_2', b: 'b_2', c: 'c_2'},\n      {a: 'a_3', b: 'b_3', c: 'c_3'},\n    ];\n\n    beforeEach(() => {\n      setupTableTestApp(CdkTableWithDifferentDataInputsApp);\n    });\n\n    it('should render with data array input', () => {\n      const data = baseData.slice();\n      component.dataSource = data;\n      fixture.detectChanges();\n\n      const expectedRender = [\n        ['Column A', 'Column B', 'Column C'],\n        ['a_1', 'b_1', 'c_1'],\n        ['a_2', 'b_2', 'c_2'],\n        ['a_3', 'b_3', 'c_3'],\n      ];\n      expectTableToMatchContent(tableElement, expectedRender);\n\n      // Push data to the array but neglect to tell the table, should be no change\n      data.push({a: 'a_4', b: 'b_4', c: 'c_4'});\n\n      expectTableToMatchContent(tableElement, expectedRender);\n\n      // Notify table of the change, expect another row\n      component.table.renderRows();\n      fixture.detectChanges();\n\n      expectedRender.push(['a_4', 'b_4', 'c_4']);\n      expectTableToMatchContent(tableElement, expectedRender);\n\n      // Remove a row and expect the change in rows\n      data.pop();\n      component.table.renderRows();\n\n      expectedRender.pop();\n      expectTableToMatchContent(tableElement, expectedRender);\n\n      // Remove the data input entirely and expect no rows - just header.\n      component.dataSource = null;\n      fixture.detectChanges();\n\n      expectTableToMatchContent(tableElement, [expectedRender[0]]);\n\n      // Add back the data to verify that it renders rows\n      component.dataSource = data;\n      fixture.detectChanges();\n\n      expectTableToMatchContent(tableElement, expectedRender);\n    });\n\n    it('should render with data stream input', () => {\n      const data = baseData.slice();\n      const stream = new BehaviorSubject<TestData[]>(data);\n      component.dataSource = stream;\n      fixture.detectChanges();\n\n      const expectedRender = [\n        ['Column A', 'Column B', 'Column C'],\n        ['a_1', 'b_1', 'c_1'],\n        ['a_2', 'b_2', 'c_2'],\n        ['a_3', 'b_3', 'c_3'],\n      ];\n      expectTableToMatchContent(tableElement, expectedRender);\n\n      // Push data to the array and emit the data array on the stream\n      data.push({a: 'a_4', b: 'b_4', c: 'c_4'});\n      stream.next(data);\n      fixture.detectChanges();\n\n      expectedRender.push(['a_4', 'b_4', 'c_4']);\n      expectTableToMatchContent(tableElement, expectedRender);\n\n      // Push data to the array but rather than emitting, call renderRows.\n      data.push({a: 'a_5', b: 'b_5', c: 'c_5'});\n      component.table.renderRows();\n      fixture.detectChanges();\n\n      expectedRender.push(['a_5', 'b_5', 'c_5']);\n      expectTableToMatchContent(tableElement, expectedRender);\n\n      // Remove a row and expect the change in rows\n      data.pop();\n      expectedRender.pop();\n      stream.next(data);\n\n      expectTableToMatchContent(tableElement, expectedRender);\n\n      // Remove the data input entirely and expect no rows - just header.\n      component.dataSource = null;\n      fixture.detectChanges();\n\n      expectTableToMatchContent(tableElement, [expectedRender[0]]);\n\n      // Add back the data to verify that it renders rows\n      component.dataSource = stream;\n      fixture.detectChanges();\n\n      expectTableToMatchContent(tableElement, expectedRender);\n    });\n\n    it('should throw an error if the data source is not valid', () => {\n      component.dataSource = {invalid: 'dataSource'};\n\n      expect(() => fixture.detectChanges())\n          .toThrowError(getTableUnknownDataSourceError().message);\n    });\n\n    it('should throw an error if the data source is not valid', () => {\n      component.dataSource = undefined;\n      fixture.detectChanges();\n\n      // Expect the table to render just the header, no rows\n      expectTableToMatchContent(tableElement, [\n        ['Column A', 'Column B', 'Column C']\n      ]);\n    });\n  });\n\n  describe('missing row defs', () => {\n    it('should be able to render without a header row def', () => {\n      setupTableTestApp(MissingHeaderRowDefCdkTableApp);\n      expectTableToMatchContent(tableElement, [\n        ['a_1'],  // Data rows\n        ['a_2'],\n        ['a_3'],\n        ['Footer A'],  // Footer row\n      ]);\n    });\n\n    it('should be able to render without a data row def', () => {\n      setupTableTestApp(MissingRowDefCdkTableApp);\n      expectTableToMatchContent(tableElement, [\n        ['Column A'],  // Header row\n        ['Footer A'],  // Footer row\n      ]);\n    });\n\n    it('should be able to render without a footer row def', () => {\n      setupTableTestApp(MissingFooterRowDefCdkTableApp);\n      expectTableToMatchContent(tableElement, [\n        ['Column A'],  // Header row\n        ['a_1'],  // Data rows\n        ['a_2'],\n        ['a_3'],\n      ]);\n    });\n  });\n\n  it('should render correctly when using native HTML tags', () => {\n    const thisFixture = createComponent(NativeHtmlTableApp);\n    const thisTableElement = thisFixture.nativeElement.querySelector('table');\n    thisFixture.detectChanges();\n\n    expectTableToMatchContent(thisTableElement, [\n      ['Column A', 'Column B', 'Column C'],\n      ['a_1', 'b_1', 'c_1'],\n      ['a_2', 'b_2', 'c_2'],\n      ['a_3', 'b_3', 'c_3'],\n    ]);\n  });\n\n  it('should render cells even if row data is falsy', () => {\n    setupTableTestApp(BooleanRowCdkTableApp);\n    expectTableToMatchContent(tableElement, [\n      [''], // Header row\n      ['false'], // Data rows\n      ['true'],\n      ['false'],\n      ['true'],\n    ]);\n  });\n\n  it('should be able to apply class-friendly css class names for the column cells', () => {\n    setupTableTestApp(CrazyColumnNameCdkTableApp);\n    // Column was named 'crazy-column-NAME-1!@#$%^-_&*()2'\n    const header = getHeaderRows(tableElement)[0];\n    expect(getHeaderCells(header)[0].classList)\n        .toContain('cdk-column-crazy-column-NAME-1-------_----2');\n  });\n\n  it('should not clobber an existing table role', () => {\n    setupTableTestApp(CustomRoleCdkTableApp);\n    expect(tableElement.getAttribute('role')).toBe('treegrid');\n  });\n\n  it('should throw an error if two column definitions have the same name', () => {\n    expect(() => createComponent(DuplicateColumnDefNameCdkTableApp).detectChanges())\n        .toThrowError(getTableDuplicateColumnNameError('column_a').message);\n  });\n\n  it('should throw an error if a column definition is requested but not defined', () => {\n    expect(() => createComponent(MissingColumnDefCdkTableApp).detectChanges())\n        .toThrowError(getTableUnknownColumnError('column_a').message);\n  });\n\n  it('should throw an error if a column definition is requested but not defined after render',\n      fakeAsync(() => {\n        const columnDefinitionMissingAfterRenderFixture =\n            createComponent(MissingColumnDefAfterRenderCdkTableApp);\n        expect(() => {\n          columnDefinitionMissingAfterRenderFixture.detectChanges();\n          flush();\n          columnDefinitionMissingAfterRenderFixture.detectChanges();\n        }).toThrowError(getTableUnknownColumnError('column_a').message);\n  }));\n\n  it('should throw an error if the row definitions are missing', () => {\n    expect(() => createComponent(MissingAllRowDefsCdkTableApp).detectChanges())\n        .toThrowError(getTableMissingRowDefsError().message);\n  });\n\n  it('should not throw an error if columns are undefined on initialization', () => {\n    setupTableTestApp(UndefinedColumnsCdkTableApp);\n\n    // Header should be empty since there are no columns to display.\n    const headerRow = getHeaderRows(tableElement)[0];\n    expect(headerRow.textContent).toBe('');\n\n    // Rows should be empty since there are no columns to display.\n    const rows = getRows(tableElement);\n    expect(rows[0].textContent).toBe('');\n    expect(rows[1].textContent).toBe('');\n    expect(rows[2].textContent).toBe('');\n  });\n\n  it('should be able to dynamically add/remove column definitions', () => {\n    setupTableTestApp(DynamicColumnDefinitionsCdkTableApp);\n\n    // Add a new column and expect it to show up in the table\n    let columnA = 'columnA';\n    component.dynamicColumns.push(columnA);\n    fixture.detectChanges();\n    expectTableToMatchContent(tableElement, [\n      [columnA], // Header row\n      [columnA], // Data rows\n      [columnA],\n      [columnA],\n    ]);\n\n    // Add another new column and expect it to show up in the table\n    let columnB = 'columnB';\n    component.dynamicColumns.push(columnB);\n    fixture.detectChanges();\n    expectTableToMatchContent(tableElement, [\n      [columnA, columnB], // Header row\n      [columnA, columnB], // Data rows\n      [columnA, columnB],\n      [columnA, columnB],\n    ]);\n\n    // Remove column A expect only column B to be rendered\n    component.dynamicColumns.shift();\n    fixture.detectChanges();\n    expectTableToMatchContent(tableElement, [\n      [columnB], // Header row\n      [columnB], // Data rows\n      [columnB],\n      [columnB],\n    ]);\n  });\n\n  it('should be able to register column, row, and header row definitions outside content', () => {\n    setupTableTestApp(OuterTableApp, [WrapperCdkTableApp]);\n\n    // The first two columns were defined in the wrapped table component as content children,\n    // while the injected columns were provided to the wrapped table from the outer component.\n    // A special row was provided with a when predicate that shows the single column with text.\n    // The header row was defined by the outer component.\n    expectTableToMatchContent(tableElement, [\n      ['Content Column A', 'Content Column B', 'Injected Column A', 'Injected Column B'],\n      ['injected row with when predicate'],\n      ['a_2', 'b_2', 'a_2', 'b_2'],\n      ['a_3', 'b_3', 'a_3', 'b_3']\n    ]);\n  });\n\n  describe('using when predicate', () => {\n    it('should be able to display different row templates based on the row data', () => {\n      setupTableTestApp(WhenRowCdkTableApp);\n      let data = component.dataSource.data;\n      expectTableToMatchContent(tableElement, [\n        ['Column A', 'Column B', 'Column C'],\n        [data[0].a, data[0].b, data[0].c],\n        ['index_1_special_row'],\n        ['c3_special_row'],\n        [data[3].a, data[3].b, data[3].c],\n      ]);\n    });\n\n    it('should error if there is row data that does not have a matching row template',\n        fakeAsync(() => {\n          const whenRowWithoutDefaultFixture = createComponent(WhenRowWithoutDefaultCdkTableApp);\n          const data = whenRowWithoutDefaultFixture.componentInstance.dataSource.data;\n          expect(() => {\n            try {\n              whenRowWithoutDefaultFixture.detectChanges();\n              flush();\n            } catch {\n              flush();\n            }\n          }).toThrowError(getTableMissingMatchingRowDefError(data[0]).message);\n        }));\n\n    it('should fail when multiple rows match data without multiTemplateDataRows', fakeAsync(() => {\n      let whenFixture = createComponent(WhenRowMultipleDefaultsCdkTableApp);\n      expect(() => {\n        whenFixture.detectChanges();\n        flush();\n      }).toThrowError(getTableMultipleDefaultRowDefsError().message);\n    }));\n\n    describe('with multiTemplateDataRows', () => {\n      it('should be able to render multiple rows per data object', () => {\n        setupTableTestApp(WhenRowCdkTableApp);\n        component.multiTemplateDataRows = true;\n        fixture.detectChanges();\n\n        const data = component.dataSource.data;\n        expectTableToMatchContent(tableElement, [\n          ['Column A', 'Column B', 'Column C'],\n          [data[0].a, data[0].b, data[0].c],\n          [data[1].a, data[1].b, data[1].c],\n          ['index_1_special_row'],\n          [data[2].a, data[2].b, data[2].c],\n          ['c3_special_row'],\n          [data[3].a, data[3].b, data[3].c],\n        ]);\n      });\n\n      it('should have the correct data and row indicies', () => {\n        setupTableTestApp(WhenRowCdkTableApp);\n        component.multiTemplateDataRows = true;\n        component.showIndexColumns();\n        fixture.detectChanges();\n\n        expectTableToMatchContent(tableElement, [\n          ['Index', 'Data Index', 'Render Index'],\n          ['', '0', '0'],\n          ['', '1', '1'],\n          ['', '1', '2'],\n          ['', '2', '3'],\n          ['', '2', '4'],\n          ['', '3', '5'],\n        ]);\n      });\n\n      it('should have the correct data and row indicies when data contains multiple instances of ' +\n          'the same object instance', () => {\n        setupTableTestApp(WhenRowCdkTableApp);\n        component.multiTemplateDataRows = true;\n        component.showIndexColumns();\n\n        const obj = {value: true};\n        component.dataSource.data = [obj, obj, obj, obj];\n        fixture.detectChanges();\n\n        expectTableToMatchContent(tableElement, [\n          ['Index', 'Data Index', 'Render Index'],\n          ['', '0', '0'],\n          ['', '1', '1'],\n          ['', '1', '2'],\n          ['', '2', '3'],\n          ['', '3', '4'],\n        ]);\n\n        // Push unique data on the front and add another obj to the array\n        component.dataSource.data = [{value: false}, obj, obj, obj, obj, obj];\n        fixture.detectChanges();\n\n        expectTableToMatchContent(tableElement, [\n          ['Index', 'Data Index', 'Render Index'],\n          ['', '0', '0'],\n          ['', '1', '1'],\n          ['', '1', '2'],\n          ['', '2', '3'],\n          ['', '3', '4'],\n          ['', '4', '5'],\n          ['', '5', '6'],\n        ]);\n\n      });\n    });\n  });\n\n  describe('with sticky positioning', () => {\n    interface PositionDirections {\n      [key: string]: string | undefined;\n      top?: string;\n      bottom?: string;\n      left?: string;\n      right?: string;\n    }\n\n    function expectNoStickyStyles(elements: any[]) {\n      elements.forEach(element => {\n        expect(element.classList.contains('cdk-table-sticky'));\n        expect(element.style.position).toBe('');\n        expect(element.style.zIndex || '0').toBe('0');\n        ['top', 'bottom', 'left', 'right'].forEach(d => {\n          expect(element.style[d] || 'unset').toBe('unset', `Expected ${d} to be unset`);\n        });\n      });\n    }\n\n    function expectStickyStyles(\n        element: any, zIndex: string, directions: PositionDirections = {}) {\n      expect(element.style.position).toContain('sticky');\n      expect(element.style.zIndex).toBe(zIndex, `Expected zIndex to be ${zIndex}`);\n\n      ['top', 'bottom', 'left', 'right'].forEach(d => {\n        const directionValue = directions[d];\n\n        if (!directionValue) {\n          // If no expected position for this direction, must either be unset or empty string\n          expect(element.style[d] || 'unset').toBe('unset', `Expected ${d} to be unset`);\n          return;\n        }\n\n        const expectationMessage = `Expected direction ${d} to be ${directionValue}`;\n\n        // If the direction contains `px`, we parse the number to be able to avoid deviations\n        // caused by individual browsers.\n        if (directionValue.includes('px')) {\n          expect(Math.round(parseInt(element.style[d])))\n            .toBe(Math.round(parseInt(directionValue)), expectationMessage);\n        } else {\n          expect(element.style[d]).toBe(directionValue, expectationMessage);\n        }\n      });\n    }\n\n    describe('on \"display: flex\" table style', () => {\n      let dataRows: Element[];\n      let headerRows: Element[];\n      let footerRows: Element[];\n\n      beforeEach(() => {\n        setupTableTestApp(StickyFlexLayoutCdkTableApp);\n\n        headerRows = getHeaderRows(tableElement);\n        footerRows = getFooterRows(tableElement);\n        dataRows = getRows(tableElement);\n      });\n\n      it('should stick and unstick headers', () => {\n        component.stickyHeaders = ['header-1', 'header-3'];\n        fixture.detectChanges();\n\n        expectStickyStyles(headerRows[0], '100', {top: '0px'});\n        expectNoStickyStyles([headerRows[1]]);\n        expectStickyStyles(headerRows[2], '100',\n            {top: headerRows[0].getBoundingClientRect().height + 'px'});\n\n        component.stickyHeaders = [];\n        fixture.detectChanges();\n        expectNoStickyStyles(headerRows);\n      });\n\n      it('should stick and unstick footers', () => {\n        component.stickyFooters = ['footer-1', 'footer-3'];\n        fixture.detectChanges();\n\n        expectStickyStyles(footerRows[0], '10',\n            {bottom: footerRows[1].getBoundingClientRect().height + 'px'});\n        expectNoStickyStyles([footerRows[1]]);\n        expectStickyStyles(footerRows[2], '10', {bottom: '0px'});\n\n        component.stickyFooters = [];\n        fixture.detectChanges();\n        expectNoStickyStyles(footerRows);\n      });\n\n      it('should stick and unstick left columns', () => {\n        component.stickyStartColumns = ['column-1', 'column-3'];\n        fixture.detectChanges();\n\n        headerRows.forEach(row => {\n          let cells = getHeaderCells(row);\n          expectStickyStyles(cells[0], '1', {left: '0px'});\n          expectStickyStyles(cells[2], '1', {left: '20px'});\n          expectNoStickyStyles([cells[1], cells[3], cells[4], cells[5]]);\n        });\n        dataRows.forEach(row => {\n          let cells = getCells(row);\n          expectStickyStyles(cells[0], '1', {left: '0px'});\n          expectStickyStyles(cells[2], '1', {left: '20px'});\n          expectNoStickyStyles([cells[1], cells[3], cells[4], cells[5]]);\n        });\n        footerRows.forEach(row => {\n          let cells = getFooterCells(row);\n          expectStickyStyles(cells[0], '1', {left: '0px'});\n          expectStickyStyles(cells[2], '1', {left: '20px'});\n          expectNoStickyStyles([cells[1], cells[3], cells[4], cells[5]]);\n        });\n\n        component.stickyStartColumns = [];\n        fixture.detectChanges();\n        headerRows.forEach(row => expectNoStickyStyles(getHeaderCells(row)));\n        dataRows.forEach(row => expectNoStickyStyles(getCells(row)));\n        footerRows.forEach(row => expectNoStickyStyles(getFooterCells(row)));\n      });\n\n      it('should stick and unstick right columns', () => {\n        component.stickyEndColumns = ['column-4', 'column-6'];\n        fixture.detectChanges();\n\n        headerRows.forEach(row => {\n          let cells = getHeaderCells(row);\n          expectStickyStyles(cells[5], '1', {right: '0px'});\n          expectStickyStyles(cells[3], '1', {right: '20px'});\n          expectNoStickyStyles([cells[0], cells[1], cells[2], cells[4]]);\n        });\n        dataRows.forEach(row => {\n          let cells = getCells(row);\n          expectStickyStyles(cells[5], '1', {right: '0px'});\n          expectStickyStyles(cells[3], '1', {right: '20px'});\n          expectNoStickyStyles([cells[0], cells[1], cells[2], cells[4]]);\n        });\n        footerRows.forEach(row => {\n          let cells = getFooterCells(row);\n          expectStickyStyles(cells[5], '1', {right: '0px'});\n          expectStickyStyles(cells[3], '1', {right: '20px'});\n          expectNoStickyStyles([cells[0], cells[1], cells[2], cells[4]]);\n        });\n\n        component.stickyEndColumns = [];\n        fixture.detectChanges();\n        headerRows.forEach(row => expectNoStickyStyles(getHeaderCells(row)));\n        dataRows.forEach(row => expectNoStickyStyles(getCells(row)));\n        footerRows.forEach(row => expectNoStickyStyles(getFooterCells(row)));\n      });\n\n      it('should reverse directions for sticky columns in rtl', () => {\n        component.dir = 'rtl';\n        component.stickyStartColumns = ['column-1', 'column-2'];\n        component.stickyEndColumns = ['column-5', 'column-6'];\n        fixture.detectChanges();\n\n        const firstColumnWidth = getHeaderCells(headerRows[0])[0].getBoundingClientRect().width;\n        const lastColumnWidth = getHeaderCells(headerRows[0])[5].getBoundingClientRect().width;\n\n        let headerCells = getHeaderCells(headerRows[0]);\n        expectStickyStyles(headerCells[0], '1', {right: '0px'});\n        expectStickyStyles(headerCells[1], '1', {right: `${firstColumnWidth}px`});\n        expectStickyStyles(headerCells[4], '1', {left: `${lastColumnWidth}px`});\n        expectStickyStyles(headerCells[5], '1', {left: '0px'});\n\n        dataRows.forEach(row => {\n          let cells = getCells(row);\n          expectStickyStyles(cells[0], '1', {right: '0px'});\n          expectStickyStyles(cells[1], '1', {right: `${firstColumnWidth}px`});\n          expectStickyStyles(cells[4], '1', {left: `${lastColumnWidth}px`});\n          expectStickyStyles(cells[5], '1', {left: '0px'});\n        });\n\n        let footerCells = getFooterCells(footerRows[0]);\n        expectStickyStyles(footerCells[0], '1', {right: '0px'});\n        expectStickyStyles(footerCells[1], '1', {right: `${firstColumnWidth}px`});\n        expectStickyStyles(footerCells[4], '1', {left: `${lastColumnWidth}px`});\n        expectStickyStyles(footerCells[5], '1', {left: '0px'});\n      });\n\n      it('should stick and unstick combination of sticky header, footer, and columns', () => {\n        component.stickyHeaders = ['header-1'];\n        component.stickyFooters = ['footer-3'];\n        component.stickyStartColumns = ['column-1'];\n        component.stickyEndColumns = ['column-6'];\n        fixture.detectChanges();\n\n        let headerCells = getHeaderCells(headerRows[0]);\n        expectStickyStyles(headerRows[0], '100', {top: '0px'});\n        expectStickyStyles(headerCells[0], '1', {left: '0px'});\n        expectStickyStyles(headerCells[5], '1', {right: '0px'});\n        expectNoStickyStyles([headerCells[1], headerCells[2], headerCells[3], headerCells[4]]);\n        expectNoStickyStyles([headerRows[1], headerRows[2]]);\n\n        dataRows.forEach(row => {\n          let cells = getCells(row);\n          expectStickyStyles(cells[0], '1', {left: '0px'});\n          expectStickyStyles(cells[5], '1', {right: '0px'});\n          expectNoStickyStyles([cells[1], cells[2], cells[3], cells[4]]);\n        });\n\n        let footerCells = getFooterCells(footerRows[0]);\n        expectStickyStyles(footerRows[0], '10', {bottom: '0px'});\n        expectStickyStyles(footerCells[0], '1', {left: '0px'});\n        expectStickyStyles(footerCells[5], '1', {right: '0px'});\n        expectNoStickyStyles([footerCells[1], footerCells[2], footerCells[3], footerCells[4]]);\n        expectNoStickyStyles([footerRows[1], footerRows[2]]);\n\n        component.stickyHeaders = [];\n        component.stickyFooters = [];\n        component.stickyStartColumns = [];\n        component.stickyEndColumns = [];\n        fixture.detectChanges();\n\n        headerRows.forEach(row => expectNoStickyStyles([row, ...getHeaderCells(row)]));\n        dataRows.forEach(row => expectNoStickyStyles([row, ...getCells(row)]));\n        footerRows.forEach(row => expectNoStickyStyles([row, ...getFooterCells(row)]));\n      });\n    });\n\n    describe('on native table layout', () => {\n      let dataRows: Element[];\n      let headerRows: Element[];\n      let footerRows: Element[];\n\n      beforeEach(() => {\n        setupTableTestApp(StickyNativeLayoutCdkTableApp);\n\n        headerRows = getHeaderRows(tableElement);\n        footerRows = getFooterRows(tableElement);\n        dataRows = getRows(tableElement);\n      });\n\n      it('should stick and unstick headers', () => {\n        component.stickyHeaders = ['header-1', 'header-3'];\n        fixture.detectChanges();\n\n        getHeaderCells(headerRows[0]).forEach(cell => {\n          expectStickyStyles(cell, '100', {top: '0px'});\n        });\n        const firstHeaderHeight = headerRows[0].getBoundingClientRect().height;\n        getHeaderCells(headerRows[2]).forEach(cell => {\n          expectStickyStyles(cell, '100', {top: firstHeaderHeight + 'px'});\n        });\n        expectNoStickyStyles(getHeaderCells(headerRows[1]));\n        expectNoStickyStyles(headerRows);  // No sticky styles on rows for native table\n\n        component.stickyHeaders = [];\n        fixture.detectChanges();\n        expectNoStickyStyles(headerRows);  // No sticky styles on rows for native table\n        headerRows.forEach(row => expectNoStickyStyles(getHeaderCells(row)));\n      });\n\n      it('should stick and unstick footers', () => {\n        component.stickyFooters = ['footer-1', 'footer-3'];\n        fixture.detectChanges();\n\n        getFooterCells(footerRows[2]).forEach(cell => {\n          expectStickyStyles(cell, '10', {bottom: '0px'});\n        });\n        const thirdFooterHeight = footerRows[2].getBoundingClientRect().height;\n        getFooterCells(footerRows[0]).forEach(cell => {\n          expectStickyStyles(cell, '10', {bottom: thirdFooterHeight + 'px'});\n        });\n        expectNoStickyStyles(getFooterCells(footerRows[1]));\n        expectNoStickyStyles(footerRows);  // No sticky styles on rows for native table\n\n        component.stickyFooters = [];\n        fixture.detectChanges();\n        expectNoStickyStyles(footerRows);  // No sticky styles on rows for native table\n        footerRows.forEach(row => expectNoStickyStyles(getFooterCells(row)));\n      });\n\n      it('should stick tfoot when all rows are stuck', () => {\n        const tfoot = tableElement.querySelector('tfoot');\n        component.stickyFooters = ['footer-1'];\n        fixture.detectChanges();\n        expectNoStickyStyles([tfoot]);\n\n        component.stickyFooters = ['footer-1', 'footer-2', 'footer-3'];\n        fixture.detectChanges();\n        expectStickyStyles(tfoot, '10', {bottom: '0px'});\n\n        component.stickyFooters = ['footer-1', 'footer-2'];\n        fixture.detectChanges();\n        expectNoStickyStyles([tfoot]);\n      });\n\n      it('should stick and unstick left columns', () => {\n        component.stickyStartColumns = ['column-1', 'column-3'];\n        fixture.detectChanges();\n\n        headerRows.forEach(row => {\n          let cells = getHeaderCells(row);\n          expectStickyStyles(cells[0], '1', {left: '0px'});\n          expectStickyStyles(cells[2], '1', {left: '20px'});\n          expectNoStickyStyles([cells[1], cells[3], cells[4], cells[5]]);\n        });\n        dataRows.forEach(row => {\n          let cells = getCells(row);\n          expectStickyStyles(cells[0], '1', {left: '0px'});\n          expectStickyStyles(cells[2], '1', {left: '20px'});\n          expectNoStickyStyles([cells[1], cells[3], cells[4], cells[5]]);\n        });\n        footerRows.forEach(row => {\n          let cells = getFooterCells(row);\n          expectStickyStyles(cells[0], '1', {left: '0px'});\n          expectStickyStyles(cells[2], '1', {left: '20px'});\n          expectNoStickyStyles([cells[1], cells[3], cells[4], cells[5]]);\n        });\n\n        component.stickyStartColumns = [];\n        fixture.detectChanges();\n        headerRows.forEach(row => expectNoStickyStyles(getHeaderCells(row)));\n        dataRows.forEach(row => expectNoStickyStyles(getCells(row)));\n        footerRows.forEach(row => expectNoStickyStyles(getFooterCells(row)));\n      });\n\n      it('should stick and unstick right columns', () => {\n        component.stickyEndColumns = ['column-4', 'column-6'];\n        fixture.detectChanges();\n\n        headerRows.forEach(row => {\n          let cells = getHeaderCells(row);\n          expectStickyStyles(cells[5], '1', {right: '0px'});\n          expectStickyStyles(cells[3], '1', {right: '20px'});\n          expectNoStickyStyles([cells[0], cells[1], cells[2], cells[4]]);\n        });\n        dataRows.forEach(row => {\n          let cells = getCells(row);\n          expectStickyStyles(cells[5], '1', {right: '0px'});\n          expectStickyStyles(cells[3], '1', {right: '20px'});\n          expectNoStickyStyles([cells[0], cells[1], cells[2], cells[4]]);\n        });\n        footerRows.forEach(row => {\n          let cells = getFooterCells(row);\n          expectStickyStyles(cells[5], '1', {right: '0px'});\n          expectStickyStyles(cells[3], '1', {right: '20px'});\n          expectNoStickyStyles([cells[0], cells[1], cells[2], cells[4]]);\n        });\n\n        component.stickyEndColumns = [];\n        fixture.detectChanges();\n        headerRows.forEach(row => expectNoStickyStyles(getHeaderCells(row)));\n        dataRows.forEach(row => expectNoStickyStyles(getCells(row)));\n        footerRows.forEach(row => expectNoStickyStyles(getFooterCells(row)));\n      });\n\n      it('should stick and unstick combination of sticky header, footer, and columns', () => {\n        component.stickyHeaders = ['header-1'];\n        component.stickyFooters = ['footer-3'];\n        component.stickyStartColumns = ['column-1'];\n        component.stickyEndColumns = ['column-6'];\n        fixture.detectChanges();\n\n        const headerCells = getHeaderCells(headerRows[0]);\n        expectStickyStyles(headerCells[0], '101', {top: '0px', left: '0px'});\n        expectStickyStyles(headerCells[1], '100', {top: '0px'});\n        expectStickyStyles(headerCells[2], '100', {top: '0px'});\n        expectStickyStyles(headerCells[3], '100', {top: '0px'});\n        expectStickyStyles(headerCells[4], '100', {top: '0px'});\n        expectStickyStyles(headerCells[5], '101', {top: '0px', right: '0px'});\n        expectNoStickyStyles(headerRows);\n\n        dataRows.forEach(row => {\n          let cells = getCells(row);\n          expectStickyStyles(cells[0], '1', {left: '0px'});\n          expectStickyStyles(cells[5], '1', {right: '0px'});\n          expectNoStickyStyles([cells[1], cells[2], cells[3], cells[4]]);\n        });\n\n        const footerCells = getFooterCells(footerRows[0]);\n        expectStickyStyles(footerCells[0], '11', {bottom: '0px', left: '0px'});\n        expectStickyStyles(footerCells[1], '10', {bottom: '0px'});\n        expectStickyStyles(footerCells[2], '10', {bottom: '0px'});\n        expectStickyStyles(footerCells[3], '10', {bottom: '0px'});\n        expectStickyStyles(footerCells[4], '10', {bottom: '0px'});\n        expectStickyStyles(footerCells[5], '11', {bottom: '0px', right: '0px'});\n        expectNoStickyStyles(footerRows);\n\n        component.stickyHeaders = [];\n        component.stickyFooters = [];\n        component.stickyStartColumns = [];\n        component.stickyEndColumns = [];\n        fixture.detectChanges();\n\n        headerRows.forEach(row => expectNoStickyStyles([row, ...getHeaderCells(row)]));\n        dataRows.forEach(row => expectNoStickyStyles([row, ...getCells(row)]));\n        footerRows.forEach(row => expectNoStickyStyles([row, ...getFooterCells(row)]));\n      });\n    });\n  });\n\n  describe('with trackBy', () => {\n    function createTestComponentWithTrackyByTable(trackByStrategy: string) {\n      fixture = createComponent(TrackByCdkTableApp);\n\n      component = fixture.componentInstance;\n      component.trackByStrategy = trackByStrategy;\n\n      tableElement = fixture.nativeElement.querySelector('cdk-table');\n      fixture.detectChanges();\n\n      // Each row receives an attribute 'initialIndex' the element's original place\n      getRows(tableElement).forEach((row: Element, index: number) => {\n        row.setAttribute('initialIndex', index.toString());\n      });\n\n      // Prove that the attributes match their indicies\n      const initialRows = getRows(tableElement);\n      expect(initialRows[0].getAttribute('initialIndex')).toBe('0');\n      expect(initialRows[1].getAttribute('initialIndex')).toBe('1');\n      expect(initialRows[2].getAttribute('initialIndex')).toBe('2');\n    }\n\n    // Swap first two elements, remove the third, add new data\n    function mutateData() {\n      // Swap first and second data in data array\n      const copiedData = component.dataSource.data.slice();\n      const temp = copiedData[0];\n      copiedData[0] = copiedData[1];\n      copiedData[1] = temp;\n\n      // Remove the third element\n      copiedData.splice(2, 1);\n\n      // Add new data\n      component.dataSource.data = copiedData;\n      component.dataSource.addData();\n    }\n\n    it('should add/remove/move rows with reference-based trackBy', () => {\n      createTestComponentWithTrackyByTable('reference');\n      mutateData();\n\n      // Expect that the first and second rows were swapped and that the last row is new\n      const changedRows = getRows(tableElement);\n      expect(changedRows.length).toBe(3);\n      expect(changedRows[0].getAttribute('initialIndex')).toBe('1');\n      expect(changedRows[1].getAttribute('initialIndex')).toBe('0');\n      expect(changedRows[2].getAttribute('initialIndex')).toBe(null);\n    });\n\n    it('should add/remove/move rows with changed references without property-based trackBy', () => {\n      createTestComponentWithTrackyByTable('reference');\n      mutateData();\n\n      // Change each item reference to show that the trackby is not checking the item properties.\n      component.dataSource.data = component.dataSource.data\n          .map((item: TestData) => ({a: item.a, b: item.b, c: item.c}));\n\n      // Expect that all the rows are considered new since their references are all different\n      const changedRows = getRows(tableElement);\n      expect(changedRows.length).toBe(3);\n      expect(changedRows[0].getAttribute('initialIndex')).toBe(null);\n      expect(changedRows[1].getAttribute('initialIndex')).toBe(null);\n      expect(changedRows[2].getAttribute('initialIndex')).toBe(null);\n    });\n\n    it('should add/remove/move rows with changed references with property-based trackBy', () => {\n      createTestComponentWithTrackyByTable('propertyA');\n      mutateData();\n\n      // Change each item reference to show that the trackby is checking the item properties.\n      // Otherwise this would cause them all to be removed/added.\n      component.dataSource.data = component.dataSource.data\n          .map((item: TestData) => ({a: item.a, b: item.b, c: item.c}));\n\n      // Expect that the first and second rows were swapped and that the last row is new\n      const changedRows = getRows(tableElement);\n      expect(changedRows.length).toBe(3);\n      expect(changedRows[0].getAttribute('initialIndex')).toBe('1');\n      expect(changedRows[1].getAttribute('initialIndex')).toBe('0');\n      expect(changedRows[2].getAttribute('initialIndex')).toBe(null);\n    });\n\n    it('should add/remove/move rows with changed references with index-based trackBy', () => {\n      createTestComponentWithTrackyByTable('index');\n      mutateData();\n\n      // Change each item reference to show that the trackby is checking the index.\n      // Otherwise this would cause them all to be removed/added.\n      component.dataSource.data = component.dataSource.data\n          .map((item: TestData) => ({a: item.a, b: item.b, c: item.c}));\n\n      // Expect first two to be the same since they were swapped but indicies are consistent.\n      // The third element was removed and caught by the table so it was removed before another\n      // item was added, so it is without an initial index.\n      const changedRows = getRows(tableElement);\n      expect(changedRows.length).toBe(3);\n      expect(changedRows[0].getAttribute('initialIndex')).toBe('0');\n      expect(changedRows[1].getAttribute('initialIndex')).toBe('1');\n      expect(changedRows[2].getAttribute('initialIndex')).toBe(null);\n    });\n\n    it('should change row implicit data even when trackBy finds no changes', () => {\n      createTestComponentWithTrackyByTable('index');\n      const firstRow = getRows(tableElement)[0];\n      expect(firstRow.textContent!.trim()).toBe('a_1 b_1');\n      expect(firstRow.getAttribute('initialIndex')).toBe('0');\n      mutateData();\n\n      // Change each item reference to show that the trackby is checking the index.\n      // Otherwise this would cause them all to be removed/added.\n      component.dataSource.data = component.dataSource.data\n          .map((item: TestData) => ({a: item.a, b: item.b, c: item.c}));\n\n      // Expect the rows were given the right implicit data even though the rows were not moved.\n      fixture.detectChanges();\n      expect(firstRow.textContent!.trim()).toBe('a_2 b_2');\n      expect(firstRow.getAttribute('initialIndex')).toBe('0');\n    });\n  });\n\n  it('should match the right table content with dynamic data source', () => {\n    setupTableTestApp(DynamicDataSourceCdkTableApp);\n\n    // Expect that the component has no data source and the table element reflects empty data.\n    expect(component.dataSource).toBeUndefined();\n    expectTableToMatchContent(tableElement, [\n      ['Column A']\n    ]);\n\n    // Add a data source that has initialized data. Expect that the table shows this data.\n    const dynamicDataSource = new FakeDataSource();\n    component.dataSource = dynamicDataSource;\n    fixture.detectChanges();\n    expect(dynamicDataSource.isConnected).toBe(true);\n\n    const data = component.dataSource.data;\n    expectTableToMatchContent(tableElement, [\n      ['Column A'],\n      [data[0].a],\n      [data[1].a],\n      [data[2].a],\n    ]);\n\n    // Remove the data source and check to make sure the table is empty again.\n    component.dataSource = undefined;\n    fixture.detectChanges();\n\n    // Expect that the old data source has been disconnected.\n    expect(dynamicDataSource.isConnected).toBe(false);\n    expectTableToMatchContent(tableElement, [\n      ['Column A']\n    ]);\n\n    // Reconnect a data source and check that the table is populated\n    const newDynamicDataSource = new FakeDataSource();\n    component.dataSource = newDynamicDataSource;\n    fixture.detectChanges();\n    expect(newDynamicDataSource.isConnected).toBe(true);\n\n    const newData = component.dataSource.data;\n    expectTableToMatchContent(tableElement, [\n      ['Column A'],\n      [newData[0].a],\n      [newData[1].a],\n      [newData[2].a],\n    ]);\n  });\n\n  it('should be able to apply classes to rows based on their context', () => {\n    setupTableTestApp(RowContextCdkTableApp);\n\n    let rowElements = tableElement.querySelectorAll('cdk-row');\n\n    // Rows should not have any context classes\n    for (let i = 0; i < rowElements.length; i++) {\n      expect(rowElements[i].classList.contains('custom-row-class-first')).toBe(false);\n      expect(rowElements[i].classList.contains('custom-row-class-last')).toBe(false);\n      expect(rowElements[i].classList.contains('custom-row-class-even')).toBe(false);\n      expect(rowElements[i].classList.contains('custom-row-class-odd')).toBe(false);\n    }\n\n    // Enable all the context classes\n    component.enableRowContextClasses = true;\n    fixture.detectChanges();\n\n    expect(rowElements[0].classList.contains('custom-row-class-first')).toBe(true);\n    expect(rowElements[0].classList.contains('custom-row-class-last')).toBe(false);\n    expect(rowElements[0].classList.contains('custom-row-class-even')).toBe(true);\n    expect(rowElements[0].classList.contains('custom-row-class-odd')).toBe(false);\n\n    expect(rowElements[1].classList.contains('custom-row-class-first')).toBe(false);\n    expect(rowElements[1].classList.contains('custom-row-class-last')).toBe(false);\n    expect(rowElements[1].classList.contains('custom-row-class-even')).toBe(false);\n    expect(rowElements[1].classList.contains('custom-row-class-odd')).toBe(true);\n\n    expect(rowElements[2].classList.contains('custom-row-class-first')).toBe(false);\n    expect(rowElements[2].classList.contains('custom-row-class-last')).toBe(true);\n    expect(rowElements[2].classList.contains('custom-row-class-even')).toBe(true);\n    expect(rowElements[2].classList.contains('custom-row-class-odd')).toBe(false);\n  });\n\n  it('should be able to apply classes to cells based on their row context', () => {\n    setupTableTestApp(RowContextCdkTableApp);\n\n    const rowElements = fixture.nativeElement.querySelectorAll('cdk-row');\n\n    for (let i = 0; i < rowElements.length; i++) {\n      // Cells should not have any context classes\n      const cellElements = rowElements[i].querySelectorAll('cdk-cell');\n      for (let j = 0; j < cellElements.length; j++) {\n        expect(cellElements[j].classList.contains('custom-cell-class-first')).toBe(false);\n        expect(cellElements[j].classList.contains('custom-cell-class-last')).toBe(false);\n        expect(cellElements[j].classList.contains('custom-cell-class-even')).toBe(false);\n        expect(cellElements[j].classList.contains('custom-cell-class-odd')).toBe(false);\n      }\n    }\n\n    // Enable the context classes\n    component.enableCellContextClasses = true;\n    fixture.detectChanges();\n\n    let cellElement = rowElements[0].querySelectorAll('cdk-cell')[0];\n    expect(cellElement.classList.contains('custom-cell-class-first')).toBe(true);\n    expect(cellElement.classList.contains('custom-cell-class-last')).toBe(false);\n    expect(cellElement.classList.contains('custom-cell-class-even')).toBe(true);\n    expect(cellElement.classList.contains('custom-cell-class-odd')).toBe(false);\n\n    cellElement = rowElements[1].querySelectorAll('cdk-cell')[0];\n    expect(cellElement.classList.contains('custom-cell-class-first')).toBe(false);\n    expect(cellElement.classList.contains('custom-cell-class-last')).toBe(false);\n    expect(cellElement.classList.contains('custom-cell-class-even')).toBe(false);\n    expect(cellElement.classList.contains('custom-cell-class-odd')).toBe(true);\n\n    cellElement = rowElements[2].querySelectorAll('cdk-cell')[0];\n    expect(cellElement.classList.contains('custom-cell-class-first')).toBe(false);\n    expect(cellElement.classList.contains('custom-cell-class-last')).toBe(true);\n    expect(cellElement.classList.contains('custom-cell-class-even')).toBe(true);\n    expect(cellElement.classList.contains('custom-cell-class-odd')).toBe(false);\n  });\n});\n\ninterface TestData {\n  a: string;\n  b: string;\n  c: string;\n}\n\nclass FakeDataSource extends DataSource<TestData> {\n  isConnected = false;\n\n  get data() { return this._dataChange.getValue(); }\n  set data(data: TestData[]) { this._dataChange.next(data); }\n  _dataChange = new BehaviorSubject<TestData[]>([]);\n\n  constructor() {\n    super();\n    for (let i = 0; i < 3; i++) { this.addData(); }\n  }\n\n  connect(collectionViewer: CollectionViewer) {\n    this.isConnected = true;\n    return combineLatest(this._dataChange, collectionViewer.viewChange)\n      .pipe(map(data => data[0]));\n  }\n\n  disconnect() {\n    this.isConnected = false;\n  }\n\n  addData() {\n    const nextIndex = this.data.length + 1;\n\n    let copiedData = this.data.slice();\n    copiedData.push({\n      a: `a_${nextIndex}`,\n      b: `b_${nextIndex}`,\n      c: `c_${nextIndex}`\n    });\n\n    this.data = copiedData;\n  }\n}\n\nclass BooleanDataSource extends DataSource<boolean> {\n  _dataChange = new BehaviorSubject<boolean[]>([false, true, false, true]);\n\n  connect(): Observable<boolean[]> {\n    return this._dataChange;\n  }\n\n  disconnect() { }\n}\n\n@Component({\n  template: `\n    <cdk-table [dataSource]=\"dataSource\">\n      <ng-container cdkColumnDef=\"column_a\">\n        <cdk-header-cell *cdkHeaderCellDef> Column A </cdk-header-cell>\n        <cdk-cell *cdkCellDef=\"let row\"> {{row.a}} </cdk-cell>\n        <cdk-footer-cell *cdkFooterCellDef> Footer A </cdk-footer-cell>\n      </ng-container>\n\n      <ng-container cdkColumnDef=\"column_b\">\n        <cdk-header-cell *cdkHeaderCellDef> Column B </cdk-header-cell>\n        <cdk-cell *cdkCellDef=\"let row\"> {{row.b}} </cdk-cell>\n        <cdk-footer-cell *cdkFooterCellDef> Footer B </cdk-footer-cell>\n      </ng-container>\n\n      <ng-container cdkColumnDef=\"column_c\">\n        <cdk-header-cell *cdkHeaderCellDef> Column C </cdk-header-cell>\n        <cdk-cell *cdkCellDef=\"let row\"> {{row.c}} </cdk-cell>\n        <cdk-footer-cell *cdkFooterCellDef> Footer C </cdk-footer-cell>\n      </ng-container>\n\n      <cdk-header-row class=\"customHeaderRowClass\"\n                      *cdkHeaderRowDef=\"columnsToRender\"></cdk-header-row>\n      <cdk-row class=\"customRowClass\"\n               *cdkRowDef=\"let row; columns: columnsToRender\"></cdk-row>\n      <cdk-footer-row class=\"customFooterRowClass\"\n                      *cdkFooterRowDef=\"columnsToRender\"></cdk-footer-row>\n    </cdk-table>\n  `\n})\nclass SimpleCdkTableApp {\n  dataSource: FakeDataSource | undefined = new FakeDataSource();\n  columnsToRender = ['column_a', 'column_b', 'column_c'];\n\n  @ViewChild(CdkTable) table: CdkTable<TestData>;\n}\n\n@Component({\n  template: `\n    <cdk-table [dataSource]=\"dataSource\">\n      <ng-container cdkColumnDef=\"column_a\">\n        <cdk-header-cell *cdkHeaderCellDef> Column A</cdk-header-cell>\n        <cdk-cell *cdkCellDef=\"let row\"> {{row.a}}</cdk-cell>\n      </ng-container>\n\n      <ng-container cdkColumnDef=\"column_b\">\n        <cdk-header-cell *cdkHeaderCellDef> Column B</cdk-header-cell>\n        <cdk-cell *cdkCellDef=\"let row\"> {{row.b}}</cdk-cell>\n      </ng-container>\n\n      <ng-container cdkColumnDef=\"column_c\">\n        <cdk-header-cell *cdkHeaderCellDef> Column C</cdk-header-cell>\n        <cdk-cell *cdkCellDef=\"let row\"> {{row.c}}</cdk-cell>\n      </ng-container>\n\n      <cdk-header-row *cdkHeaderRowDef=\"columnsToRender\"></cdk-header-row>\n      <cdk-row *cdkRowDef=\"let row; columns: columnsToRender\"></cdk-row>\n    </cdk-table>\n  `\n})\nclass CdkTableWithDifferentDataInputsApp {\n  dataSource: DataSource<TestData> | Observable<TestData[]> | TestData[] | any = null;\n  columnsToRender = ['column_a', 'column_b', 'column_c'];\n\n  @ViewChild(CdkTable) table: CdkTable<TestData>;\n}\n\n@Component({\n  template: `\n    <cdk-table [dataSource]=\"dataSource\">\n      <ng-container cdkColumnDef=\"column_a\">\n        <cdk-header-cell *cdkHeaderCellDef></cdk-header-cell>\n        <cdk-cell *cdkCellDef=\"let data\"> {{data}} </cdk-cell>\n      </ng-container>\n\n      <cdk-header-row *cdkHeaderRowDef=\"['column_a']\"></cdk-header-row>\n      <cdk-row *cdkRowDef=\"let row; columns: ['column_a']\"></cdk-row>\n    </cdk-table>\n  `\n})\nclass BooleanRowCdkTableApp {\n  dataSource = new BooleanDataSource();\n}\n\n\n@Component({\n  template: `\n    <cdk-table [dataSource]=\"dataSource\">\n      <ng-container cdkColumnDef=\"column_a\">\n        <cdk-header-cell *cdkHeaderCellDef></cdk-header-cell>\n        <cdk-cell *cdkCellDef=\"let data\"> {{data}} </cdk-cell>\n      </ng-container>\n\n      <cdk-header-row *cdkHeaderRowDef=\"['column_a']\"></cdk-header-row>\n      <cdk-row *cdkRowDef=\"let row; columns: ['column_a']\"></cdk-row>\n    </cdk-table>\n  `\n})\nclass NullDataCdkTableApp {\n  dataSource = observableOf(null);\n}\n\n\n@Component({\n  template: `\n    <cdk-table [dataSource]=\"[]\">\n      <ng-container cdkColumnDef=\"first-header\">\n        <th cdk-header-cell *cdkHeaderCellDef> first-header </th>\n      </ng-container>\n\n      <ng-container cdkColumnDef=\"second-header\">\n        <th cdk-header-cell *cdkHeaderCellDef> second-header </th>\n      </ng-container>\n\n      <ng-container cdkColumnDef=\"first-footer\">\n        <td cdk-footer-cell *cdkFooterCellDef> first-footer </td>\n      </ng-container>\n\n      <ng-container cdkColumnDef=\"second-footer\">\n        <td cdk-footer-cell *cdkFooterCellDef> second-footer </td>\n      </ng-container>\n\n      <ng-container *ngIf=\"!showAlternativeHeadersAndFooters\">\n        <tr cdk-header-row *cdkHeaderRowDef=\"['first-header']\"></tr>\n        <tr cdk-header-row *cdkHeaderRowDef=\"['second-header']\"></tr>\n        <tr cdk-footer-row *cdkFooterRowDef=\"['first-footer']\"></tr>\n        <tr cdk-footer-row *cdkFooterRowDef=\"['second-footer']\"></tr>\n      </ng-container>\n\n      <ng-container cdkColumnDef=\"alt-first-header\">\n        <th cdk-header-cell *cdkHeaderCellDef> alt-first-header </th>\n      </ng-container>\n\n      <ng-container cdkColumnDef=\"alt-second-header\">\n        <th cdk-header-cell *cdkHeaderCellDef> alt-second-header </th>\n      </ng-container>\n\n      <ng-container cdkColumnDef=\"alt-first-footer\">\n        <td cdk-footer-cell *cdkFooterCellDef> alt-first-footer </td>\n      </ng-container>\n\n      <ng-container cdkColumnDef=\"alt-second-footer\">\n        <td cdk-footer-cell *cdkFooterCellDef> alt-second-footer </td>\n      </ng-container>\n\n      <ng-container *ngIf=\"showAlternativeHeadersAndFooters\">\n        <tr cdk-header-row *cdkHeaderRowDef=\"['alt-first-header']\"></tr>\n        <tr cdk-header-row *cdkHeaderRowDef=\"['alt-second-header']\"></tr>\n        <tr cdk-footer-row *cdkFooterRowDef=\"['alt-first-footer']\"></tr>\n        <tr cdk-footer-row *cdkFooterRowDef=\"['alt-second-footer']\"></tr>\n      </ng-container>\n    </cdk-table>\n  `\n})\nclass MultipleHeaderFooterRowsCdkTableApp {\n  showAlternativeHeadersAndFooters = false;\n}\n\n@Component({\n  template: `\n    <cdk-table [dataSource]=\"dataSource\" [multiTemplateDataRows]=\"multiTemplateDataRows\">\n      <ng-container cdkColumnDef=\"column_a\">\n        <cdk-header-cell *cdkHeaderCellDef> Column A</cdk-header-cell>\n        <cdk-cell *cdkCellDef=\"let row\"> {{row.a}}</cdk-cell>\n      </ng-container>\n\n      <ng-container cdkColumnDef=\"column_b\">\n        <cdk-header-cell *cdkHeaderCellDef> Column B</cdk-header-cell>\n        <cdk-cell *cdkCellDef=\"let row\"> {{row.b}}</cdk-cell>\n      </ng-container>\n\n      <ng-container cdkColumnDef=\"column_c\">\n        <cdk-header-cell *cdkHeaderCellDef> Column C</cdk-header-cell>\n        <cdk-cell *cdkCellDef=\"let row\"> {{row.c}}</cdk-cell>\n      </ng-container>\n\n      <ng-container cdkColumnDef=\"index1Column\">\n        <cdk-header-cell *cdkHeaderCellDef> Column C</cdk-header-cell>\n        <cdk-cell *cdkCellDef=\"let row\"> index_1_special_row</cdk-cell>\n      </ng-container>\n\n      <ng-container cdkColumnDef=\"c3Column\">\n        <cdk-header-cell *cdkHeaderCellDef> Column C</cdk-header-cell>\n        <cdk-cell *cdkCellDef=\"let row\"> c3_special_row</cdk-cell>\n      </ng-container>\n\n      <ng-container cdkColumnDef=\"index\">\n        <cdk-header-cell *cdkHeaderCellDef> Index</cdk-header-cell>\n        <cdk-cell *cdkCellDef=\"let row; let index = index\"> {{index}}</cdk-cell>\n      </ng-container>\n\n      <ng-container cdkColumnDef=\"dataIndex\">\n        <cdk-header-cell *cdkHeaderCellDef> Data Index</cdk-header-cell>\n        <cdk-cell *cdkCellDef=\"let row; let dataIndex = dataIndex\"> {{dataIndex}}</cdk-cell>\n      </ng-container>\n\n      <ng-container cdkColumnDef=\"renderIndex\">\n        <cdk-header-cell *cdkHeaderCellDef> Render Index</cdk-header-cell>\n        <cdk-cell *cdkCellDef=\"let row; let renderIndex = renderIndex\"> {{renderIndex}}</cdk-cell>\n      </ng-container>\n\n      <cdk-header-row *cdkHeaderRowDef=\"columnsToRender\"></cdk-header-row>\n      <cdk-row *cdkRowDef=\"let row; columns: columnsToRender\"></cdk-row>\n      <cdk-row *cdkRowDef=\"let row; columns: columnsForIsIndex1Row; when: isIndex1\"></cdk-row>\n      <cdk-row *cdkRowDef=\"let row; columns: columnsForHasC3Row; when: hasC3\"></cdk-row>\n    </cdk-table>\n  `\n})\nclass WhenRowCdkTableApp {\n  multiTemplateDataRows = false;\n  dataSource: FakeDataSource = new FakeDataSource();\n  columnsToRender = ['column_a', 'column_b', 'column_c'];\n  columnsForIsIndex1Row = ['index1Column'];\n  columnsForHasC3Row = ['c3Column'];\n  isIndex1 = (index: number, _rowData: TestData) => index == 1;\n  hasC3 = (_index: number, rowData: TestData) => rowData.c == 'c_3';\n\n  constructor() { this.dataSource.addData(); }\n\n  @ViewChild(CdkTable) table: CdkTable<TestData>;\n\n  showIndexColumns() {\n    const indexColumns = ['index', 'dataIndex', 'renderIndex'];\n    this.columnsToRender = indexColumns;\n    this.columnsForIsIndex1Row = indexColumns;\n    this.columnsForHasC3Row = indexColumns;\n  }\n}\n\n@Component({\n  template: `\n    <cdk-table [dataSource]=\"dataSource\">\n      <ng-container cdkColumnDef=\"column_a\">\n        <cdk-header-cell *cdkHeaderCellDef> Column A</cdk-header-cell>\n        <cdk-cell *cdkCellDef=\"let row\"> {{row.a}}</cdk-cell>\n      </ng-container>\n\n      <ng-container cdkColumnDef=\"column_b\">\n        <cdk-header-cell *cdkHeaderCellDef> Column B</cdk-header-cell>\n        <cdk-cell *cdkCellDef=\"let row\"> {{row.b}}</cdk-cell>\n      </ng-container>\n\n      <ng-container cdkColumnDef=\"column_c\">\n        <cdk-header-cell *cdkHeaderCellDef> Column C</cdk-header-cell>\n        <cdk-cell *cdkCellDef=\"let row\"> {{row.c}}</cdk-cell>\n      </ng-container>\n\n      <ng-container cdkColumnDef=\"index1Column\">\n        <cdk-header-cell *cdkHeaderCellDef> Column C</cdk-header-cell>\n        <cdk-cell *cdkCellDef=\"let row\"> index_1_special_row </cdk-cell>\n      </ng-container>\n\n      <ng-container cdkColumnDef=\"c3Column\">\n        <cdk-header-cell *cdkHeaderCellDef> Column C</cdk-header-cell>\n        <cdk-cell *cdkCellDef=\"let row\"> c3_special_row </cdk-cell>\n      </ng-container>\n\n      <cdk-header-row *cdkHeaderRowDef=\"columnsToRender\"></cdk-header-row>\n      <cdk-row *cdkRowDef=\"let row; columns: ['index1Column']; when: isIndex1\"></cdk-row>\n      <cdk-row *cdkRowDef=\"let row; columns: ['c3Column']; when: hasC3\"></cdk-row>\n    </cdk-table>\n  `\n})\nclass WhenRowWithoutDefaultCdkTableApp {\n  dataSource: FakeDataSource = new FakeDataSource();\n  columnsToRender = ['column_a', 'column_b', 'column_c'];\n  isIndex1 = (index: number, _rowData: TestData) => index == 1;\n  hasC3 = (_index: number, rowData: TestData) => rowData.c == 'c_3';\n\n  @ViewChild(CdkTable) table: CdkTable<TestData>;\n}\n\n@Component({\n  template: `\n    <cdk-table [dataSource]=\"dataSource\">\n      <ng-container cdkColumnDef=\"column_a\">\n        <cdk-header-cell *cdkHeaderCellDef> Column A</cdk-header-cell>\n        <cdk-cell *cdkCellDef=\"let row\"> {{row.a}}</cdk-cell>\n      </ng-container>\n\n      <ng-container cdkColumnDef=\"column_b\">\n        <cdk-header-cell *cdkHeaderCellDef> Column B</cdk-header-cell>\n        <cdk-cell *cdkCellDef=\"let row\"> {{row.b}}</cdk-cell>\n      </ng-container>\n\n      <ng-container cdkColumnDef=\"column_c\">\n        <cdk-header-cell *cdkHeaderCellDef> Column C</cdk-header-cell>\n        <cdk-cell *cdkCellDef=\"let row\"> {{row.c}}</cdk-cell>\n      </ng-container>\n\n      <ng-container cdkColumnDef=\"index1Column\">\n        <cdk-header-cell *cdkHeaderCellDef> Column C</cdk-header-cell>\n        <cdk-cell *cdkCellDef=\"let row\"> index_1_special_row </cdk-cell>\n      </ng-container>\n\n      <ng-container cdkColumnDef=\"c3Column\">\n        <cdk-header-cell *cdkHeaderCellDef> Column C</cdk-header-cell>\n        <cdk-cell *cdkCellDef=\"let row\"> c3_special_row </cdk-cell>\n      </ng-container>\n\n      <cdk-header-row *cdkHeaderRowDef=\"columnsToRender\"></cdk-header-row>\n      <cdk-row *cdkRowDef=\"let row; columns: columnsToRender\"></cdk-row>\n      <cdk-row *cdkRowDef=\"let row; columns: ['index1Column']\"></cdk-row>\n      <cdk-row *cdkRowDef=\"let row; columns: ['c3Column']; when: hasC3\"></cdk-row>\n    </cdk-table>\n  `\n})\nclass WhenRowMultipleDefaultsCdkTableApp {\n  dataSource: FakeDataSource = new FakeDataSource();\n  columnsToRender = ['column_a', 'column_b', 'column_c'];\n  hasC3 = (_index: number, rowData: TestData) => rowData.c == 'c_3';\n\n  @ViewChild(CdkTable) table: CdkTable<TestData>;\n}\n\n@Component({\n  template: `\n    <cdk-table [dataSource]=\"dataSource\">\n      <ng-container cdkColumnDef=\"column_a\">\n        <cdk-header-cell *cdkHeaderCellDef> Column A</cdk-header-cell>\n        <cdk-cell *cdkCellDef=\"let row\"> {{row.a}}</cdk-cell>\n      </ng-container>\n\n      <cdk-header-row *cdkHeaderRowDef=\"columnsToRender\"></cdk-header-row>\n      <cdk-row *cdkRowDef=\"let row; columns: columnsToRender\"></cdk-row>\n    </cdk-table>\n  `\n})\nclass DynamicDataSourceCdkTableApp {\n  dataSource: FakeDataSource | undefined;\n  columnsToRender = ['column_a'];\n\n  @ViewChild(CdkTable) table: CdkTable<TestData>;\n}\n\n@Component({\n  template: `\n    <cdk-table [dataSource]=\"dataSource\" [trackBy]=\"trackBy\">\n      <ng-container cdkColumnDef=\"column_a\">\n        <cdk-header-cell *cdkHeaderCellDef> Column A</cdk-header-cell>\n        <cdk-cell *cdkCellDef=\"let row\"> {{row.a}}</cdk-cell>\n      </ng-container>\n\n      <ng-container cdkColumnDef=\"column_b\">\n        <cdk-header-cell *cdkHeaderCellDef> Column B</cdk-header-cell>\n        <cdk-cell *cdkCellDef=\"let row\"> {{row.b}}</cdk-cell>\n      </ng-container>\n\n      <cdk-header-row *cdkHeaderRowDef=\"columnsToRender\"></cdk-header-row>\n      <cdk-row *cdkRowDef=\"let row; columns: columnsToRender\"></cdk-row>\n    </cdk-table>\n  `\n})\nclass TrackByCdkTableApp {\n  trackByStrategy: 'reference' | 'propertyA' | 'index' = 'reference';\n\n  dataSource: FakeDataSource = new FakeDataSource();\n  columnsToRender = ['column_a', 'column_b'];\n\n  @ViewChild(CdkTable) table: CdkTable<TestData>;\n\n  trackBy = (index: number, item: TestData) => {\n    switch (this.trackByStrategy) {\n      case 'reference': return item;\n      case 'propertyA': return item.a;\n      case 'index': return index;\n    }\n  }\n}\n\n@Component({\n  template: `\n    <cdk-table [dataSource]=\"dataSource\" [dir]=\"dir\">\n      <ng-container [cdkColumnDef]=\"column\" *ngFor=\"let column of columns\"\n                    [sticky]=\"isStuck(stickyStartColumns, column)\"\n                    [stickyEnd]=\"isStuck(stickyEndColumns, column)\">\n        <cdk-header-cell *cdkHeaderCellDef> Header {{column}} </cdk-header-cell>\n        <cdk-cell *cdkCellDef=\"let row\"> {{column}} </cdk-cell>\n        <cdk-footer-cell *cdkFooterCellDef> Footer {{column}} </cdk-footer-cell>\n      </ng-container>\n\n      <cdk-header-row *cdkHeaderRowDef=\"columns; sticky: isStuck(stickyHeaders, 'header-1')\">\n      </cdk-header-row>\n      <cdk-header-row *cdkHeaderRowDef=\"columns; sticky: isStuck(stickyHeaders, 'header-2')\">\n      </cdk-header-row>\n      <cdk-header-row *cdkHeaderRowDef=\"columns; sticky: isStuck(stickyHeaders, 'header-3')\">\n      </cdk-header-row>\n\n      <cdk-row *cdkRowDef=\"let row; columns: columns\"></cdk-row>\n\n      <cdk-footer-row *cdkFooterRowDef=\"columns; sticky: isStuck(stickyFooters, 'footer-1')\">\n      </cdk-footer-row>\n      <cdk-footer-row *cdkFooterRowDef=\"columns; sticky: isStuck(stickyFooters, 'footer-2')\">\n      </cdk-footer-row>\n      <cdk-footer-row *cdkFooterRowDef=\"columns; sticky: isStuck(stickyFooters, 'footer-3')\">\n      </cdk-footer-row>\n    </cdk-table>\n  `,\n  styles: [`\n    .cdk-header-cell, .cdk-cell, .cdk-footer-cell {\n      display: block;\n      width: 20px;\n    }\n  `]\n})\nclass StickyFlexLayoutCdkTableApp {\n  dataSource: FakeDataSource = new FakeDataSource();\n  columns = ['column-1', 'column-2', 'column-3', 'column-4', 'column-5', 'column-6'];\n\n  @ViewChild(CdkTable) table: CdkTable<TestData>;\n\n  dir = 'ltr';\n  stickyHeaders: string[] = [];\n  stickyFooters: string[] = [];\n  stickyStartColumns: string[] = [];\n  stickyEndColumns: string[] = [];\n\n  isStuck(list: string[], id: string) {\n    return list.indexOf(id) != -1;\n  }\n}\n\n@Component({\n  template: `\n    <table cdk-table [dataSource]=\"dataSource\">\n      <ng-container [cdkColumnDef]=\"column\" *ngFor=\"let column of columns\"\n                    [sticky]=\"isStuck(stickyStartColumns, column)\"\n                    [stickyEnd]=\"isStuck(stickyEndColumns, column)\">\n        <th cdk-header-cell *cdkHeaderCellDef> Header {{column}} </th>\n        <td cdk-cell *cdkCellDef=\"let row\"> {{column}} </td>\n        <td cdk-footer-cell *cdkFooterCellDef> Footer {{column}} </td>\n      </ng-container>\n\n      <tr cdk-header-row *cdkHeaderRowDef=\"columns; sticky: isStuck(stickyHeaders, 'header-1')\">\n      </tr>\n      <tr cdk-header-row *cdkHeaderRowDef=\"columns; sticky: isStuck(stickyHeaders, 'header-2')\">\n      </tr>\n      <tr cdk-header-row *cdkHeaderRowDef=\"columns; sticky: isStuck(stickyHeaders, 'header-3')\">\n      </tr>\n\n      <tr cdk-row *cdkRowDef=\"let row; columns: columns\"></tr>\n\n      <tr cdk-footer-row *cdkFooterRowDef=\"columns; sticky: isStuck(stickyFooters, 'footer-1')\">\n      </tr>\n      <tr cdk-footer-row *cdkFooterRowDef=\"columns; sticky: isStuck(stickyFooters, 'footer-2')\">\n      </tr>\n      <tr cdk-footer-row *cdkFooterRowDef=\"columns; sticky: isStuck(stickyFooters, 'footer-3')\">\n      </tr>\n    </table>\n  `,\n  styles: [`\n    .cdk-header-cell, .cdk-cell, .cdk-footer-cell {\n      display: block;\n      width: 20px;\n      box-sizing: border-box;\n    }\n  `]\n})\nclass StickyNativeLayoutCdkTableApp {\n  dataSource: FakeDataSource = new FakeDataSource();\n  columns = ['column-1', 'column-2', 'column-3', 'column-4', 'column-5', 'column-6'];\n\n  @ViewChild(CdkTable) table: CdkTable<TestData>;\n\n  stickyHeaders: string[] = [];\n  stickyFooters: string[] = [];\n  stickyStartColumns: string[] = [];\n  stickyEndColumns: string[] = [];\n\n  isStuck(list: string[], id: string) {\n    return list.indexOf(id) != -1;\n  }\n}\n\n@Component({\n  template: `\n    <cdk-table [dataSource]=\"dataSource\">\n      <ng-container [cdkColumnDef]=\"column\" *ngFor=\"let column of dynamicColumns\">\n        <cdk-header-cell *cdkHeaderCellDef> {{column}} </cdk-header-cell>\n        <cdk-cell *cdkCellDef=\"let row\"> {{column}} </cdk-cell>\n      </ng-container>\n\n      <cdk-header-row *cdkHeaderRowDef=\"dynamicColumns\"></cdk-header-row>\n      <cdk-row *cdkRowDef=\"let row; columns: dynamicColumns;\"></cdk-row>\n    </cdk-table>\n  `\n})\nclass DynamicColumnDefinitionsCdkTableApp {\n  dynamicColumns: any[] = [];\n  dataSource: FakeDataSource = new FakeDataSource();\n\n  @ViewChild(CdkTable) table: CdkTable<TestData>;\n}\n\n@Component({\n  template: `\n    <cdk-table [dataSource]=\"dataSource\" role=\"treegrid\">\n      <ng-container cdkColumnDef=\"column_a\">\n        <cdk-header-cell *cdkHeaderCellDef> Column A</cdk-header-cell>\n        <cdk-cell *cdkCellDef=\"let row\"> {{row.a}}</cdk-cell>\n      </ng-container>\n\n      <cdk-header-row *cdkHeaderRowDef=\"columnsToRender\"></cdk-header-row>\n      <cdk-row *cdkRowDef=\"let row; columns: columnsToRender\"></cdk-row>\n    </cdk-table>\n  `\n})\nclass CustomRoleCdkTableApp {\n  dataSource: FakeDataSource = new FakeDataSource();\n  columnsToRender = ['column_a'];\n\n  @ViewChild(CdkTable) table: CdkTable<TestData>;\n}\n\n@Component({\n  template: `\n    <cdk-table [dataSource]=\"dataSource\">\n      <ng-container [cdkColumnDef]=\"columnsToRender[0]\">\n        <cdk-header-cell *cdkHeaderCellDef> Column A</cdk-header-cell>\n        <cdk-cell *cdkCellDef=\"let row\"> {{row.a}}</cdk-cell>\n      </ng-container>\n\n      <cdk-header-row *cdkHeaderRowDef=\"columnsToRender\"></cdk-header-row>\n      <cdk-row *cdkRowDef=\"let row; columns: columnsToRender\"></cdk-row>\n    </cdk-table>\n  `\n})\nclass CrazyColumnNameCdkTableApp {\n  dataSource: FakeDataSource = new FakeDataSource();\n  columnsToRender = ['crazy-column-NAME-1!@#$%^-_&*()2'];\n\n  @ViewChild(CdkTable) table: CdkTable<TestData>;\n}\n\n@Component({\n  template: `\n    <cdk-table [dataSource]=\"dataSource\">\n      <ng-container cdkColumnDef=\"column_a\">\n        <cdk-header-cell *cdkHeaderCellDef> Column A</cdk-header-cell>\n        <cdk-cell *cdkCellDef=\"let row\"> {{row.a}}</cdk-cell>\n      </ng-container>\n\n      <ng-container cdkColumnDef=\"column_a\">\n        <cdk-header-cell *cdkHeaderCellDef> Column A</cdk-header-cell>\n        <cdk-cell *cdkCellDef=\"let row\"> {{row.a}}</cdk-cell>\n      </ng-container>\n\n      <cdk-header-row *cdkHeaderRowDef=\"['column_a']\"></cdk-header-row>\n      <cdk-row *cdkRowDef=\"let row; columns: ['column_a']\"></cdk-row>\n    </cdk-table>\n  `\n})\nclass DuplicateColumnDefNameCdkTableApp {\n  dataSource: FakeDataSource = new FakeDataSource();\n}\n\n@Component({\n  template: `\n    <cdk-table [dataSource]=\"dataSource\">\n      <ng-container cdkColumnDef=\"column_b\">\n        <cdk-header-cell *cdkHeaderCellDef> Column A</cdk-header-cell>\n        <cdk-cell *cdkCellDef=\"let row\"> {{row.a}}</cdk-cell>\n      </ng-container>\n\n      <cdk-header-row *cdkHeaderRowDef=\"['column_a']\"></cdk-header-row>\n      <cdk-row *cdkRowDef=\"let row; columns: ['column_a']\"></cdk-row>\n    </cdk-table>\n  `\n})\nclass MissingColumnDefCdkTableApp {\n  dataSource: FakeDataSource = new FakeDataSource();\n}\n\n@Component({\n  template: `\n    <cdk-table [dataSource]=\"dataSource\">\n      <ng-container cdkColumnDef=\"column_b\">\n        <cdk-header-cell *cdkHeaderCellDef> Column A</cdk-header-cell>\n        <cdk-cell *cdkCellDef=\"let row\"> {{row.a}}</cdk-cell>\n      </ng-container>\n\n      <cdk-header-row *cdkHeaderRowDef=\"displayedColumns\"></cdk-header-row>\n      <cdk-row *cdkRowDef=\"let row; columns: displayedColumns\"></cdk-row>\n    </cdk-table>\n  `\n})\nclass MissingColumnDefAfterRenderCdkTableApp implements AfterViewInit {\n  dataSource: FakeDataSource|null = null;\n  displayedColumns: string[] = [];\n\n  ngAfterViewInit() {\n    setTimeout(() => { this.displayedColumns = ['column_a']; }, 0);\n  }\n}\n\n@Component({\n  template: `\n    <cdk-table [dataSource]=\"dataSource\">\n      <ng-container cdkColumnDef=\"column_a\">\n        <cdk-header-cell *cdkHeaderCellDef> Column A</cdk-header-cell>\n        <cdk-cell *cdkCellDef=\"let row\"> {{row.a}}</cdk-cell>\n      </ng-container>\n    </cdk-table>\n  `\n})\nclass MissingAllRowDefsCdkTableApp {\n  dataSource: FakeDataSource = new FakeDataSource();\n}\n\n@Component({\n  template: `\n    <cdk-table [dataSource]=\"dataSource\">\n      <ng-container cdkColumnDef=\"column_a\">\n        <cdk-header-cell *cdkHeaderCellDef> Column A</cdk-header-cell>\n        <cdk-cell *cdkCellDef=\"let row\"> {{row.a}} </cdk-cell>\n        <cdk-footer-cell *cdkFooterCellDef> Footer A </cdk-footer-cell>\n      </ng-container>\n\n      <cdk-row *cdkRowDef=\"let row; columns: ['column_a']\"></cdk-row>\n      <cdk-footer-row *cdkFooterRowDef=\"['column_a']\"></cdk-footer-row>\n    </cdk-table>\n  `\n})\nclass MissingHeaderRowDefCdkTableApp {\n  dataSource: FakeDataSource = new FakeDataSource();\n}\n\n@Component({\n  template: `\n    <cdk-table [dataSource]=\"dataSource\">\n      <ng-container cdkColumnDef=\"column_a\">\n        <cdk-header-cell *cdkHeaderCellDef> Column A</cdk-header-cell>\n        <cdk-cell *cdkCellDef=\"let row\"> {{row.a}} </cdk-cell>\n        <cdk-footer-cell *cdkFooterCellDef> Footer A </cdk-footer-cell>\n      </ng-container>\n\n      <cdk-header-row *cdkHeaderRowDef=\"['column_a']\"></cdk-header-row>\n      <cdk-footer-row *cdkFooterRowDef=\"['column_a']\"></cdk-footer-row>\n    </cdk-table>\n  `\n})\nclass MissingRowDefCdkTableApp {\n  dataSource: FakeDataSource = new FakeDataSource();\n}\n\n@Component({\n  template: `\n    <cdk-table [dataSource]=\"dataSource\">\n      <ng-container cdkColumnDef=\"column_a\">\n        <cdk-header-cell *cdkHeaderCellDef> Column A</cdk-header-cell>\n        <cdk-cell *cdkCellDef=\"let row\"> {{row.a}} </cdk-cell>\n        <cdk-footer-cell *cdkFooterCellDef> Footer A </cdk-footer-cell>\n      </ng-container>\n\n      <cdk-header-row *cdkHeaderRowDef=\"['column_a']\"></cdk-header-row>\n      <cdk-row *cdkRowDef=\"let row; columns: ['column_a']\"></cdk-row>\n    </cdk-table>\n  `\n})\nclass MissingFooterRowDefCdkTableApp {\n  dataSource: FakeDataSource = new FakeDataSource();\n}\n\n@Component({\n  template: `\n    <cdk-table [dataSource]=\"dataSource\">\n      <ng-container cdkColumnDef=\"column_a\">\n        <cdk-header-cell *cdkHeaderCellDef> Column A</cdk-header-cell>\n        <cdk-cell *cdkCellDef=\"let row\"> {{row.a}}</cdk-cell>\n      </ng-container>\n\n      <cdk-header-row *cdkHeaderRowDef=\"undefinedColumns\"></cdk-header-row>\n      <cdk-row *cdkRowDef=\"let row; columns: undefinedColumns\"></cdk-row>\n    </cdk-table>\n  `\n})\nclass UndefinedColumnsCdkTableApp {\n  undefinedColumns: string[];\n  dataSource: FakeDataSource = new FakeDataSource();\n}\n\n@Component({\n  template: `\n    <cdk-table [dataSource]=\"dataSource\">\n      <ng-container cdkColumnDef=\"column_a\">\n        <cdk-header-cell *cdkHeaderCellDef> Column A</cdk-header-cell>\n        <cdk-cell *cdkCellDef=\"let row; let first = first;\n                               let last = last; let even = even; let odd = odd\"\n                  [ngClass]=\"{\n                    'custom-cell-class-first': enableCellContextClasses && first,\n                    'custom-cell-class-last': enableCellContextClasses && last,\n                    'custom-cell-class-even': enableCellContextClasses && even,\n                    'custom-cell-class-odd': enableCellContextClasses && odd\n                  }\">\n          {{row.a}}\n        </cdk-cell>\n      </ng-container>\n      <cdk-header-row *cdkHeaderRowDef=\"columnsToRender\"></cdk-header-row>\n      <cdk-row *cdkRowDef=\"let row; columns: columnsToRender;\n                           let first = first; let last = last; let even = even; let odd = odd\"\n               [ngClass]=\"{\n                 'custom-row-class-first': enableRowContextClasses && first,\n                 'custom-row-class-last': enableRowContextClasses && last,\n                 'custom-row-class-even': enableRowContextClasses && even,\n                 'custom-row-class-odd': enableRowContextClasses && odd\n               }\">\n      </cdk-row>\n    </cdk-table>\n  `\n})\nclass RowContextCdkTableApp {\n  dataSource: FakeDataSource = new FakeDataSource();\n  columnsToRender = ['column_a'];\n  enableRowContextClasses = false;\n  enableCellContextClasses = false;\n}\n\n@Component({\n  selector: 'wrapper-table',\n  template: `\n    <cdk-table [dataSource]=\"dataSource\">\n      <ng-container cdkColumnDef=\"content_column_a\">\n        <cdk-header-cell *cdkHeaderCellDef> Content Column A </cdk-header-cell>\n        <cdk-cell *cdkCellDef=\"let row\"> {{row.a}} </cdk-cell>\n      </ng-container>\n      <ng-container cdkColumnDef=\"content_column_b\">\n        <cdk-header-cell *cdkHeaderCellDef> Content Column B </cdk-header-cell>\n        <cdk-cell *cdkCellDef=\"let row\"> {{row.b}} </cdk-cell>\n      </ng-container>\n\n      <cdk-row *cdkRowDef=\"let row; columns: columns\"></cdk-row>\n    </cdk-table>\n  `\n})\nclass WrapperCdkTableApp<T> implements AfterContentInit {\n  @ContentChildren(CdkColumnDef) columnDefs: QueryList<CdkColumnDef>;\n  @ContentChild(CdkHeaderRowDef) headerRowDef: CdkHeaderRowDef;\n  @ContentChildren(CdkRowDef) rowDefs: QueryList<CdkRowDef<T>>;\n\n  @ViewChild(CdkTable) table: CdkTable<T>;\n\n  @Input() columns: string[];\n  @Input() dataSource: DataSource<T>;\n\n  ngAfterContentInit() {\n    // Register the content's column, row, and header row definitions.\n    this.columnDefs.forEach(columnDef => this.table.addColumnDef(columnDef));\n    this.rowDefs.forEach(rowDef => this.table.addRowDef(rowDef));\n    this.table.addHeaderRowDef(this.headerRowDef);\n  }\n}\n\n@Component({\n  template: `\n    <wrapper-table [dataSource]=\"dataSource\" [columns]=\"columnsToRender\">\n      <ng-container cdkColumnDef=\"injected_column_a\">\n        <cdk-header-cell *cdkHeaderCellDef> Injected Column A </cdk-header-cell>\n        <cdk-cell *cdkCellDef=\"let row\"> {{row.a}} </cdk-cell>\n      </ng-container>\n      <ng-container cdkColumnDef=\"injected_column_b\">\n        <cdk-header-cell *cdkHeaderCellDef> Injected Column B </cdk-header-cell>\n        <cdk-cell *cdkCellDef=\"let row\"> {{row.b}} </cdk-cell>\n      </ng-container>\n\n      <!-- Only used for the 'when' row, the first row -->\n      <ng-container cdkColumnDef=\"special_column\">\n        <cdk-cell *cdkCellDef=\"let row\"> injected row with when predicate </cdk-cell>\n      </ng-container>\n\n      <cdk-header-row *cdkHeaderRowDef=\"columnsToRender\"></cdk-header-row>\n      <cdk-row class=\"first-row\" *cdkRowDef=\"let row; columns: ['special_column']; when: firstRow\">\n      </cdk-row>\n    </wrapper-table>\n  `\n})\nclass OuterTableApp {\n  dataSource: FakeDataSource = new FakeDataSource();\n  columnsToRender =\n      ['content_column_a', 'content_column_b', 'injected_column_a', 'injected_column_b'];\n\n  firstRow = (i: number) => i === 0;\n}\n\n@Component({\n  template: `\n    <table cdk-table [dataSource]=\"dataSource\">\n      <ng-container cdkColumnDef=\"column_a\">\n        <th cdk-header-cell *cdkHeaderCellDef> Column A</th>\n        <td cdk-cell *cdkCellDef=\"let row\"> {{row.a}}</td>\n      </ng-container>\n\n      <ng-container cdkColumnDef=\"column_b\">\n        <th cdk-header-cell *cdkHeaderCellDef> Column B</th>\n        <td cdk-cell *cdkCellDef=\"let row\"> {{row.b}}</td>\n      </ng-container>\n\n      <ng-container cdkColumnDef=\"column_c\">\n        <th cdk-header-cell *cdkHeaderCellDef> Column C</th>\n        <td cdk-cell *cdkCellDef=\"let row\"> {{row.c}}</td>\n      </ng-container>\n\n      <tr cdk-header-row *cdkHeaderRowDef=\"columnsToRender\"></tr>\n      <tr cdk-row *cdkRowDef=\"let row; columns: columnsToRender\" class=\"customRowClass\"></tr>\n    </table>\n  `\n})\nclass NativeHtmlTableApp {\n  dataSource: FakeDataSource | undefined = new FakeDataSource();\n  columnsToRender = ['column_a', 'column_b', 'column_c'];\n\n  @ViewChild(CdkTable) table: CdkTable<TestData>;\n}\n\n@Component({\n  template: `\n    <table cdk-table [dataSource]=\"dataSource\">\n      <caption>Very important data</caption>\n      <ng-container cdkColumnDef=\"column_a\">\n        <th cdk-header-cell *cdkHeaderCellDef> Column A</th>\n        <td cdk-cell *cdkCellDef=\"let row\"> {{row.a}}</td>\n      </ng-container>\n\n      <tr cdk-header-row *cdkHeaderRowDef=\"columnsToRender\"></tr>\n      <tr cdk-row *cdkRowDef=\"let row; columns: columnsToRender\" class=\"customRowClass\"></tr>\n    </table>\n  `\n})\nclass NativeHtmlTableWithCaptionApp {\n  dataSource: FakeDataSource | undefined = new FakeDataSource();\n  columnsToRender = ['column_a'];\n\n  @ViewChild(CdkTable) table: CdkTable<TestData>;\n}\n\nfunction getElements(element: Element, query: string): Element[] {\n  return [].slice.call(element.querySelectorAll(query));\n}\n\nfunction getHeaderRows(tableElement: Element): Element[] {\n  return [].slice.call(tableElement.querySelectorAll('.cdk-header-row'))!;\n}\n\nfunction getFooterRows(tableElement: Element): Element[] {\n  return [].slice.call(tableElement.querySelectorAll('.cdk-footer-row'))!;\n}\n\nfunction getRows(tableElement: Element): Element[] {\n  return getElements(tableElement, '.cdk-row');\n}\n\nfunction getCells(row: Element): Element[] {\n  if (!row) {\n    return [];\n  }\n\n  let cells = getElements(row, 'cdk-cell');\n  if (!cells.length) {\n    cells = getElements(row, 'td.cdk-cell');\n  }\n\n  return cells;\n}\n\nfunction getHeaderCells(headerRow: Element): Element[] {\n  let cells = getElements(headerRow, 'cdk-header-cell');\n  if (!cells.length) {\n    cells = getElements(headerRow, 'th.cdk-header-cell');\n  }\n\n  return cells;\n}\n\nfunction getFooterCells(footerRow: Element): Element[] {\n  let cells = getElements(footerRow, 'cdk-footer-cell');\n  if (!cells.length) {\n    cells = getElements(footerRow, 'td.cdk-footer-cell');\n  }\n\n  return cells;\n}\n\nfunction getActualTableContent(tableElement: Element): string[][] {\n  let actualTableContent: Element[][] = [];\n  getHeaderRows(tableElement).forEach(row => {\n    actualTableContent.push(getHeaderCells(row));\n  });\n\n  // Check data row cells\n  const rows = getRows(tableElement).map(row => getCells(row));\n  actualTableContent = actualTableContent.concat(rows);\n\n  getFooterRows(tableElement).forEach(row => {\n    actualTableContent.push(getFooterCells(row));\n  });\n\n  // Convert the nodes into their text content;\n  return actualTableContent.map(row => row.map(cell => cell.textContent!.trim()));\n}\n\nfunction expectTableToMatchContent(tableElement: Element, expected: any[]) {\n  const missedExpectations: string[] = [];\n  function checkCellContent(actualCell: string, expectedCell: string) {\n    if (actualCell !== expectedCell) {\n      missedExpectations.push(`Expected cell contents to be ${expectedCell} but was ${actualCell}`);\n    }\n  }\n\n  const actual = getActualTableContent(tableElement);\n\n  // Make sure the number of rows match\n  if (actual.length !== expected.length) {\n    missedExpectations.push(`Expected ${expected.length} total rows but got ${actual.length}`);\n    fail(missedExpectations.join('\\n'));\n  }\n\n  actual.forEach((row, rowIndex) => {\n    const expectedRow = expected[rowIndex];\n\n    // Make sure the number of cells match\n    if (row.length !== expectedRow.length) {\n      missedExpectations.push(`Expected ${expectedRow.length} cells in row but got ${row.length}`);\n      fail(missedExpectations.join('\\n'));\n    }\n\n    row.forEach((actualCell, cellIndex) => {\n      const expectedCell = expectedRow ? expectedRow[cellIndex] : null;\n      checkCellContent(actualCell, expectedCell);\n    });\n  });\n\n  if (missedExpectations.length) {\n    fail(missedExpectations.join('\\n'));\n  }\n}\n"]}