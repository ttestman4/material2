{"version":3,"file":"global-position-strategy.js","sourceRoot":"","sources":["../../../../../../src/cdk/overlay/position/global-position-strategy.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {PositionStrategy} from './position-strategy';\nimport {OverlayReference} from '../overlay-reference';\n\n/** Class to be added to the overlay pane wrapper. */\nconst wrapperClass = 'cdk-global-overlay-wrapper';\n\n/**\n * A strategy for positioning overlays. Using this strategy, an overlay is given an\n * explicit position relative to the browser's viewport. We use flexbox, instead of\n * transforms, in order to avoid issues with subpixel rendering which can cause the\n * element to become blurry.\n */\nexport class GlobalPositionStrategy implements PositionStrategy {\n  /** The overlay to which this strategy is attached. */\n  private _overlayRef: OverlayReference;\n  private _cssPosition: string = 'static';\n  private _topOffset: string = '';\n  private _bottomOffset: string = '';\n  private _leftOffset: string = '';\n  private _rightOffset: string = '';\n  private _alignItems: string = '';\n  private _justifyContent: string = '';\n  private _width: string = '';\n  private _height: string = '';\n  private _isDisposed: boolean;\n\n  attach(overlayRef: OverlayReference): void {\n    const config = overlayRef.getConfig();\n\n    this._overlayRef = overlayRef;\n\n    if (this._width && !config.width) {\n      overlayRef.updateSize({width: this._width});\n    }\n\n    if (this._height && !config.height) {\n      overlayRef.updateSize({height: this._height});\n    }\n\n    overlayRef.hostElement.classList.add(wrapperClass);\n    this._isDisposed = false;\n  }\n\n  /**\n   * Sets the top position of the overlay. Clears any previously set vertical position.\n   * @param value New top offset.\n   */\n  top(value: string = ''): this {\n    this._bottomOffset = '';\n    this._topOffset = value;\n    this._alignItems = 'flex-start';\n    return this;\n  }\n\n  /**\n   * Sets the left position of the overlay. Clears any previously set horizontal position.\n   * @param value New left offset.\n   */\n  left(value: string = ''): this {\n    this._rightOffset = '';\n    this._leftOffset = value;\n    this._justifyContent = 'flex-start';\n    return this;\n  }\n\n  /**\n   * Sets the bottom position of the overlay. Clears any previously set vertical position.\n   * @param value New bottom offset.\n   */\n  bottom(value: string = ''): this {\n    this._topOffset = '';\n    this._bottomOffset = value;\n    this._alignItems = 'flex-end';\n    return this;\n  }\n\n  /**\n   * Sets the right position of the overlay. Clears any previously set horizontal position.\n   * @param value New right offset.\n   */\n  right(value: string = ''): this {\n    this._leftOffset = '';\n    this._rightOffset = value;\n    this._justifyContent = 'flex-end';\n    return this;\n  }\n\n  /**\n   * Sets the overlay width and clears any previously set width.\n   * @param value New width for the overlay\n   * @deprecated Pass the `width` through the `OverlayConfig`.\n   * @breaking-change 8.0.0\n   */\n  width(value: string = ''): this {\n    if (this._overlayRef) {\n      this._overlayRef.updateSize({width: value});\n    } else {\n      this._width = value;\n    }\n\n    return this;\n  }\n\n  /**\n   * Sets the overlay height and clears any previously set height.\n   * @param value New height for the overlay\n   * @deprecated Pass the `height` through the `OverlayConfig`.\n   * @breaking-change 8.0.0\n   */\n  height(value: string = ''): this {\n    if (this._overlayRef) {\n      this._overlayRef.updateSize({height: value});\n    } else {\n      this._height = value;\n    }\n\n    return this;\n  }\n\n  /**\n   * Centers the overlay horizontally with an optional offset.\n   * Clears any previously set horizontal position.\n   *\n   * @param offset Overlay offset from the horizontal center.\n   */\n  centerHorizontally(offset: string = ''): this {\n    this.left(offset);\n    this._justifyContent = 'center';\n    return this;\n  }\n\n  /**\n   * Centers the overlay vertically with an optional offset.\n   * Clears any previously set vertical position.\n   *\n   * @param offset Overlay offset from the vertical center.\n   */\n  centerVertically(offset: string = ''): this {\n    this.top(offset);\n    this._alignItems = 'center';\n    return this;\n  }\n\n  /**\n   * Apply the position to the element.\n   * @docs-private\n   */\n  apply(): void {\n    // Since the overlay ref applies the strategy asynchronously, it could\n    // have been disposed before it ends up being applied. If that is the\n    // case, we shouldn't do anything.\n    if (!this._overlayRef || !this._overlayRef.hasAttached()) {\n      return;\n    }\n\n    const styles = this._overlayRef.overlayElement.style;\n    const parentStyles = this._overlayRef.hostElement.style;\n    const config = this._overlayRef.getConfig();\n\n    styles.position = this._cssPosition;\n    styles.marginLeft = config.width === '100%' ? '0' : this._leftOffset;\n    styles.marginTop = config.height === '100%' ? '0' : this._topOffset;\n    styles.marginBottom = this._bottomOffset;\n    styles.marginRight = this._rightOffset;\n\n    if (config.width === '100%') {\n      parentStyles.justifyContent = 'flex-start';\n    } else if (this._justifyContent === 'center') {\n      parentStyles.justifyContent = 'center';\n    } else if (this._overlayRef.getConfig().direction === 'rtl') {\n      // In RTL the browser will invert `flex-start` and `flex-end` automatically, but we\n      // don't want that because our positioning is explicitly `left` and `right`, hence\n      // why we do another inversion to ensure that the overlay stays in the same position.\n      // TODO: reconsider this if we add `start` and `end` methods.\n      if (this._justifyContent === 'flex-start') {\n        parentStyles.justifyContent = 'flex-end';\n      } else if (this._justifyContent === 'flex-end') {\n        parentStyles.justifyContent = 'flex-start';\n      }\n    } else {\n      parentStyles.justifyContent = this._justifyContent;\n    }\n\n    parentStyles.alignItems = config.height === '100%' ? 'flex-start' : this._alignItems;\n  }\n\n  /**\n   * Cleans up the DOM changes from the position strategy.\n   * @docs-private\n   */\n  dispose(): void {\n    if (this._isDisposed || !this._overlayRef) {\n      return;\n    }\n\n    const styles = this._overlayRef.overlayElement.style;\n    const parent = this._overlayRef.hostElement;\n    const parentStyles = parent.style;\n\n    parent.classList.remove(wrapperClass);\n    parentStyles.justifyContent = parentStyles.alignItems = styles.marginTop =\n      styles.marginBottom = styles.marginLeft = styles.marginRight = styles.position = '';\n\n    this._overlayRef = null!;\n    this._isDisposed = true;\n  }\n}\n"]}