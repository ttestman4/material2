{"version":3,"file":"aria-reference.js","sourceRoot":"","sources":["../../../../../../src/cdk/a11y/aria-describer/aria-reference.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;IASM,cAAc,GAAG,GAAG;;;;;;;;;AAM1B,MAAM,UAAU,mBAAmB,CAAC,EAAW,EAAE,IAAY,EAAE,EAAU;;QACjE,GAAG,GAAG,mBAAmB,CAAC,EAAE,EAAE,IAAI,CAAC;IACzC,IAAI,GAAG,CAAC,IAAI,CAAC,UAAA,UAAU,IAAI,OAAA,UAAU,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,IAAI,EAAE,EAA9B,CAA8B,CAAC,EAAE;QAAE,OAAO;KAAE;IACvE,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,EAAE,CAAC,CAAC;IAEpB,EAAE,CAAC,YAAY,CAAC,IAAI,EAAE,GAAG,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC;AAClD,CAAC;;;;;;;;;AAMD,MAAM,UAAU,sBAAsB,CAAC,EAAW,EAAE,IAAY,EAAE,EAAU;;QACpE,GAAG,GAAG,mBAAmB,CAAC,EAAE,EAAE,IAAI,CAAC;;QACnC,WAAW,GAAG,GAAG,CAAC,MAAM,CAAC,UAAA,GAAG,IAAI,OAAA,GAAG,IAAI,EAAE,CAAC,IAAI,EAAE,EAAhB,CAAgB,CAAC;IAEvD,EAAE,CAAC,YAAY,CAAC,IAAI,EAAE,WAAW,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC;AAC1D,CAAC;;;;;;;;AAMD,MAAM,UAAU,mBAAmB,CAAC,EAAW,EAAE,IAAY;IAC3D,yFAAyF;IACzF,OAAO,CAAC,EAAE,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;AAC3D,CAAC","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/** IDs are deliminated by an empty space, as per the spec. */\nconst ID_DELIMINATOR = ' ';\n\n/**\n * Adds the given ID to the specified ARIA attribute on an element.\n * Used for attributes such as aria-labelledby, aria-owns, etc.\n */\nexport function addAriaReferencedId(el: Element, attr: string, id: string) {\n  const ids = getAriaReferenceIds(el, attr);\n  if (ids.some(existingId => existingId.trim() == id.trim())) { return; }\n  ids.push(id.trim());\n\n  el.setAttribute(attr, ids.join(ID_DELIMINATOR));\n}\n\n/**\n * Removes the given ID from the specified ARIA attribute on an element.\n * Used for attributes such as aria-labelledby, aria-owns, etc.\n */\nexport function removeAriaReferencedId(el: Element, attr: string, id: string) {\n  const ids = getAriaReferenceIds(el, attr);\n  const filteredIds = ids.filter(val => val != id.trim());\n\n  el.setAttribute(attr, filteredIds.join(ID_DELIMINATOR));\n}\n\n/**\n * Gets the list of IDs referenced by the given ARIA attribute on an element.\n * Used for attributes such as aria-labelledby, aria-owns, etc.\n */\nexport function getAriaReferenceIds(el: Element, attr: string): string[] {\n  // Get string array of all individual ids (whitespace deliminated) in the attribute value\n  return (el.getAttribute(attr) || '').match(/\\S+/g) || [];\n}\n"]}