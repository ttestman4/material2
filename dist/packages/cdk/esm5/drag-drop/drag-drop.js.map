{"version":3,"file":"drag-drop.js","sourceRoot":"","sources":["../../../../../src/cdk/drag-drop/drag-drop.ts"],"names":[],"mappings":";;;;;;;;;;;AAQA,OAAO,EAAC,UAAU,EAAE,MAAM,EAAE,MAAM,EAAa,MAAM,eAAe,CAAC;AACrE,OAAO,EAAC,QAAQ,EAAC,MAAM,iBAAiB,CAAC;AACzC,OAAO,EAAC,aAAa,EAAC,MAAM,wBAAwB,CAAC;AACrD,OAAO,EAAC,OAAO,EAAgB,MAAM,YAAY,CAAC;AAClD,OAAO,EAAC,WAAW,EAAC,MAAM,iBAAiB,CAAC;AAC5C,OAAO,EAAC,gBAAgB,EAAC,MAAM,sBAAsB,CAAC;;;;;;;;;IAGhD,cAAc,GAAG;IACrB,kBAAkB,EAAE,CAAC;IACrB,+BAA+B,EAAE,CAAC;CACnC;;;;AAKD;IAEE,kBAC4B,SAAc,EAChC,OAAe,EACf,cAA6B,EAC7B,iBAAyD;QAHvC,cAAS,GAAT,SAAS,CAAK;QAChC,YAAO,GAAP,OAAO,CAAQ;QACf,mBAAc,GAAd,cAAc,CAAe;QAC7B,sBAAiB,GAAjB,iBAAiB,CAAwC;IAAG,CAAC;IAEvE;;;;OAIG;;;;;;;;IACH,6BAAU;;;;;;;IAAV,UAAoB,OAA8C,EACpD,MAAsC;QAAtC,uBAAA,EAAA,uBAAsC;QAElD,OAAO,IAAI,OAAO,CAAI,OAAO,EAAE,MAAM,EAAE,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,cAAc,EACpF,IAAI,CAAC,iBAAiB,CAAC,CAAC;IAC9B,CAAC;IAED;;;OAGG;;;;;;;IACH,iCAAc;;;;;;IAAd,UAAwB,OAA8C;QACpE,OAAO,IAAI,WAAW,CAAI,OAAO,EAAE,IAAI,CAAC,iBAAiB,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;IAC7E,CAAC;;gBA1BF,UAAU,SAAC,EAAC,UAAU,EAAE,MAAM,EAAC;;;;gDAG3B,MAAM,SAAC,QAAQ;gBAnBQ,MAAM;gBAE1B,aAAa;gBAGb,gBAAgB;;;mBAbxB;CAmDC,AA3BD,IA2BC;SA1BY,QAAQ;;;;;;IAEjB,6BAAwC;;;;;IACxC,2BAAuB;;;;;IACvB,kCAAqC;;;;;IACrC,qCAAiE","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injectable, Inject, NgZone, ElementRef} from '@angular/core';\nimport {DOCUMENT} from '@angular/common';\nimport {ViewportRuler} from '@angular/cdk/scrolling';\nimport {DragRef, DragRefConfig} from './drag-ref';\nimport {DropListRef} from './drop-list-ref';\nimport {DragDropRegistry} from './drag-drop-registry';\n\n/** Default configuration to be used when creating a `DragRef`. */\nconst DEFAULT_CONFIG = {\n  dragStartThreshold: 5,\n  pointerDirectionChangeThreshold: 5\n};\n\n/**\n * Service that allows for drag-and-drop functionality to be attached to DOM elements.\n */\n@Injectable({providedIn: 'root'})\nexport class DragDrop {\n  constructor(\n    @Inject(DOCUMENT) private _document: any,\n    private _ngZone: NgZone,\n    private _viewportRuler: ViewportRuler,\n    private _dragDropRegistry: DragDropRegistry<DragRef, DropListRef>) {}\n\n  /**\n   * Turns an element into a draggable item.\n   * @param element Element to which to attach the dragging functionality.\n   * @param config Object used to configure the dragging behavior.\n   */\n  createDrag<T = any>(element: ElementRef<HTMLElement> | HTMLElement,\n                config: DragRefConfig = DEFAULT_CONFIG): DragRef<T> {\n\n    return new DragRef<T>(element, config, this._document, this._ngZone, this._viewportRuler,\n        this._dragDropRegistry);\n  }\n\n  /**\n   * Turns an element into a drop list.\n   * @param element Element to which to attach the drop list functionality.\n   */\n  createDropList<T = any>(element: ElementRef<HTMLElement> | HTMLElement): DropListRef<T> {\n    return new DropListRef<T>(element, this._dragDropRegistry, this._document);\n  }\n}\n"]}