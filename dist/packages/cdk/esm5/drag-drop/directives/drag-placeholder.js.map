{"version":3,"file":"drag-placeholder.js","sourceRoot":"","sources":["../../../../../../src/cdk/drag-drop/directives/drag-placeholder.ts"],"names":[],"mappings":";;;;;;;;;;;AAQA,OAAO,EAAC,SAAS,EAAE,WAAW,EAAE,KAAK,EAAC,MAAM,eAAe,CAAC;;;;;;AAM5D;IAME,4BAAmB,WAA2B;QAA3B,gBAAW,GAAX,WAAW,CAAgB;IAAG,CAAC;;gBANnD,SAAS,SAAC;oBACT,QAAQ,EAAE,iCAAiC;iBAC5C;;;;gBARkB,WAAW;;;uBAW3B,KAAK;;IAER,yBAAC;CAAA,AAPD,IAOC;SAJY,kBAAkB;;;;;;IAE7B,kCAAiB;;IACL,yCAAkC","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive, TemplateRef, Input} from '@angular/core';\n\n/**\n * Element that will be used as a template for the placeholder of a CdkDrag when\n * it is being dragged. The placeholder is displayed in place of the element being dragged.\n */\n@Directive({\n  selector: 'ng-template[cdkDragPlaceholder]'\n})\nexport class CdkDragPlaceholder<T = any> {\n  /** Context data to be added to the placeholder template instance. */\n  @Input() data: T;\n  constructor(public templateRef: TemplateRef<T>) {}\n}\n"]}