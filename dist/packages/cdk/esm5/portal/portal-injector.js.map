{"version":3,"file":"portal-injector.js","sourceRoot":"","sources":["../../../../../src/cdk/portal/portal-injector.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAeA;;;;;;IACE,wBACU,eAAyB,EACzB,aAAgC;QADhC,oBAAe,GAAf,eAAe,CAAU;QACzB,kBAAa,GAAb,aAAa,CAAmB;IAAI,CAAC;;;;;;IAE/C,4BAAG;;;;;IAAH,UAAI,KAAU,EAAE,aAAmB;;YAC3B,KAAK,GAAG,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,KAAK,CAAC;QAE3C,IAAI,OAAO,KAAK,KAAK,WAAW,EAAE;YAChC,OAAO,KAAK,CAAC;SACd;QAED,OAAO,IAAI,CAAC,eAAe,CAAC,GAAG,CAAM,KAAK,EAAE,aAAa,CAAC,CAAC;IAC7D,CAAC;IACH,qBAAC;AAAD,CAAC,AAdD,IAcC;;;;;;;;;;;;IAZG,yCAAiC;;;;;IACjC,uCAAwC","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injector} from '@angular/core';\n\n/**\n * Custom injector to be used when providing custom\n * injection tokens to components inside a portal.\n * @docs-private\n */\nexport class PortalInjector implements Injector {\n  constructor(\n    private _parentInjector: Injector,\n    private _customTokens: WeakMap<any, any>) { }\n\n  get(token: any, notFoundValue?: any): any {\n    const value = this._customTokens.get(token);\n\n    if (typeof value !== 'undefined') {\n      return value;\n    }\n\n    return this._parentInjector.get<any>(token, notFoundValue);\n  }\n}\n"]}