{"version":3,"file":"progress-bar.spec.js","sourceRoot":"","sources":["../../../../src/lib/progress-bar/progress-bar.spec.ts"],"names":[],"mappings":"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","sourcesContent":["import {TestBed, async, ComponentFixture} from '@angular/core/testing';\nimport {Component, DebugElement, Type} from '@angular/core';\nimport {By} from '@angular/platform-browser';\nimport {dispatchFakeEvent} from '@angular/cdk/testing';\nimport {NoopAnimationsModule} from '@angular/platform-browser/animations';\nimport {MatProgressBarModule, MAT_PROGRESS_BAR_LOCATION} from './index';\nimport {MatProgressBar} from './progress-bar';\n\n\ndescribe('MatProgressBar', () => {\n  let fakePath: string;\n\n  function createComponent<T>(componentType: Type<T>,\n                              imports?: Array<Type<{}>>): ComponentFixture<T> {\n    fakePath = '/fake-path';\n\n    TestBed.configureTestingModule({\n      imports: imports || [MatProgressBarModule],\n      declarations: [componentType],\n      providers: [{\n        provide: MAT_PROGRESS_BAR_LOCATION,\n        useValue: {getPathname: () => fakePath}\n      }]\n    }).compileComponents();\n\n    return TestBed.createComponent<T>(componentType);\n  }\n\n  describe('with animation', () => {\n    describe('basic progress-bar', () => {\n      it('should apply a mode of \"determinate\" if no mode is provided.', () => {\n        const fixture = createComponent(BasicProgressBar);\n        fixture.detectChanges();\n        const progressElement = fixture.debugElement.query(By.css('mat-progress-bar'));\n        expect(progressElement.componentInstance.mode).toBe('determinate');\n      });\n\n      it('should define default values for value and bufferValue attributes', () => {\n        const fixture = createComponent(BasicProgressBar);\n        fixture.detectChanges();\n        const progressElement = fixture.debugElement.query(By.css('mat-progress-bar'));\n        expect(progressElement.componentInstance.value).toBe(0);\n        expect(progressElement.componentInstance.bufferValue).toBe(0);\n      });\n\n      it('should clamp value and bufferValue between 0 and 100', () => {\n        const fixture = createComponent(BasicProgressBar);\n        fixture.detectChanges();\n\n        const progressElement = fixture.debugElement.query(By.css('mat-progress-bar'));\n        const progressComponent = progressElement.componentInstance;\n\n        progressComponent.value = 50;\n        expect(progressComponent.value).toBe(50);\n\n        progressComponent.value = 999;\n        expect(progressComponent.value).toBe(100);\n\n        progressComponent.value = -10;\n        expect(progressComponent.value).toBe(0);\n\n        progressComponent.bufferValue = -29;\n        expect(progressComponent.bufferValue).toBe(0);\n\n        progressComponent.bufferValue = 9;\n        expect(progressComponent.bufferValue).toBe(9);\n\n        progressComponent.bufferValue = 1320;\n        expect(progressComponent.bufferValue).toBe(100);\n      });\n\n      it('should return the transform attribute for bufferValue and mode', () => {\n        const fixture = createComponent(BasicProgressBar);\n        fixture.detectChanges();\n\n        const progressElement = fixture.debugElement.query(By.css('mat-progress-bar'));\n        const progressComponent = progressElement.componentInstance;\n\n        expect(progressComponent._primaryTransform()).toEqual({transform: 'scaleX(0)'});\n        expect(progressComponent._bufferTransform()).toBe(undefined);\n\n        progressComponent.value = 40;\n        expect(progressComponent._primaryTransform()).toEqual({transform: 'scaleX(0.4)'});\n        expect(progressComponent._bufferTransform()).toBe(undefined);\n\n        progressComponent.value = 35;\n        progressComponent.bufferValue = 55;\n        expect(progressComponent._primaryTransform()).toEqual({transform: 'scaleX(0.35)'});\n        expect(progressComponent._bufferTransform()).toBe(undefined);\n\n        progressComponent.mode = 'buffer';\n        expect(progressComponent._primaryTransform()).toEqual({transform: 'scaleX(0.35)'});\n        expect(progressComponent._bufferTransform()).toEqual({transform: 'scaleX(0.55)'});\n\n\n        progressComponent.value = 60;\n        progressComponent.bufferValue = 60;\n        expect(progressComponent._primaryTransform()).toEqual({transform: 'scaleX(0.6)'});\n        expect(progressComponent._bufferTransform()).toEqual({transform: 'scaleX(0.6)'});\n      });\n\n      it('should prefix SVG references with the current path', () => {\n        const fixture = createComponent(BasicProgressBar);\n        fixture.detectChanges();\n\n        const rect = fixture.debugElement.query(By.css('rect')).nativeElement;\n        expect(rect.getAttribute('fill')).toMatch(/^url\\(['\"]?\\/fake-path#.*['\"]?\\)$/);\n      });\n\n      it('should account for location hash when prefixing the SVG references', () => {\n        fakePath = '/fake-path#anchor';\n\n        const fixture = createComponent(BasicProgressBar);\n        fixture.detectChanges();\n\n        const rect = fixture.debugElement.query(By.css('rect')).nativeElement;\n        expect(rect.getAttribute('fill')).not.toContain('#anchor#');\n      });\n\n      it('should not be able to tab into the underlying SVG element', () => {\n        const fixture = createComponent(BasicProgressBar);\n        fixture.detectChanges();\n\n        const svg = fixture.debugElement.query(By.css('svg')).nativeElement;\n        expect(svg.getAttribute('focusable')).toBe('false');\n      });\n\n      it('should use latest path when prefixing the SVG references', () => {\n        let fixture = createComponent(BasicProgressBar);\n        fixture.detectChanges();\n\n        let rect = fixture.debugElement.query(By.css('rect')).nativeElement;\n        expect(rect.getAttribute('fill')).toMatch(/^url\\(['\"]?\\/fake-path#.*['\"]?\\)$/);\n\n        fixture.destroy();\n        fakePath = '/another-fake-path';\n\n        fixture = TestBed.createComponent(BasicProgressBar);\n        fixture.detectChanges();\n        rect = fixture.debugElement.query(By.css('rect')).nativeElement;\n\n        expect(rect.getAttribute('fill')).toMatch(/^url\\(['\"]?\\/another-fake-path#.*['\"]?\\)$/);\n      });\n    });\n\n    describe('animation trigger on determinate setting', () => {\n      let fixture: ComponentFixture<BasicProgressBar>;\n      let progressComponent: MatProgressBar;\n      let primaryValueBar: DebugElement;\n\n      beforeEach(() => {\n        fixture = createComponent(BasicProgressBar);\n\n        const progressElement = fixture.debugElement.query(By.css('mat-progress-bar'));\n        progressComponent = progressElement.componentInstance;\n        primaryValueBar = progressElement.query(By.css('.mat-progress-bar-primary'));\n      });\n\n      it('should trigger output event on primary value bar animation end', () => {\n        fixture.detectChanges();\n        spyOn(progressComponent.animationEnd, 'next');\n\n        progressComponent.value = 40;\n        expect(progressComponent.animationEnd.next).not.toHaveBeenCalled();\n\n        // On animation end, output should be emitted.\n        dispatchFakeEvent(primaryValueBar.nativeElement, 'transitionend');\n        expect(progressComponent.animationEnd.next).toHaveBeenCalledWith({ value: 40 });\n      });\n    });\n\n    describe('animation trigger on buffer setting', () => {\n      let fixture: ComponentFixture<BufferProgressBar>;\n      let progressComponent: MatProgressBar;\n      let primaryValueBar: DebugElement;\n\n      beforeEach(() => {\n        fixture = createComponent(BufferProgressBar);\n\n        const progressElement = fixture.debugElement.query(By.css('mat-progress-bar'));\n        progressComponent = progressElement.componentInstance;\n        primaryValueBar = progressElement.query(By.css('.mat-progress-bar-primary'));\n      });\n\n      it('should bind on transitionend eventListener on primaryBarValue', () => {\n        spyOn(primaryValueBar.nativeElement, 'addEventListener');\n        fixture.detectChanges();\n\n        expect(primaryValueBar.nativeElement.addEventListener).toHaveBeenCalled();\n        expect(primaryValueBar.nativeElement.addEventListener\n               .calls.mostRecent().args[0]).toBe('transitionend');\n      });\n\n      it('should trigger output event on primary value bar animation end', () => {\n        fixture.detectChanges();\n        spyOn(progressComponent.animationEnd, 'next');\n\n        progressComponent.value = 40;\n        expect(progressComponent.animationEnd.next).not.toHaveBeenCalled();\n\n        // On animation end, output should be emitted.\n        dispatchFakeEvent(primaryValueBar.nativeElement, 'transitionend');\n        expect(progressComponent.animationEnd.next).toHaveBeenCalledWith({ value: 40 });\n      });\n\n      it('should trigger output event with value not bufferValue', () => {\n        fixture.detectChanges();\n        spyOn(progressComponent.animationEnd, 'next');\n\n        progressComponent.value = 40;\n        progressComponent.bufferValue = 70;\n        expect(progressComponent.animationEnd.next).not.toHaveBeenCalled();\n\n        // On animation end, output should be emitted.\n        dispatchFakeEvent(primaryValueBar.nativeElement, 'transitionend');\n        expect(progressComponent.animationEnd.next).toHaveBeenCalledWith({ value: 40 });\n      });\n    });\n  });\n\n  describe('With NoopAnimations', () => {\n    let progressComponent: MatProgressBar;\n    let primaryValueBar: DebugElement;\n    let fixture: ComponentFixture<BasicProgressBar>;\n\n    beforeEach(async(() => {\n      fixture = createComponent(BasicProgressBar, [MatProgressBarModule, NoopAnimationsModule]);\n      const progressElement = fixture.debugElement.query(By.css('mat-progress-bar'));\n      progressComponent = progressElement.componentInstance;\n      primaryValueBar = progressElement.query(By.css('.mat-progress-bar-primary'));\n    }));\n\n    it('should not bind transition end listener', () => {\n      spyOn(primaryValueBar.nativeElement, 'addEventListener');\n      fixture.detectChanges();\n\n      expect(primaryValueBar.nativeElement.addEventListener).not.toHaveBeenCalled();\n    });\n\n    it('should trigger the animationEnd output on value set', () => {\n      fixture.detectChanges();\n      spyOn(progressComponent.animationEnd, 'next');\n\n      progressComponent.value = 40;\n      expect(progressComponent.animationEnd.next).toHaveBeenCalledWith({ value: 40 });\n    });\n  });\n});\n\n@Component({template: '<mat-progress-bar></mat-progress-bar>'})\nclass BasicProgressBar { }\n\n@Component({template: '<mat-progress-bar mode=\"buffer\"></mat-progress-bar>'})\nclass BufferProgressBar { }\n"]}