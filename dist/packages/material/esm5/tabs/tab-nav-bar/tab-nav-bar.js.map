{"version":3,"file":"tab-nav-bar.js","sourceRoot":"","sources":["../../../../../../src/lib/tabs/tab-nav-bar/tab-nav-bar.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directionality} from '@angular/cdk/bidi';\nimport {Platform} from '@angular/cdk/platform';\nimport {ViewportRuler} from '@angular/cdk/scrolling';\nimport {\n  AfterContentChecked,\n  AfterContentInit,\n  Attribute,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChildren,\n  Directive,\n  ElementRef,\n  forwardRef,\n  Inject,\n  Input,\n  NgZone,\n  OnDestroy,\n  Optional,\n  QueryList,\n  ViewChild,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {\n  CanColor, CanColorCtor,\n  CanDisable, CanDisableCtor,\n  CanDisableRipple, CanDisableRippleCtor,\n  HasTabIndex, HasTabIndexCtor,\n  MAT_RIPPLE_GLOBAL_OPTIONS,\n  mixinColor,\n  mixinDisabled,\n  mixinDisableRipple,\n  mixinTabIndex, RippleConfig,\n  RippleGlobalOptions,\n  RippleRenderer,\n  RippleTarget,\n  ThemePalette,\n} from '@angular/material/core';\nimport {merge, of as observableOf, Subject} from 'rxjs';\nimport {takeUntil} from 'rxjs/operators';\nimport {MatInkBar} from '../ink-bar';\nimport {FocusMonitor} from '@angular/cdk/a11y';\n\n\n// Boilerplate for applying mixins to MatTabNav.\n/** @docs-private */\nexport class MatTabNavBase {\n  constructor(public _elementRef: ElementRef) {}\n}\nexport const _MatTabNavMixinBase: CanDisableRippleCtor & CanColorCtor & typeof MatTabNavBase =\n    mixinDisableRipple(mixinColor(MatTabNavBase, 'primary'));\n\n/**\n * Navigation component matching the styles of the tab group header.\n * Provides anchored navigation with animated ink bar.\n */\n@Component({\n  moduleId: module.id,\n  selector: '[mat-tab-nav-bar]',\n  exportAs: 'matTabNavBar, matTabNav',\n  inputs: ['color', 'disableRipple'],\n  templateUrl: 'tab-nav-bar.html',\n  styleUrls: ['tab-nav-bar.css'],\n  host: {'class': 'mat-tab-nav-bar'},\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MatTabNav extends _MatTabNavMixinBase\n    implements AfterContentChecked, AfterContentInit, CanColor, CanDisableRipple, OnDestroy {\n\n  /** Subject that emits when the component has been destroyed. */\n  private readonly _onDestroy = new Subject<void>();\n\n  private _activeLinkChanged: boolean;\n  private _activeLinkElement: ElementRef<HTMLElement> | null;\n\n  @ViewChild(MatInkBar) _inkBar: MatInkBar;\n\n  /** Query list of all tab links of the tab navigation. */\n  @ContentChildren(forwardRef(() => MatTabLink), {descendants: true})\n  _tabLinks: QueryList<MatTabLink>;\n\n  /** Background color of the tab nav. */\n  @Input()\n  get backgroundColor(): ThemePalette { return this._backgroundColor; }\n  set backgroundColor(value: ThemePalette) {\n    const nativeElement: HTMLElement = this._elementRef.nativeElement;\n\n    nativeElement.classList.remove(`mat-background-${this.backgroundColor}`);\n\n    if (value) {\n      nativeElement.classList.add(`mat-background-${value}`);\n    }\n\n    this._backgroundColor = value;\n  }\n  private _backgroundColor: ThemePalette;\n\n  constructor(elementRef: ElementRef,\n              @Optional() private _dir: Directionality,\n              private _ngZone: NgZone,\n              private _changeDetectorRef: ChangeDetectorRef,\n              private _viewportRuler: ViewportRuler) {\n    super(elementRef);\n  }\n\n  /**\n   * Notifies the component that the active link has been changed.\n   * @breaking-change 8.0.0 `element` parameter to be removed.\n   */\n  updateActiveLink(element: ElementRef) {\n    // Note: keeping the `element` for backwards-compat, but isn't being used for anything.\n    // @breaking-change 8.0.0\n    this._activeLinkChanged = !!element;\n    this._changeDetectorRef.markForCheck();\n  }\n\n  ngAfterContentInit(): void {\n    this._ngZone.runOutsideAngular(() => {\n      const dirChange = this._dir ? this._dir.change : observableOf(null);\n\n      return merge(dirChange, this._viewportRuler.change(10))\n          .pipe(takeUntil(this._onDestroy))\n          .subscribe(() => this._alignInkBar());\n    });\n  }\n\n  /** Checks if the active link has been changed and, if so, will update the ink bar. */\n  ngAfterContentChecked(): void {\n    if (this._activeLinkChanged) {\n      const activeTab = this._tabLinks.find(tab => tab.active);\n\n      this._activeLinkElement = activeTab ? activeTab._elementRef : null;\n      this._alignInkBar();\n      this._activeLinkChanged = false;\n    }\n  }\n\n  ngOnDestroy() {\n    this._onDestroy.next();\n    this._onDestroy.complete();\n  }\n\n  /** Aligns the ink bar to the active link. */\n  _alignInkBar(): void {\n    if (this._activeLinkElement) {\n      this._inkBar.show();\n      this._inkBar.alignToElement(this._activeLinkElement.nativeElement);\n    } else {\n      this._inkBar.hide();\n    }\n  }\n}\n\n\n// Boilerplate for applying mixins to MatTabLink.\nexport class MatTabLinkBase {}\nexport const _MatTabLinkMixinBase:\n    HasTabIndexCtor & CanDisableRippleCtor & CanDisableCtor & typeof MatTabLinkBase =\n        mixinTabIndex(mixinDisableRipple(mixinDisabled(MatTabLinkBase)));\n\n/**\n * Link inside of a `mat-tab-nav-bar`.\n */\n@Directive({\n  selector: '[mat-tab-link], [matTabLink]',\n  exportAs: 'matTabLink',\n  inputs: ['disabled', 'disableRipple', 'tabIndex'],\n  host: {\n    'class': 'mat-tab-link',\n    '[attr.aria-current]': 'active',\n    '[attr.aria-disabled]': 'disabled.toString()',\n    '[attr.tabIndex]': 'tabIndex',\n    '[class.mat-tab-disabled]': 'disabled',\n    '[class.mat-tab-label-active]': 'active',\n  }\n})\nexport class MatTabLink extends _MatTabLinkMixinBase\n    implements OnDestroy, CanDisable, CanDisableRipple, HasTabIndex, RippleTarget {\n\n  /** Whether the tab link is active or not. */\n  protected _isActive: boolean = false;\n\n  /** Reference to the RippleRenderer for the tab-link. */\n  protected _tabLinkRipple: RippleRenderer;\n\n  /** Whether the link is active. */\n  @Input()\n  get active(): boolean { return this._isActive; }\n  set active(value: boolean) {\n    if (value !== this._isActive) {\n      this._isActive = value;\n      this._tabNavBar.updateActiveLink(this._elementRef);\n    }\n  }\n\n  /**\n   * Ripple configuration for ripples that are launched on pointer down. The ripple config\n   * is set to the global ripple options since we don't have any configurable options for\n   * the tab link ripples.\n   * @docs-private\n   */\n  rippleConfig: RippleConfig & RippleGlobalOptions;\n\n  /**\n   * Whether ripples are disabled on interaction.\n   * @docs-private\n   */\n  get rippleDisabled(): boolean {\n    return this.disabled || this.disableRipple || this._tabNavBar.disableRipple ||\n      !!this.rippleConfig.disabled;\n  }\n\n  constructor(private _tabNavBar: MatTabNav,\n              public _elementRef: ElementRef,\n              ngZone: NgZone,\n              platform: Platform,\n              @Optional() @Inject(MAT_RIPPLE_GLOBAL_OPTIONS)\n              globalRippleOptions: RippleGlobalOptions | null,\n              @Attribute('tabindex') tabIndex: string,\n              /**\n               * @deprecated\n               * @breaking-change 8.0.0 `_focusMonitor` parameter to be made required.\n               */\n              private _focusMonitor?: FocusMonitor) {\n    super();\n\n    this._tabLinkRipple = new RippleRenderer(this, ngZone, _elementRef, platform);\n    this._tabLinkRipple.setupTriggerEvents(_elementRef.nativeElement);\n    this.rippleConfig = globalRippleOptions || {};\n\n    this.tabIndex = parseInt(tabIndex) || 0;\n\n    if (_focusMonitor) {\n      _focusMonitor.monitor(_elementRef);\n    }\n  }\n\n  ngOnDestroy() {\n    this._tabLinkRipple._removeTriggerEvents();\n\n    if (this._focusMonitor) {\n      this._focusMonitor.stopMonitoring(this._elementRef);\n    }\n  }\n}\n"]}