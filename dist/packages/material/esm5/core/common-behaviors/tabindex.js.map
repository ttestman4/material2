{"version":3,"file":"tabindex.js","sourceRoot":"","sources":["../../../../../../src/lib/core/common-behaviors/tabindex.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAaA,iCAGC;;;;;;IADC,+BAAiB;;;;;;;;;AAOnB,MAAM,UAAU,aAAa,CAAoC,IAAO,EAAE,eAAmB;IAAnB,gCAAA,EAAA,mBAAmB;IAE3F;QAAqB,mCAAI;QASvB;YAAY,cAAc;iBAAd,UAAc,EAAd,qBAAc,EAAd,IAAc;gBAAd,yBAAc;;YAA1B,+BACW,IAAI,UACd;YAVO,eAAS,GAAW,eAAe,CAAC;;QAU5C,CAAC;QARD,sBAAI,6BAAQ;;;;YAAZ,cAAyB,OAAO,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;;;;;YACtE,UAAa,KAAa;gBACxB,wFAAwF;gBACxF,IAAI,CAAC,SAAS,GAAG,KAAK,IAAI,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,eAAe,CAAC;YAC3D,CAAC;;;WAJqE;QASxE,cAAC;IAAD,CAAC,AAZM,CAAc,IAAI,GAYvB;AACJ,CAAC","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Constructor} from './constructor';\nimport {CanDisable} from './disabled';\n\n\n/** @docs-private */\nexport interface HasTabIndex {\n  /** Tabindex of the component. */\n  tabIndex: number;\n}\n\n/** @docs-private */\nexport type HasTabIndexCtor = Constructor<HasTabIndex>;\n\n/** Mixin to augment a directive with a `tabIndex` property. */\nexport function mixinTabIndex<T extends Constructor<CanDisable>>(base: T, defaultTabIndex = 0)\n    : HasTabIndexCtor & T {\n  return class extends base {\n    private _tabIndex: number = defaultTabIndex;\n\n    get tabIndex(): number { return this.disabled ? -1 : this._tabIndex; }\n    set tabIndex(value: number) {\n      // If the specified tabIndex value is null or undefined, fall back to the default value.\n      this._tabIndex = value != null ? value : defaultTabIndex;\n    }\n\n    constructor(...args: any[]) {\n      super(...args);\n    }\n  };\n}\n"]}