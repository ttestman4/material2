{"version":3,"file":"disabled.js","sourceRoot":"","sources":["../../../../../../src/lib/core/common-behaviors/disabled.ts"],"names":[],"mappings":";;;;;;;;;;;;AAQA,OAAO,EAAC,qBAAqB,EAAC,MAAM,uBAAuB,CAAC;;;;;AAI5D,gCAGC;;;;;;IADC,8BAAkB;;;;;;;;AAOpB,MAAM,UAAU,aAAa,CAA4B,IAAO;IAC9D;QAAqB,mCAAI;QAMvB;YAAY,cAAc;iBAAd,UAAc,EAAd,qBAAc,EAAd,IAAc;gBAAd,yBAAc;;YAA1B,+BAAuC,IAAI,UAAI;YALvC,eAAS,GAAY,KAAK,CAAC;;QAKW,CAAC;QAH/C,sBAAI,6BAAQ;;;;YAAZ,cAAiB,OAAO,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;;;;;YACzC,UAAa,KAAU,IAAI,IAAI,CAAC,SAAS,GAAG,qBAAqB,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;;;WADlC;QAI3C,cAAC;IAAD,CAAC,AAPM,CAAc,IAAI,GAOvB;AACJ,CAAC","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {Constructor} from './constructor';\n\n/** @docs-private */\nexport interface CanDisable {\n  /** Whether the component is disabled. */\n  disabled: boolean;\n}\n\n/** @docs-private */\nexport type CanDisableCtor = Constructor<CanDisable>;\n\n/** Mixin to augment a directive with a `disabled` property. */\nexport function mixinDisabled<T extends Constructor<{}>>(base: T): CanDisableCtor & T {\n  return class extends base {\n    private _disabled: boolean = false;\n\n    get disabled() { return this._disabled; }\n    set disabled(value: any) { this._disabled = coerceBooleanProperty(value); }\n\n    constructor(...args: any[]) { super(...args); }\n  };\n}\n"]}