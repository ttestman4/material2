{"version":3,"file":"step-header.js","sourceRoot":"","sources":["../../../../../src/lib/stepper/step-header.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {FocusMonitor} from '@angular/cdk/a11y';\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  Input,\n  OnDestroy,\n  ViewEncapsulation,\n  TemplateRef,\n} from '@angular/core';\nimport {Subscription} from 'rxjs';\nimport {MatStepLabel} from './step-label';\nimport {MatStepperIntl} from './stepper-intl';\nimport {MatStepperIconContext} from './stepper-icon';\nimport {CdkStepHeader, StepState} from '@angular/cdk/stepper';\n\n\n@Component({\n  moduleId: module.id,\n  selector: 'mat-step-header',\n  templateUrl: 'step-header.html',\n  styleUrls: ['step-header.css'],\n  host: {\n    'class': 'mat-step-header',\n    'role': 'tab',\n  },\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MatStepHeader extends CdkStepHeader implements OnDestroy {\n  private _intlSubscription: Subscription;\n\n  /** State of the given step. */\n  @Input() state: StepState;\n\n  /** Label of the given step. */\n  @Input() label: MatStepLabel | string;\n\n  /** Error message to display when there's an error. */\n  @Input() errorMessage: string;\n\n  /** Overrides for the header icons, passed in via the stepper. */\n  @Input() iconOverrides: {[key: string]: TemplateRef<MatStepperIconContext>};\n\n  /** Index of the given step. */\n  @Input() index: number;\n\n  /** Whether the given step is selected. */\n  @Input() selected: boolean;\n\n  /** Whether the given step label is active. */\n  @Input() active: boolean;\n\n  /** Whether the given step is optional. */\n  @Input() optional: boolean;\n\n  /** Whether the ripple should be disabled. */\n  @Input() disableRipple: boolean;\n\n  constructor(\n    public _intl: MatStepperIntl,\n    private _focusMonitor: FocusMonitor,\n    _elementRef: ElementRef<HTMLElement>,\n    changeDetectorRef: ChangeDetectorRef) {\n    super(_elementRef);\n    _focusMonitor.monitor(_elementRef, true);\n    this._intlSubscription = _intl.changes.subscribe(() => changeDetectorRef.markForCheck());\n  }\n\n  ngOnDestroy() {\n    this._intlSubscription.unsubscribe();\n    this._focusMonitor.stopMonitoring(this._elementRef);\n  }\n\n  /** Returns string label of given step if it is a text label. */\n  _stringLabel(): string | null {\n    return this.label instanceof MatStepLabel ? null : this.label;\n  }\n\n  /** Returns MatStepLabel if the label of given step is a template label. */\n  _templateLabel(): MatStepLabel | null {\n    return this.label instanceof MatStepLabel ? this.label : null;\n  }\n\n  /** Returns the host HTML element. */\n  _getHostElement() {\n    return this._elementRef.nativeElement;\n  }\n\n  /** Template context variables that are exposed to the `matStepperIcon` instances. */\n  _getIconContext(): MatStepperIconContext {\n    return {\n      index: this.index,\n      active: this.active,\n      optional: this.optional\n    };\n  }\n\n  _getDefaultTextForState(state: StepState): string {\n    if (state == 'number') {\n      return `${this.index + 1}`;\n    }\n    if (state == 'edit') {\n      return 'create';\n    }\n    if (state == 'error') {\n      return 'warning';\n    }\n    return state;\n  }\n}\n"]}