{"version":3,"file":"cell.js","sourceRoot":"","sources":["../../../../../src/lib/table/cell.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive, ElementRef, Input} from '@angular/core';\nimport {\n  CdkCell,\n  CdkCellDef,\n  CdkColumnDef, CdkFooterCell, CdkFooterCellDef,\n  CdkHeaderCell,\n  CdkHeaderCellDef,\n} from '@angular/cdk/table';\n\n/**\n * Cell definition for the mat-table.\n * Captures the template of a column's data row cell as well as cell-specific properties.\n */\n@Directive({\n  selector: '[matCellDef]',\n  providers: [{provide: CdkCellDef, useExisting: MatCellDef}]\n})\nexport class MatCellDef extends CdkCellDef {}\n\n/**\n * Header cell definition for the mat-table.\n * Captures the template of a column's header cell and as well as cell-specific properties.\n */\n@Directive({\n  selector: '[matHeaderCellDef]',\n  providers: [{provide: CdkHeaderCellDef, useExisting: MatHeaderCellDef}]\n})\nexport class MatHeaderCellDef extends CdkHeaderCellDef {}\n\n/**\n * Footer cell definition for the mat-table.\n * Captures the template of a column's footer cell and as well as cell-specific properties.\n */\n@Directive({\n  selector: '[matFooterCellDef]',\n  providers: [{provide: CdkFooterCellDef, useExisting: MatFooterCellDef}]\n})\nexport class MatFooterCellDef extends CdkFooterCellDef {}\n\n/**\n * Column definition for the mat-table.\n * Defines a set of cells available for a table column.\n */\n@Directive({\n  selector: '[matColumnDef]',\n  providers: [\n    {provide: CdkColumnDef, useExisting: MatColumnDef},\n    {provide: 'MAT_SORT_HEADER_COLUMN_DEF', useExisting: MatColumnDef}\n  ],\n})\nexport class MatColumnDef extends CdkColumnDef {\n  /** Unique name for this column. */\n  @Input('matColumnDef') name: string;\n\n  /** Whether this column should be sticky positioned at the start of the row */\n  @Input() sticky: boolean;\n\n  /** Whether this column should be sticky positioned on the end of the row */\n  @Input() stickyEnd: boolean;\n}\n\n/** Header cell template container that adds the right classes and role. */\n@Directive({\n  selector: 'mat-header-cell, th[mat-header-cell]',\n  host: {\n    'class': 'mat-header-cell',\n    'role': 'columnheader',\n  },\n})\nexport class MatHeaderCell extends CdkHeaderCell {\n  constructor(columnDef: CdkColumnDef,\n              elementRef: ElementRef<HTMLElement>) {\n    super(columnDef, elementRef);\n    elementRef.nativeElement.classList.add(`mat-column-${columnDef.cssClassFriendlyName}`);\n  }\n}\n\n/** Footer cell template container that adds the right classes and role. */\n@Directive({\n  selector: 'mat-footer-cell, td[mat-footer-cell]',\n  host: {\n    'class': 'mat-footer-cell',\n    'role': 'gridcell',\n  },\n})\nexport class MatFooterCell extends CdkFooterCell {\n  constructor(columnDef: CdkColumnDef,\n              elementRef: ElementRef) {\n    super(columnDef, elementRef);\n    elementRef.nativeElement.classList.add(`mat-column-${columnDef.cssClassFriendlyName}`);\n  }\n}\n\n/** Cell template container that adds the right classes and role. */\n@Directive({\n  selector: 'mat-cell, td[mat-cell]',\n  host: {\n    'class': 'mat-cell',\n    'role': 'gridcell',\n  },\n})\nexport class MatCell extends CdkCell {\n  constructor(columnDef: CdkColumnDef,\n              elementRef: ElementRef<HTMLElement>) {\n    super(columnDef, elementRef);\n    elementRef.nativeElement.classList.add(`mat-column-${columnDef.cssClassFriendlyName}`);\n  }\n}\n"]}