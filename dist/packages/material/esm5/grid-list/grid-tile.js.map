{"version":3,"file":"grid-tile.js","sourceRoot":"","sources":["../../../../../src/lib/grid-list/grid-tile.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  Component,\n  ViewEncapsulation,\n  ElementRef,\n  Input,\n  Optional,\n  ContentChildren,\n  QueryList,\n  AfterContentInit,\n  Directive,\n  ChangeDetectionStrategy,\n  Inject,\n} from '@angular/core';\nimport {MatLine, setLines} from '@angular/material/core';\nimport {coerceNumberProperty} from '@angular/cdk/coercion';\nimport {MAT_GRID_LIST, MatGridListBase} from './grid-list-base';\n\n@Component({\n  moduleId: module.id,\n  selector: 'mat-grid-tile',\n  exportAs: 'matGridTile',\n  host: {\n    'class': 'mat-grid-tile',\n  },\n  templateUrl: 'grid-tile.html',\n  styleUrls: ['grid-list.css'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MatGridTile {\n  _rowspan: number = 1;\n  _colspan: number = 1;\n\n  constructor(\n    private _element: ElementRef<HTMLElement>,\n    @Optional() @Inject(MAT_GRID_LIST) public _gridList?: MatGridListBase) {}\n\n  /** Amount of rows that the grid tile takes up. */\n  @Input()\n  get rowspan(): number { return this._rowspan; }\n  set rowspan(value: number) { this._rowspan = Math.round(coerceNumberProperty(value)); }\n\n  /** Amount of columns that the grid tile takes up. */\n  @Input()\n  get colspan(): number { return this._colspan; }\n  set colspan(value: number) { this._colspan = Math.round(coerceNumberProperty(value)); }\n\n  /**\n   * Sets the style of the grid-tile element.  Needs to be set manually to avoid\n   * \"Changed after checked\" errors that would occur with HostBinding.\n   */\n  _setStyle(property: string, value: any): void {\n    (this._element.nativeElement.style as any)[property] = value;\n  }\n}\n\n@Component({\n  moduleId: module.id,\n  selector: 'mat-grid-tile-header, mat-grid-tile-footer',\n  templateUrl: 'grid-tile-text.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class MatGridTileText implements AfterContentInit {\n  @ContentChildren(MatLine) _lines: QueryList<MatLine>;\n\n  constructor(private _element: ElementRef<HTMLElement>) {}\n\n  ngAfterContentInit() {\n    setLines(this._lines, this._element);\n  }\n}\n\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * @docs-private\n */\n@Directive({\n  selector: '[mat-grid-avatar], [matGridAvatar]',\n  host: {'class': 'mat-grid-avatar'}\n})\nexport class MatGridAvatarCssMatStyler {}\n\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * @docs-private\n */\n@Directive({\n  selector: 'mat-grid-tile-header',\n  host: {'class': 'mat-grid-tile-header'}\n})\nexport class MatGridTileHeaderCssMatStyler {}\n\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * @docs-private\n */\n@Directive({\n  selector: 'mat-grid-tile-footer',\n  host: {'class': 'mat-grid-tile-footer'}\n})\nexport class MatGridTileFooterCssMatStyler {}\n"]}