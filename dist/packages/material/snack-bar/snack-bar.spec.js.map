{"version":3,"file":"snack-bar.spec.js","sourceRoot":"","sources":["../../../../src/lib/snack-bar/snack-bar.spec.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  inject,\n  ComponentFixture,\n  TestBed,\n  fakeAsync,\n  tick,\n  flush,\n} from '@angular/core/testing';\nimport {\n  NgModule,\n  Component,\n  Directive,\n  ViewChild,\n  ViewContainerRef,\n  Inject,\n  TemplateRef,\n} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {NoopAnimationsModule} from '@angular/platform-browser/animations';\nimport {OverlayContainer} from '@angular/cdk/overlay';\nimport {LiveAnnouncer} from '@angular/cdk/a11y';\nimport {\n  MatSnackBarModule,\n  MatSnackBar,\n  MatSnackBarConfig,\n  MatSnackBarRef,\n  SimpleSnackBar,\n  MAT_SNACK_BAR_DATA,\n  MAT_SNACK_BAR_DEFAULT_OPTIONS,\n} from './index';\n\ndescribe('MatSnackBar', () => {\n  let snackBar: MatSnackBar;\n  let liveAnnouncer: LiveAnnouncer;\n  let overlayContainer: OverlayContainer;\n  let overlayContainerElement: HTMLElement;\n\n  let testViewContainerRef: ViewContainerRef;\n  let viewContainerFixture: ComponentFixture<ComponentWithChildViewContainer>;\n\n  let simpleMessage = 'Burritos are here!';\n  let simpleActionLabel = 'pickup';\n\n  beforeEach(fakeAsync(() => {\n    TestBed.configureTestingModule({\n      imports: [MatSnackBarModule, SnackBarTestModule, NoopAnimationsModule],\n    }).compileComponents();\n  }));\n\n  beforeEach(inject([MatSnackBar, LiveAnnouncer, OverlayContainer],\n    (sb: MatSnackBar, la: LiveAnnouncer, oc: OverlayContainer) => {\n    snackBar = sb;\n    liveAnnouncer = la;\n    overlayContainer = oc;\n    overlayContainerElement = oc.getContainerElement();\n  }));\n\n  afterEach(() => {\n    overlayContainer.ngOnDestroy();\n    liveAnnouncer.ngOnDestroy();\n  });\n\n  beforeEach(() => {\n    viewContainerFixture = TestBed.createComponent(ComponentWithChildViewContainer);\n\n    viewContainerFixture.detectChanges();\n    testViewContainerRef = viewContainerFixture.componentInstance.childViewContainer;\n  });\n\n  it('should have the role of `alert` with an `assertive` politeness if no announcement message ' +\n     'is provided', () => {\n    snackBar.openFromComponent(BurritosNotification,\n      {announcementMessage: '', politeness: 'assertive'});\n\n    viewContainerFixture.detectChanges();\n\n    const containerElement = overlayContainerElement.querySelector('snack-bar-container')!;\n    expect(containerElement.getAttribute('role'))\n        .toBe('alert', 'Expected snack bar container to have role=\"alert\"');\n  });\n\n  it('should have the role of `status` with an `assertive` politeness if an announcement message ' +\n     'is provided', () => {\n      snackBar.openFromComponent(BurritosNotification,\n        {announcementMessage: 'Yay Burritos', politeness: 'assertive'});\n    viewContainerFixture.detectChanges();\n\n    const containerElement = overlayContainerElement.querySelector('snack-bar-container')!;\n    expect(containerElement.getAttribute('role'))\n        .toBe('status', 'Expected snack bar container to have role=\"status\"');\n  });\n\n  it('should have the role of `status` with a `polite` politeness', () => {\n    snackBar.openFromComponent(BurritosNotification, {politeness: 'polite'});\n    viewContainerFixture.detectChanges();\n\n    const containerElement = overlayContainerElement.querySelector('snack-bar-container')!;\n    expect(containerElement.getAttribute('role'))\n        .toBe('status', 'Expected snack bar container to have role=\"status\"');\n  });\n\n  it('should remove the role if the politeness is turned off', () => {\n    snackBar.openFromComponent(BurritosNotification, {politeness: 'off'});\n    viewContainerFixture.detectChanges();\n\n    const containerElement = overlayContainerElement.querySelector('snack-bar-container')!;\n    expect(containerElement.getAttribute('role')).toBeFalsy('Expected role to be removed');\n  });\n\n  it('should open and close a snackbar without a ViewContainerRef', fakeAsync(() => {\n    let snackBarRef = snackBar.open('Snack time!', 'Chew');\n    viewContainerFixture.detectChanges();\n\n    let messageElement = overlayContainerElement.querySelector('snack-bar-container')!;\n    expect(messageElement.textContent).toContain('Snack time!',\n       'Expected snack bar to show a message without a ViewContainerRef');\n\n    snackBarRef.dismiss();\n    viewContainerFixture.detectChanges();\n    flush();\n\n    expect(overlayContainerElement.childNodes.length)\n        .toBe(0, 'Expected snack bar to be dismissed without a ViewContainerRef');\n  }));\n\n  it('should open a simple message with a button', () => {\n    let config: MatSnackBarConfig = {viewContainerRef: testViewContainerRef};\n    let snackBarRef = snackBar.open(simpleMessage, simpleActionLabel, config);\n\n    viewContainerFixture.detectChanges();\n\n    expect(snackBarRef.instance instanceof SimpleSnackBar)\n      .toBe(true, 'Expected the snack bar content component to be SimpleSnackBar');\n    expect(snackBarRef.instance.snackBarRef)\n      .toBe(snackBarRef,\n            'Expected the snack bar reference to be placed in the component instance');\n\n    let messageElement = overlayContainerElement.querySelector('snack-bar-container')!;\n    expect(messageElement.textContent)\n        .toContain(simpleMessage, `Expected the snack bar message to be '${simpleMessage}'`);\n\n    let buttonElement = overlayContainerElement.querySelector('button.mat-button')!;\n    expect(buttonElement.tagName)\n        .toBe('BUTTON', 'Expected snack bar action label to be a <button>');\n    expect(buttonElement.textContent)\n        .toBe(simpleActionLabel,\n              `Expected the snack bar action label to be '${simpleActionLabel}'`);\n  });\n\n  it('should open a simple message with no button', () => {\n    let config: MatSnackBarConfig = {viewContainerRef: testViewContainerRef};\n    let snackBarRef = snackBar.open(simpleMessage, undefined, config);\n\n    viewContainerFixture.detectChanges();\n\n    expect(snackBarRef.instance instanceof SimpleSnackBar)\n      .toBe(true, 'Expected the snack bar content component to be SimpleSnackBar');\n    expect(snackBarRef.instance.snackBarRef)\n      .toBe(snackBarRef, 'Expected the snack bar reference to be placed in the component instance');\n\n    let messageElement = overlayContainerElement.querySelector('snack-bar-container')!;\n    expect(messageElement.textContent)\n        .toContain(simpleMessage, `Expected the snack bar message to be '${simpleMessage}'`);\n    expect(overlayContainerElement.querySelector('button.mat-button'))\n        .toBeNull('Expected the query selection for action label to be null');\n  });\n\n  it('should dismiss the snack bar and remove itself from the view', fakeAsync(() => {\n    let config: MatSnackBarConfig = {viewContainerRef: testViewContainerRef};\n    let dismissCompleteSpy = jasmine.createSpy('dismiss complete spy');\n\n    let snackBarRef = snackBar.open(simpleMessage, undefined, config);\n    viewContainerFixture.detectChanges();\n    expect(overlayContainerElement.childElementCount)\n        .toBeGreaterThan(0, 'Expected overlay container element to have at least one child');\n\n    snackBarRef.afterDismissed().subscribe(undefined, undefined, dismissCompleteSpy);\n\n    snackBarRef.dismiss();\n    viewContainerFixture.detectChanges();  // Run through animations for dismissal\n    flush();\n\n    expect(dismissCompleteSpy).toHaveBeenCalled();\n    expect(overlayContainerElement.childElementCount)\n        .toBe(0, 'Expected the overlay container element to have no child elements');\n  }));\n\n\n  it('should default to the passed message for the announcement message', fakeAsync(() => {\n    spyOn(liveAnnouncer, 'announce');\n\n    snackBar.open(simpleMessage);\n    viewContainerFixture.detectChanges();\n\n    expect(overlayContainerElement.childElementCount)\n      .toBe(1, 'Expected the overlay with the default announcement message to be added');\n\n    // Expect the live announcer to have been called with the display message and some\n    // string for the politeness. We do not want to test for the default politeness here.\n    expect(liveAnnouncer.announce).toHaveBeenCalledWith(simpleMessage, jasmine.any(String));\n  }));\n\n  it('should be able to specify a custom announcement message', fakeAsync(() => {\n    spyOn(liveAnnouncer, 'announce');\n\n    snackBar.open(simpleMessage, '', {\n      announcementMessage: 'Custom announcement',\n      politeness: 'assertive'\n    });\n    viewContainerFixture.detectChanges();\n\n    expect(overlayContainerElement.childElementCount)\n      .toBe(1, 'Expected the overlay with a custom `announcementMessage` to be added');\n\n    expect(liveAnnouncer.announce).toHaveBeenCalledWith('Custom announcement', 'assertive');\n  }));\n\n  it('should be able to get dismissed through the service', fakeAsync(() => {\n    snackBar.open(simpleMessage);\n    viewContainerFixture.detectChanges();\n    expect(overlayContainerElement.childElementCount).toBeGreaterThan(0);\n\n    snackBar.dismiss();\n    viewContainerFixture.detectChanges();\n    flush();\n\n    expect(overlayContainerElement.childElementCount).toBe(0);\n  }));\n\n  it('should clean itself up when the view container gets destroyed', fakeAsync(() => {\n    snackBar.open(simpleMessage, undefined, { viewContainerRef: testViewContainerRef });\n    viewContainerFixture.detectChanges();\n    expect(overlayContainerElement.childElementCount).toBeGreaterThan(0);\n\n    viewContainerFixture.componentInstance.childComponentExists = false;\n    viewContainerFixture.detectChanges();\n    flush();\n\n    expect(overlayContainerElement.childElementCount)\n        .toBe(0, 'Expected snack bar to be removed after the view container was destroyed');\n  }));\n\n  it('should set the animation state to visible on entry', () => {\n    let config: MatSnackBarConfig = {viewContainerRef: testViewContainerRef};\n    let snackBarRef = snackBar.open(simpleMessage, undefined, config);\n\n    viewContainerFixture.detectChanges();\n    expect(snackBarRef.containerInstance._animationState)\n        .toBe('visible', `Expected the animation state would be 'visible'.`);\n    snackBarRef.dismiss();\n\n    viewContainerFixture.detectChanges();\n    expect(snackBarRef.containerInstance._animationState)\n        .toBe('hidden', `Expected the animation state would be 'hidden'.`);\n  });\n\n  it('should set the animation state to complete on exit', () => {\n    let config: MatSnackBarConfig = {viewContainerRef: testViewContainerRef};\n    let snackBarRef = snackBar.open(simpleMessage, undefined, config);\n    snackBarRef.dismiss();\n\n    viewContainerFixture.detectChanges();\n    expect(snackBarRef.containerInstance._animationState)\n        .toBe('hidden', `Expected the animation state would be 'hidden'.`);\n  });\n\n  it(`should set the old snack bar animation state to complete and the new snack bar animation\n      state to visible on entry of new snack bar`, fakeAsync(() => {\n    let config: MatSnackBarConfig = {viewContainerRef: testViewContainerRef};\n    let snackBarRef = snackBar.open(simpleMessage, undefined, config);\n    let dismissCompleteSpy = jasmine.createSpy('dismiss complete spy');\n\n    viewContainerFixture.detectChanges();\n    expect(snackBarRef.containerInstance._animationState)\n        .toBe('visible', `Expected the animation state would be 'visible'.`);\n\n    let config2 = {viewContainerRef: testViewContainerRef};\n    let snackBarRef2 = snackBar.open(simpleMessage, undefined, config2);\n\n    viewContainerFixture.detectChanges();\n    snackBarRef.afterDismissed().subscribe(undefined, undefined, dismissCompleteSpy);\n    flush();\n\n    expect(dismissCompleteSpy).toHaveBeenCalled();\n    expect(snackBarRef.containerInstance._animationState)\n        .toBe('hidden', `Expected the animation state would be 'hidden'.`);\n    expect(snackBarRef2.containerInstance._animationState)\n        .toBe('visible', `Expected the animation state would be 'visible'.`);\n  }));\n\n  it('should open a new snackbar after dismissing a previous snackbar', fakeAsync(() => {\n    let config: MatSnackBarConfig = {viewContainerRef: testViewContainerRef};\n    let snackBarRef = snackBar.open(simpleMessage, 'Dismiss', config);\n\n    viewContainerFixture.detectChanges();\n\n    snackBarRef.dismiss();\n    viewContainerFixture.detectChanges();\n\n    // Wait for the snackbar dismiss animation to finish.\n    flush();\n    snackBarRef = snackBar.open('Second snackbar', 'Dismiss', config);\n    viewContainerFixture.detectChanges();\n\n    // Wait for the snackbar open animation to finish.\n    flush();\n    expect(snackBarRef.containerInstance._animationState)\n        .toBe('visible', `Expected the animation state would be 'visible'.`);\n  }));\n\n  it('should remove past snackbars when opening new snackbars', fakeAsync(() => {\n    snackBar.open('First snackbar');\n    viewContainerFixture.detectChanges();\n\n    snackBar.open('Second snackbar');\n    viewContainerFixture.detectChanges();\n    flush();\n\n    snackBar.open('Third snackbar');\n    viewContainerFixture.detectChanges();\n    flush();\n\n    expect(overlayContainerElement.textContent!.trim()).toBe('Third snackbar');\n  }));\n\n  it('should remove snackbar if another is shown while its still animating open', fakeAsync(() => {\n    snackBar.open('First snackbar');\n    viewContainerFixture.detectChanges();\n\n    snackBar.open('Second snackbar');\n    viewContainerFixture.detectChanges();\n\n    tick();\n    expect(overlayContainerElement.textContent!.trim()).toBe('Second snackbar');\n\n    // Let remaining animations run.\n    tick(500);\n  }));\n\n  it('should dismiss the snackbar when the action is called, notifying of both action and dismiss',\n     fakeAsync(() => {\n      const dismissCompleteSpy = jasmine.createSpy('dismiss complete spy');\n      const actionCompleteSpy = jasmine.createSpy('action complete spy');\n      const snackBarRef = snackBar.open('Some content', 'Dismiss');\n      viewContainerFixture.detectChanges();\n\n      snackBarRef.afterDismissed().subscribe(undefined, undefined, dismissCompleteSpy);\n      snackBarRef.onAction().subscribe(undefined, undefined, actionCompleteSpy);\n\n      let actionButton =\n        overlayContainerElement.querySelector('button.mat-button') as HTMLButtonElement;\n      actionButton.click();\n      viewContainerFixture.detectChanges();\n      tick();\n\n      expect(dismissCompleteSpy).toHaveBeenCalled();\n      expect(actionCompleteSpy).toHaveBeenCalled();\n\n      tick(500);\n    }));\n\n  it('should allow manually dismissing with an action', fakeAsync(() => {\n    const dismissCompleteSpy = jasmine.createSpy('dismiss complete spy');\n    const actionCompleteSpy = jasmine.createSpy('action complete spy');\n    const snackBarRef = snackBar.open('Some content');\n    viewContainerFixture.detectChanges();\n\n    snackBarRef.afterDismissed().subscribe(undefined, undefined, dismissCompleteSpy);\n    snackBarRef.onAction().subscribe(undefined, undefined, actionCompleteSpy);\n\n    snackBarRef.dismissWithAction();\n    viewContainerFixture.detectChanges();\n    tick();\n\n    expect(dismissCompleteSpy).toHaveBeenCalled();\n    expect(actionCompleteSpy).toHaveBeenCalled();\n\n    tick(500);\n  }));\n\n  it('should indicate in `afterClosed` whether it was dismissed by an action', fakeAsync(() => {\n    const dismissSpy = jasmine.createSpy('dismiss spy');\n    const snackBarRef = snackBar.open('Some content');\n    viewContainerFixture.detectChanges();\n\n    snackBarRef.afterDismissed().subscribe(dismissSpy);\n\n    snackBarRef.dismissWithAction();\n    viewContainerFixture.detectChanges();\n    tick();\n\n    expect(dismissSpy).toHaveBeenCalledWith(jasmine.objectContaining({dismissedByAction: true}));\n    tick(500);\n  }));\n\n  it('should complete the onAction stream when not closing via an action', fakeAsync(() => {\n    const actionCompleteSpy = jasmine.createSpy('action complete spy');\n    const snackBarRef = snackBar.open('Some content');\n    viewContainerFixture.detectChanges();\n\n    snackBarRef.onAction().subscribe(undefined, undefined, actionCompleteSpy);\n    snackBarRef.dismiss();\n    viewContainerFixture.detectChanges();\n    tick();\n\n    expect(actionCompleteSpy).toHaveBeenCalled();\n\n    tick(500);\n  }));\n\n  it('should dismiss automatically after a specified timeout', fakeAsync(() => {\n    let config = new MatSnackBarConfig();\n    config.duration = 250;\n    let snackBarRef = snackBar.open('content', 'test', config);\n    let afterDismissSpy = jasmine.createSpy('after dismiss spy');\n    snackBarRef.afterDismissed().subscribe(afterDismissSpy);\n\n    viewContainerFixture.detectChanges();\n    tick();\n    expect(afterDismissSpy).not.toHaveBeenCalled();\n\n    tick(1000);\n    viewContainerFixture.detectChanges();\n    tick();\n    expect(afterDismissSpy).toHaveBeenCalled();\n  }));\n\n  it('should clear the dismiss timeout when dismissed before timeout expiration', fakeAsync(() => {\n    let config = new MatSnackBarConfig();\n    config.duration = 1000;\n    snackBar.open('content', 'test', config);\n\n    setTimeout(() => snackBar.dismiss(), 500);\n\n    tick(600);\n    viewContainerFixture.detectChanges();\n    tick();\n\n    expect(viewContainerFixture.isStable()).toBe(true);\n  }));\n\n  it('should add extra classes to the container', () => {\n    snackBar.open(simpleMessage, simpleActionLabel, { panelClass: ['one', 'two'] });\n    viewContainerFixture.detectChanges();\n\n    let containerClasses = overlayContainerElement.querySelector('snack-bar-container')!.classList;\n\n    expect(containerClasses).toContain('one');\n    expect(containerClasses).toContain('two');\n  });\n\n  it('should set the layout direction', () => {\n    snackBar.open(simpleMessage, simpleActionLabel, { direction: 'rtl' });\n    viewContainerFixture.detectChanges();\n\n    let pane = overlayContainerElement.querySelector('.cdk-global-overlay-wrapper')!;\n\n    expect(pane.getAttribute('dir')).toBe('rtl', 'Expected the pane to be in RTL mode.');\n  });\n\n  it('should be able to override the default config', fakeAsync(() => {\n    overlayContainer.ngOnDestroy();\n    viewContainerFixture.destroy();\n\n    TestBed\n      .resetTestingModule()\n      .overrideProvider(MAT_SNACK_BAR_DEFAULT_OPTIONS, {\n        deps: [],\n        useFactory: () => ({panelClass: 'custom-class'})\n      })\n      .configureTestingModule({imports: [MatSnackBarModule, NoopAnimationsModule]})\n      .compileComponents();\n\n    inject([MatSnackBar, OverlayContainer], (sb: MatSnackBar, oc: OverlayContainer) => {\n      snackBar = sb;\n      overlayContainer = oc;\n      overlayContainerElement = oc.getContainerElement();\n    })();\n\n    snackBar.open(simpleMessage);\n    flush();\n\n    expect(overlayContainerElement.querySelector('snack-bar-container')!.classList)\n        .toContain('custom-class', 'Expected class applied through the defaults to be applied.');\n  }));\n\n  it('should dismiss the open snack bar on destroy', fakeAsync(() => {\n    snackBar.open(simpleMessage);\n    viewContainerFixture.detectChanges();\n    expect(overlayContainerElement.childElementCount).toBeGreaterThan(0);\n\n    snackBar.ngOnDestroy();\n    viewContainerFixture.detectChanges();\n    flush();\n\n    expect(overlayContainerElement.childElementCount).toBe(0);\n  }));\n\n  describe('with custom component', () => {\n    it('should open a custom component', () => {\n      const snackBarRef = snackBar.openFromComponent(BurritosNotification);\n\n      expect(snackBarRef.instance instanceof BurritosNotification)\n        .toBe(true, 'Expected the snack bar content component to be BurritosNotification');\n      expect(overlayContainerElement.textContent!.trim())\n          .toBe('Burritos are on the way.', 'Expected component to have the proper text.');\n    });\n\n    it('should inject the snack bar reference into the component', () => {\n      const snackBarRef = snackBar.openFromComponent(BurritosNotification);\n\n      expect(snackBarRef.instance.snackBarRef)\n        .toBe(snackBarRef, 'Expected component to have an injected snack bar reference.');\n    });\n\n    it('should be able to inject arbitrary user data', () => {\n      const snackBarRef = snackBar.openFromComponent(BurritosNotification, {\n        data: {\n          burritoType: 'Chimichanga'\n        }\n      });\n\n      expect(snackBarRef.instance.data).toBeTruthy('Expected component to have a data object.');\n      expect(snackBarRef.instance.data.burritoType)\n        .toBe('Chimichanga', 'Expected the injected data object to be the one the user provided.');\n    });\n\n    it('should allow manually dismissing with an action', fakeAsync(() => {\n      const dismissCompleteSpy = jasmine.createSpy('dismiss complete spy');\n      const actionCompleteSpy = jasmine.createSpy('action complete spy');\n      const snackBarRef = snackBar.openFromComponent(BurritosNotification);\n      viewContainerFixture.detectChanges();\n\n      snackBarRef.afterDismissed().subscribe(undefined, undefined, dismissCompleteSpy);\n      snackBarRef.onAction().subscribe(undefined, undefined, actionCompleteSpy);\n\n      snackBarRef.dismissWithAction();\n      viewContainerFixture.detectChanges();\n      tick();\n\n      expect(dismissCompleteSpy).toHaveBeenCalled();\n      expect(actionCompleteSpy).toHaveBeenCalled();\n\n      tick(500);\n    }));\n\n  });\n\n  describe('with TemplateRef', () => {\n    let templateFixture: ComponentFixture<ComponentWithTemplateRef>;\n\n    beforeEach(() => {\n      templateFixture = TestBed.createComponent(ComponentWithTemplateRef);\n      templateFixture.detectChanges();\n    });\n\n    it('should be able to open a snack bar using a TemplateRef', () => {\n      templateFixture.componentInstance.localValue = 'Pizza';\n      snackBar.openFromTemplate(templateFixture.componentInstance.templateRef);\n      templateFixture.detectChanges();\n\n      const containerElement = overlayContainerElement.querySelector('snack-bar-container')!;\n\n      expect(containerElement.textContent).toContain('Fries');\n      expect(containerElement.textContent).toContain('Pizza');\n\n      templateFixture.componentInstance.localValue = 'Pasta';\n      templateFixture.detectChanges();\n\n      expect(containerElement.textContent).toContain('Pasta');\n    });\n\n    it('should be able to pass in contextual data when opening with a TemplateRef', () => {\n      snackBar.openFromTemplate(templateFixture.componentInstance.templateRef, {\n        data: {value: 'Oranges'}\n      });\n\n      const containerElement = overlayContainerElement.querySelector('snack-bar-container')!;\n\n      expect(containerElement.textContent).toContain('Oranges');\n    });\n\n  });\n\n});\n\ndescribe('MatSnackBar with parent MatSnackBar', () => {\n  let parentSnackBar: MatSnackBar;\n  let childSnackBar: MatSnackBar;\n  let overlayContainer: OverlayContainer;\n  let overlayContainerElement: HTMLElement;\n  let fixture: ComponentFixture<ComponentThatProvidesMatSnackBar>;\n  let liveAnnouncer: LiveAnnouncer;\n\n  beforeEach(fakeAsync(() => {\n    TestBed.configureTestingModule({\n      imports: [MatSnackBarModule, SnackBarTestModule, NoopAnimationsModule],\n      declarations: [ComponentThatProvidesMatSnackBar],\n    }).compileComponents();\n  }));\n\n  beforeEach(inject([MatSnackBar, LiveAnnouncer, OverlayContainer],\n    (sb: MatSnackBar, la: LiveAnnouncer, oc: OverlayContainer) => {\n    parentSnackBar = sb;\n    liveAnnouncer = la;\n    overlayContainer = oc;\n    overlayContainerElement = oc.getContainerElement();\n\n    fixture = TestBed.createComponent(ComponentThatProvidesMatSnackBar);\n    childSnackBar = fixture.componentInstance.snackBar;\n    fixture.detectChanges();\n  }));\n\n  afterEach(() => {\n    overlayContainer.ngOnDestroy();\n    liveAnnouncer.ngOnDestroy();\n  });\n\n  it('should close snackBars opened by parent when opening from child', fakeAsync(() => {\n    parentSnackBar.open('Pizza');\n    fixture.detectChanges();\n    tick(1000);\n\n    expect(overlayContainerElement.textContent)\n        .toContain('Pizza', 'Expected a snackBar to be opened');\n\n    childSnackBar.open('Taco');\n    fixture.detectChanges();\n    tick(1000);\n\n    expect(overlayContainerElement.textContent)\n        .toContain('Taco', 'Expected parent snackbar msg to be dismissed by opening from child');\n  }));\n\n  it('should close snackBars opened by child when opening from parent', fakeAsync(() => {\n    childSnackBar.open('Pizza');\n    fixture.detectChanges();\n    tick(1000);\n\n    expect(overlayContainerElement.textContent)\n        .toContain('Pizza', 'Expected a snackBar to be opened');\n\n    parentSnackBar.open('Taco');\n    fixture.detectChanges();\n    tick(1000);\n\n    expect(overlayContainerElement.textContent)\n        .toContain('Taco', 'Expected child snackbar msg to be dismissed by opening from parent');\n  }));\n\n  it('should not dismiss parent snack bar if child is destroyed', fakeAsync(() => {\n    parentSnackBar.open('Pizza');\n    fixture.detectChanges();\n    expect(overlayContainerElement.childElementCount).toBeGreaterThan(0);\n\n    childSnackBar.ngOnDestroy();\n    fixture.detectChanges();\n    flush();\n\n    expect(overlayContainerElement.childElementCount).toBeGreaterThan(0);\n  }));\n});\n\ndescribe('MatSnackBar Positioning', () => {\n  let snackBar: MatSnackBar;\n  let liveAnnouncer: LiveAnnouncer;\n  let overlayContainer: OverlayContainer;\n  let overlayContainerEl: HTMLElement;\n\n  let viewContainerFixture: ComponentFixture<ComponentWithChildViewContainer>;\n\n  let simpleMessage = 'Burritos are here!';\n  let simpleActionLabel = 'pickup';\n\n  beforeEach(fakeAsync(() => {\n    TestBed.configureTestingModule({\n      imports: [MatSnackBarModule, SnackBarTestModule, NoopAnimationsModule],\n    }).compileComponents();\n  }));\n\n  beforeEach(inject([MatSnackBar, LiveAnnouncer, OverlayContainer],\n    (sb: MatSnackBar, la: LiveAnnouncer, oc: OverlayContainer) => {\n    snackBar = sb;\n    liveAnnouncer = la;\n    overlayContainer = oc;\n    overlayContainerEl = oc.getContainerElement();\n  }));\n\n  afterEach(() => {\n    overlayContainer.ngOnDestroy();\n    liveAnnouncer.ngOnDestroy();\n  });\n\n  beforeEach(() => {\n    viewContainerFixture = TestBed.createComponent(ComponentWithChildViewContainer);\n    viewContainerFixture.detectChanges();\n  });\n\n  it('should default to bottom center', fakeAsync(() => {\n    snackBar.open(simpleMessage, simpleActionLabel);\n\n    viewContainerFixture.detectChanges();\n    flush();\n\n    const containerEl = overlayContainerEl.querySelector('snack-bar-container') as HTMLElement;\n    const overlayPaneEl = overlayContainerEl.querySelector('.cdk-overlay-pane') as HTMLElement;\n\n    expect(containerEl.classList.contains('mat-snack-bar-center')).toBeTruthy();\n    expect(containerEl.classList.contains('mat-snack-bar-top')).toBeFalsy();\n\n    expect(overlayPaneEl.style.marginBottom).toBe('0px', 'Expected margin-bottom to be \"0px\"');\n    expect(overlayPaneEl.style.marginTop).toBe('', 'Expected margin-top to be \"\"');\n    expect(overlayPaneEl.style.marginRight).toBe('', 'Expected margin-right to be \"\"');\n    expect(overlayPaneEl.style.marginLeft).toBe('', 'Expected margin-left  to be \"\"');\n  }));\n\n  it('should be in the bottom left corner', fakeAsync(() => {\n    snackBar.open(simpleMessage, simpleActionLabel, {\n      verticalPosition: 'bottom',\n      horizontalPosition: 'left'\n    });\n\n    viewContainerFixture.detectChanges();\n    flush();\n\n    const containerEl = overlayContainerEl.querySelector('snack-bar-container') as HTMLElement;\n    const overlayPaneEl = overlayContainerEl.querySelector('.cdk-overlay-pane') as HTMLElement;\n\n    expect(containerEl.classList.contains('mat-snack-bar-center')).toBeFalsy();\n    expect(containerEl.classList.contains('mat-snack-bar-top')).toBeFalsy();\n    expect(overlayPaneEl.style.marginBottom).toBe('0px', 'Expected margin-bottom to be \"0px\"');\n    expect(overlayPaneEl.style.marginTop).toBe('', 'Expected margin-top to be \"\"');\n    expect(overlayPaneEl.style.marginRight).toBe('', 'Expected margin-right to be \"\"');\n    expect(overlayPaneEl.style.marginLeft).toBe('0px', 'Expected margin-left  to be \"0px\"');\n   }));\n\n   it('should be in the bottom right corner', fakeAsync(() => {\n    snackBar.open(simpleMessage, simpleActionLabel, {\n      verticalPosition: 'bottom',\n      horizontalPosition: 'right'\n    });\n\n    viewContainerFixture.detectChanges();\n    flush();\n\n    const containerEl = overlayContainerEl.querySelector('snack-bar-container') as HTMLElement;\n    const overlayPaneEl = overlayContainerEl.querySelector('.cdk-overlay-pane') as HTMLElement;\n\n    expect(containerEl.classList.contains('mat-snack-bar-center')).toBeFalsy();\n    expect(containerEl.classList.contains('mat-snack-bar-top')).toBeFalsy();\n    expect(overlayPaneEl.style.marginBottom).toBe('0px', 'Expected margin-bottom to be \"0px\"');\n    expect(overlayPaneEl.style.marginTop).toBe('', 'Expected margin-top to be \"\"');\n    expect(overlayPaneEl.style.marginRight).toBe('0px', 'Expected margin-right to be \"0px\"');\n    expect(overlayPaneEl.style.marginLeft).toBe('', 'Expected margin-left  to be \"\"');\n   }));\n\n   it('should be in the bottom center', fakeAsync(() => {\n    snackBar.open(simpleMessage, simpleActionLabel, {\n      verticalPosition: 'bottom',\n      horizontalPosition: 'center'\n    });\n\n    viewContainerFixture.detectChanges();\n    flush();\n\n    const containerEl = overlayContainerEl.querySelector('snack-bar-container') as HTMLElement;\n    const overlayPaneEl = overlayContainerEl.querySelector('.cdk-overlay-pane') as HTMLElement;\n\n    expect(containerEl.classList.contains('mat-snack-bar-center')).toBeTruthy();\n    expect(containerEl.classList.contains('mat-snack-bar-top')).toBeFalsy();\n    expect(overlayPaneEl.style.marginBottom).toBe('0px', 'Expected margin-bottom to be \"0px\"');\n    expect(overlayPaneEl.style.marginTop).toBe('', 'Expected margin-top to be \"\"');\n    expect(overlayPaneEl.style.marginRight).toBe('', 'Expected margin-right to be \"\"');\n    expect(overlayPaneEl.style.marginLeft).toBe('', 'Expected margin-left  to be \"\"');\n   }));\n\n   it('should be in the top left corner', fakeAsync(() => {\n    snackBar.open(simpleMessage, simpleActionLabel, {\n      verticalPosition: 'top',\n      horizontalPosition: 'left'\n    });\n\n    viewContainerFixture.detectChanges();\n    flush();\n\n    const containerEl = overlayContainerEl.querySelector('snack-bar-container') as HTMLElement;\n    const overlayPaneEl = overlayContainerEl.querySelector('.cdk-overlay-pane') as HTMLElement;\n\n    expect(containerEl.classList.contains('mat-snack-bar-center')).toBeFalsy();\n    expect(containerEl.classList.contains('mat-snack-bar-top')).toBeTruthy();\n    expect(overlayPaneEl.style.marginBottom).toBe('', 'Expected margin-bottom to be \"\"');\n    expect(overlayPaneEl.style.marginTop).toBe('0px', 'Expected margin-top to be \"0px\"');\n    expect(overlayPaneEl.style.marginRight).toBe('', 'Expected margin-right to be \"\"');\n    expect(overlayPaneEl.style.marginLeft).toBe('0px', 'Expected margin-left  to be \"0px\"');\n   }));\n\n   it('should be in the top right corner', fakeAsync(() => {\n    snackBar.open(simpleMessage, simpleActionLabel, {\n      verticalPosition: 'top',\n      horizontalPosition: 'right'\n    });\n\n    viewContainerFixture.detectChanges();\n    flush();\n\n    const containerEl = overlayContainerEl.querySelector('snack-bar-container') as HTMLElement;\n    const overlayPaneEl = overlayContainerEl.querySelector('.cdk-overlay-pane') as HTMLElement;\n\n    expect(containerEl.classList.contains('mat-snack-bar-center')).toBeFalsy();\n    expect(containerEl.classList.contains('mat-snack-bar-top')).toBeTruthy();\n    expect(overlayPaneEl.style.marginBottom).toBe('', 'Expected margin-bottom to be \"\"');\n    expect(overlayPaneEl.style.marginTop).toBe('0px', 'Expected margin-top to be \"0px\"');\n    expect(overlayPaneEl.style.marginRight).toBe('0px', 'Expected margin-right to be \"0px\"');\n    expect(overlayPaneEl.style.marginLeft).toBe('', 'Expected margin-left  to be \"\"');\n   }));\n\n   it('should be in the top center', fakeAsync(() => {\n    snackBar.open(simpleMessage, simpleActionLabel, {\n      verticalPosition: 'top',\n      horizontalPosition: 'center'\n    });\n\n    viewContainerFixture.detectChanges();\n    flush();\n\n    const containerEl = overlayContainerEl.querySelector('snack-bar-container') as HTMLElement;\n    const overlayPaneEl = overlayContainerEl.querySelector('.cdk-overlay-pane') as HTMLElement;\n\n    expect(containerEl.classList.contains('mat-snack-bar-center')).toBeTruthy();\n    expect(containerEl.classList.contains('mat-snack-bar-top')).toBeTruthy();\n    expect(overlayPaneEl.style.marginBottom).toBe('', 'Expected margin-bottom to be \"\"');\n    expect(overlayPaneEl.style.marginTop).toBe('0px', 'Expected margin-top to be \"0px\"');\n    expect(overlayPaneEl.style.marginRight).toBe('', 'Expected margin-right to be \"\"');\n    expect(overlayPaneEl.style.marginLeft).toBe('', 'Expected margin-left  to be \"\"');\n   }));\n\n   it('should handle start based on direction (rtl)', fakeAsync(() => {\n    snackBar.open(simpleMessage, simpleActionLabel, {\n      verticalPosition: 'top',\n      horizontalPosition: 'start',\n      direction: 'rtl',\n    });\n\n    viewContainerFixture.detectChanges();\n    flush();\n\n    const containerEl = overlayContainerEl.querySelector('snack-bar-container') as HTMLElement;\n    const overlayPaneEl = overlayContainerEl.querySelector('.cdk-overlay-pane') as HTMLElement;\n\n    expect(containerEl.classList.contains('mat-snack-bar-center')).toBeFalsy();\n    expect(containerEl.classList.contains('mat-snack-bar-top')).toBeTruthy();\n    expect(overlayPaneEl.style.marginBottom).toBe('', 'Expected margin-bottom to be \"\"');\n    expect(overlayPaneEl.style.marginTop).toBe('0px', 'Expected margin-top to be \"0px\"');\n    expect(overlayPaneEl.style.marginRight).toBe('0px', 'Expected margin-right to be \"0px\"');\n    expect(overlayPaneEl.style.marginLeft).toBe('', 'Expected margin-left  to be \"\"');\n  }));\n\n  it('should handle start based on direction (ltr)', fakeAsync(() => {\n    snackBar.open(simpleMessage, simpleActionLabel, {\n      verticalPosition: 'top',\n      horizontalPosition: 'start',\n      direction: 'ltr',\n    });\n\n    viewContainerFixture.detectChanges();\n    flush();\n\n    const containerEl = overlayContainerEl.querySelector('snack-bar-container') as HTMLElement;\n    const overlayPaneEl = overlayContainerEl.querySelector('.cdk-overlay-pane') as HTMLElement;\n\n    expect(containerEl.classList.contains('mat-snack-bar-center')).toBeFalsy();\n    expect(containerEl.classList.contains('mat-snack-bar-top')).toBeTruthy();\n    expect(overlayPaneEl.style.marginBottom).toBe('', 'Expected margin-bottom to be \"\"');\n    expect(overlayPaneEl.style.marginTop).toBe('0px', 'Expected margin-top to be \"0px\"');\n    expect(overlayPaneEl.style.marginRight).toBe('', 'Expected margin-right to be \"\"');\n    expect(overlayPaneEl.style.marginLeft).toBe('0px', 'Expected margin-left  to be \"0px\"');\n  }));\n\n  it('should handle end based on direction (rtl)', fakeAsync(() => {\n    snackBar.open(simpleMessage, simpleActionLabel, {\n      verticalPosition: 'top',\n      horizontalPosition: 'end',\n      direction: 'rtl',\n    });\n\n    viewContainerFixture.detectChanges();\n    flush();\n\n    const containerEl = overlayContainerEl.querySelector('snack-bar-container') as HTMLElement;\n    const overlayPaneEl = overlayContainerEl.querySelector('.cdk-overlay-pane') as HTMLElement;\n\n    expect(containerEl.classList.contains('mat-snack-bar-center')).toBeFalsy();\n    expect(containerEl.classList.contains('mat-snack-bar-top')).toBeTruthy();\n    expect(overlayPaneEl.style.marginBottom).toBe('', 'Expected margin-bottom to be \"\"');\n    expect(overlayPaneEl.style.marginTop).toBe('0px', 'Expected margin-top to be \"0px\"');\n    expect(overlayPaneEl.style.marginRight).toBe('', 'Expected margin-right to be \"\"');\n    expect(overlayPaneEl.style.marginLeft).toBe('0px', 'Expected margin-left  to be \"0px\"');\n  }));\n\n  it('should handle end based on direction (ltr)', fakeAsync(() => {\n    snackBar.open(simpleMessage, simpleActionLabel, {\n      verticalPosition: 'top',\n      horizontalPosition: 'end',\n      direction: 'ltr',\n    });\n\n    viewContainerFixture.detectChanges();\n    flush();\n\n    const containerEl = overlayContainerEl.querySelector('snack-bar-container') as HTMLElement;\n    const overlayPaneEl = overlayContainerEl.querySelector('.cdk-overlay-pane') as HTMLElement;\n\n    expect(containerEl.classList.contains('mat-snack-bar-center')).toBeFalsy();\n    expect(containerEl.classList.contains('mat-snack-bar-top')).toBeTruthy();\n    expect(overlayPaneEl.style.marginBottom).toBe('', 'Expected margin-bottom to be \"\"');\n    expect(overlayPaneEl.style.marginTop).toBe('0px', 'Expected margin-top to be \"0px\"');\n    expect(overlayPaneEl.style.marginRight).toBe('0px', 'Expected margin-right to be \"0px\"');\n    expect(overlayPaneEl.style.marginLeft).toBe('', 'Expected margin-left  to be \"\"');\n  }));\n\n});\n\n\n@Directive({selector: 'dir-with-view-container'})\nclass DirectiveWithViewContainer {\n  constructor(public viewContainerRef: ViewContainerRef) { }\n}\n\n@Component({\n  selector: 'arbitrary-component',\n  template: `<dir-with-view-container *ngIf=\"childComponentExists\"></dir-with-view-container>`,\n})\nclass ComponentWithChildViewContainer {\n  @ViewChild(DirectiveWithViewContainer) childWithViewContainer: DirectiveWithViewContainer;\n\n  childComponentExists: boolean = true;\n\n  get childViewContainer() {\n    return this.childWithViewContainer.viewContainerRef;\n  }\n}\n\n@Component({\n  selector: 'arbitrary-component-with-template-ref',\n  template: `\n    <ng-template let-data>\n      Fries {{localValue}} {{data?.value}}\n    </ng-template>\n  `,\n})\nclass ComponentWithTemplateRef {\n  @ViewChild(TemplateRef) templateRef: TemplateRef<any>;\n  localValue: string;\n}\n\n\n/** Simple component for testing ComponentPortal. */\n@Component({template: '<p>Burritos are on the way.</p>'})\nclass BurritosNotification {\n  constructor(\n    public snackBarRef: MatSnackBarRef<BurritosNotification>,\n    @Inject(MAT_SNACK_BAR_DATA) public data: any) { }\n}\n\n\n@Component({\n  template: '',\n  providers: [MatSnackBar]\n})\nclass ComponentThatProvidesMatSnackBar {\n  constructor(public snackBar: MatSnackBar) {}\n}\n\n\n/**\n * Simple component to open snack bars from.\n * Create a real (non-test) NgModule as a workaround forRoot\n * https://github.com/angular/angular/issues/10760\n */\nconst TEST_DIRECTIVES = [ComponentWithChildViewContainer,\n                         BurritosNotification,\n                         DirectiveWithViewContainer,\n                         ComponentWithTemplateRef];\n@NgModule({\n  imports: [CommonModule, MatSnackBarModule],\n  exports: TEST_DIRECTIVES,\n  declarations: TEST_DIRECTIVES,\n  entryComponents: [ComponentWithChildViewContainer, BurritosNotification],\n})\nclass SnackBarTestModule { }\n"]}