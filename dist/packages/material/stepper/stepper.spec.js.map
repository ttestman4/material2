{"version":3,"file":"stepper.spec.js","sourceRoot":"","sources":["../../../../src/lib/stepper/stepper.spec.ts"],"names":[],"mappings":"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","sourcesContent":["import {Direction, Directionality} from '@angular/cdk/bidi';\nimport {\n  DOWN_ARROW,\n  END,\n  ENTER,\n  HOME,\n  LEFT_ARROW,\n  RIGHT_ARROW,\n  SPACE,\n  UP_ARROW,\n} from '@angular/cdk/keycodes';\nimport {\n  StepperOrientation,\n  STEPPER_GLOBAL_OPTIONS,\n  STEP_STATE,\n  CdkStep\n} from '@angular/cdk/stepper';\nimport {dispatchKeyboardEvent, createKeyboardEvent, dispatchEvent} from '@angular/cdk/testing';\nimport {Component, DebugElement, EventEmitter, OnInit, Type, Provider} from '@angular/core';\nimport {ComponentFixture, fakeAsync, flush, inject, TestBed} from '@angular/core/testing';\nimport {\n  AbstractControl,\n  AsyncValidatorFn,\n  FormControl,\n  FormGroup,\n  ReactiveFormsModule,\n  ValidationErrors,\n  Validators,\n  FormBuilder\n} from '@angular/forms';\nimport {MatRipple} from '@angular/material/core';\nimport {By} from '@angular/platform-browser';\nimport {NoopAnimationsModule} from '@angular/platform-browser/animations';\nimport {Observable, Subject} from 'rxjs';\nimport {map, take} from 'rxjs/operators';\nimport {MatStepHeader, MatStepperModule} from './index';\nimport {MatHorizontalStepper, MatStep, MatStepper, MatVerticalStepper} from './stepper';\nimport {MatStepperNext, MatStepperPrevious} from './stepper-button';\nimport {MatStepperIntl} from './stepper-intl';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatInputModule} from '../input/input-module';\n\n\nconst VALID_REGEX = /valid/;\nlet dir: {value: Direction, change: EventEmitter<Direction>};\n\ndescribe('MatStepper', () => {\n  beforeEach(() => {\n    dir = {\n      value: 'ltr',\n      change: new EventEmitter()\n    };\n  });\n\n  describe('basic stepper', () => {\n    let fixture: ComponentFixture<SimpleMatVerticalStepperApp>;\n\n    beforeEach(() => {\n      fixture = createComponent(SimpleMatVerticalStepperApp);\n      fixture.detectChanges();\n    });\n\n    it('should default to the first step', () => {\n      let stepperComponent = fixture.debugElement\n          .query(By.css('mat-vertical-stepper')).componentInstance;\n      expect(stepperComponent.selectedIndex).toBe(0);\n    });\n\n    it('should throw when a negative `selectedIndex` is assigned', () => {\n      const stepperComponent: MatVerticalStepper = fixture.debugElement\n          .query(By.css('mat-vertical-stepper')).componentInstance;\n\n      expect(() => {\n        stepperComponent.selectedIndex = -10;\n        fixture.detectChanges();\n      }).toThrowError(/Cannot assign out-of-bounds/);\n    });\n\n    it('should throw when an out-of-bounds `selectedIndex` is assigned', () => {\n      const stepperComponent: MatVerticalStepper = fixture.debugElement\n          .query(By.css('mat-vertical-stepper')).componentInstance;\n\n      expect(() => {\n        stepperComponent.selectedIndex = 1337;\n        fixture.detectChanges();\n      }).toThrowError(/Cannot assign out-of-bounds/);\n    });\n\n    it('should change selected index on header click', () => {\n      let stepHeaders = fixture.debugElement.queryAll(By.css('.mat-vertical-stepper-header'));\n      let stepperComponent = fixture.debugElement.query(By.directive(MatStepper)).componentInstance;\n\n      expect(stepperComponent.selectedIndex).toBe(0);\n      expect(stepperComponent.selected instanceof MatStep).toBe(true);\n\n      // select the second step\n      let stepHeaderEl = stepHeaders[1].nativeElement;\n      stepHeaderEl.click();\n      fixture.detectChanges();\n\n      expect(stepperComponent.selectedIndex).toBe(1);\n      expect(stepperComponent.selected instanceof MatStep).toBe(true);\n\n      // select the third step\n      stepHeaderEl = stepHeaders[2].nativeElement;\n      stepHeaderEl.click();\n      fixture.detectChanges();\n\n      expect(stepperComponent.selectedIndex).toBe(2);\n      expect(stepperComponent.selected instanceof MatStep).toBe(true);\n    });\n\n    it('should set the \"tablist\" role on stepper', () => {\n      let stepperEl = fixture.debugElement.query(By.css('mat-vertical-stepper')).nativeElement;\n      expect(stepperEl.getAttribute('role')).toBe('tablist');\n    });\n\n    it('should set aria-expanded of content correctly', () => {\n      let stepContents = fixture.debugElement.queryAll(By.css(`.mat-vertical-stepper-content`));\n      let stepperComponent = fixture.debugElement.query(By.directive(MatStepper)).componentInstance;\n      let firstStepContentEl = stepContents[0].nativeElement;\n      expect(firstStepContentEl.getAttribute('aria-expanded')).toBe('true');\n\n      stepperComponent.selectedIndex = 1;\n      fixture.detectChanges();\n\n      expect(firstStepContentEl.getAttribute('aria-expanded')).toBe('false');\n      let secondStepContentEl = stepContents[1].nativeElement;\n      expect(secondStepContentEl.getAttribute('aria-expanded')).toBe('true');\n    });\n\n    it('should display the correct label', () => {\n      let stepperComponent = fixture.debugElement.query(By.directive(MatStepper)).componentInstance;\n      let selectedLabel = fixture.nativeElement.querySelector('[aria-selected=\"true\"]');\n      expect(selectedLabel.textContent).toMatch('Step 1');\n\n      stepperComponent.selectedIndex = 2;\n      fixture.detectChanges();\n\n      selectedLabel = fixture.nativeElement.querySelector('[aria-selected=\"true\"]');\n      expect(selectedLabel.textContent).toMatch('Step 3');\n\n      fixture.componentInstance.inputLabel = 'New Label';\n      fixture.detectChanges();\n\n      selectedLabel = fixture.nativeElement.querySelector('[aria-selected=\"true\"]');\n      expect(selectedLabel.textContent).toMatch('New Label');\n    });\n\n    it('should go to next available step when the next button is clicked', () => {\n      let stepperComponent = fixture.debugElement.query(By.directive(MatStepper)).componentInstance;\n\n      expect(stepperComponent.selectedIndex).toBe(0);\n\n      let nextButtonNativeEl = fixture.debugElement\n          .queryAll(By.directive(MatStepperNext))[0].nativeElement;\n      nextButtonNativeEl.click();\n      fixture.detectChanges();\n\n      expect(stepperComponent.selectedIndex).toBe(1);\n\n      nextButtonNativeEl = fixture.debugElement\n          .queryAll(By.directive(MatStepperNext))[1].nativeElement;\n      nextButtonNativeEl.click();\n      fixture.detectChanges();\n\n      expect(stepperComponent.selectedIndex).toBe(2);\n\n      nextButtonNativeEl = fixture.debugElement\n          .queryAll(By.directive(MatStepperNext))[2].nativeElement;\n      nextButtonNativeEl.click();\n      fixture.detectChanges();\n\n      expect(stepperComponent.selectedIndex).toBe(2);\n    });\n\n    it('should set the next stepper button type to \"submit\"', () => {\n      const button = fixture.debugElement.query(By.directive(MatStepperNext)).nativeElement;\n      expect(button.type).toBe('submit', `Expected the button to have \"submit\" set as type.`);\n    });\n\n    it('should go to previous available step when the previous button is clicked', () => {\n      let stepperComponent = fixture.debugElement.query(By.directive(MatStepper)).componentInstance;\n\n      expect(stepperComponent.selectedIndex).toBe(0);\n\n      stepperComponent.selectedIndex = 2;\n      let previousButtonNativeEl = fixture.debugElement\n          .queryAll(By.directive(MatStepperPrevious))[2].nativeElement;\n      previousButtonNativeEl.click();\n      fixture.detectChanges();\n\n      expect(stepperComponent.selectedIndex).toBe(1);\n\n      previousButtonNativeEl = fixture.debugElement\n          .queryAll(By.directive(MatStepperPrevious))[1].nativeElement;\n      previousButtonNativeEl.click();\n      fixture.detectChanges();\n\n      expect(stepperComponent.selectedIndex).toBe(0);\n\n      previousButtonNativeEl = fixture.debugElement\n          .queryAll(By.directive(MatStepperPrevious))[0].nativeElement;\n      previousButtonNativeEl.click();\n      fixture.detectChanges();\n\n      expect(stepperComponent.selectedIndex).toBe(0);\n    });\n\n    it('should set the previous stepper button type to \"button\"', () => {\n      const button = fixture.debugElement.query(By.directive(MatStepperPrevious)).nativeElement;\n      expect(button.type).toBe('button', `Expected the button to have \"button\" set as type.`);\n    });\n\n    it('should set the correct step position for animation', () => {\n      let stepperComponent = fixture.debugElement.query(By.directive(MatStepper)).componentInstance;\n\n      expect(stepperComponent._getAnimationDirection(0)).toBe('current');\n      expect(stepperComponent._getAnimationDirection(1)).toBe('next');\n      expect(stepperComponent._getAnimationDirection(2)).toBe('next');\n\n      stepperComponent.selectedIndex = 1;\n      fixture.detectChanges();\n\n      expect(stepperComponent._getAnimationDirection(0)).toBe('previous');\n      expect(stepperComponent._getAnimationDirection(2)).toBe('next');\n      expect(stepperComponent._getAnimationDirection(1)).toBe('current');\n\n      stepperComponent.selectedIndex = 2;\n      fixture.detectChanges();\n\n      expect(stepperComponent._getAnimationDirection(0)).toBe('previous');\n      expect(stepperComponent._getAnimationDirection(1)).toBe('previous');\n      expect(stepperComponent._getAnimationDirection(2)).toBe('current');\n    });\n\n    it('should not set focus on header of selected step if header is not clicked', () => {\n      let stepperComponent = fixture.debugElement.query(By.directive(MatStepper)).componentInstance;\n      let stepHeaderEl = fixture.debugElement.queryAll(By.css('mat-step-header'))[1].nativeElement;\n      let nextButtonNativeEl = fixture.debugElement\n          .queryAll(By.directive(MatStepperNext))[0].nativeElement;\n      spyOn(stepHeaderEl, 'focus');\n      nextButtonNativeEl.click();\n      fixture.detectChanges();\n\n      expect(stepperComponent.selectedIndex).toBe(1);\n      expect(stepHeaderEl.focus).not.toHaveBeenCalled();\n    });\n\n    it('should focus next step header if focus is inside the stepper', () => {\n      let stepperComponent = fixture.debugElement.query(By.directive(MatStepper)).componentInstance;\n      let stepHeaderEl = fixture.debugElement.queryAll(By.css('mat-step-header'))[1].nativeElement;\n      let nextButtonNativeEl = fixture.debugElement\n          .queryAll(By.directive(MatStepperNext))[0].nativeElement;\n      spyOn(stepHeaderEl, 'focus');\n      nextButtonNativeEl.focus();\n      nextButtonNativeEl.click();\n      fixture.detectChanges();\n\n      expect(stepperComponent.selectedIndex).toBe(1);\n      expect(stepHeaderEl.focus).toHaveBeenCalled();\n    });\n\n    it('should only be able to return to a previous step if it is editable', () => {\n      let stepperComponent = fixture.debugElement.query(By.directive(MatStepper)).componentInstance;\n\n      stepperComponent.selectedIndex = 1;\n      stepperComponent.steps.toArray()[0].editable = false;\n      let previousButtonNativeEl = fixture.debugElement\n          .queryAll(By.directive(MatStepperPrevious))[1].nativeElement;\n      previousButtonNativeEl.click();\n      fixture.detectChanges();\n\n      expect(stepperComponent.selectedIndex).toBe(1);\n\n      stepperComponent.steps.toArray()[0].editable = true;\n      previousButtonNativeEl.click();\n      fixture.detectChanges();\n\n      expect(stepperComponent.selectedIndex).toBe(0);\n    });\n\n    it('should set create icon if step is editable and completed', () => {\n      let stepperComponent = fixture.debugElement.query(By.directive(MatStepper)).componentInstance;\n      let nextButtonNativeEl = fixture.debugElement\n          .queryAll(By.directive(MatStepperNext))[0].nativeElement;\n      expect(stepperComponent._getIndicatorType(0)).toBe('number');\n      stepperComponent.steps.toArray()[0].editable = true;\n      nextButtonNativeEl.click();\n      fixture.detectChanges();\n\n      expect(stepperComponent._getIndicatorType(0)).toBe('edit');\n    });\n\n    it('should set done icon if step is not editable and is completed', () => {\n      let stepperComponent = fixture.debugElement.query(By.directive(MatStepper)).componentInstance;\n      let nextButtonNativeEl = fixture.debugElement\n          .queryAll(By.directive(MatStepperNext))[0].nativeElement;\n      expect(stepperComponent._getIndicatorType(0)).toBe('number');\n      stepperComponent.steps.toArray()[0].editable = false;\n      nextButtonNativeEl.click();\n      fixture.detectChanges();\n\n      expect(stepperComponent._getIndicatorType(0)).toBe('done');\n    });\n\n    it('should emit an event when the enter animation is done', fakeAsync(() => {\n      let stepper = fixture.debugElement.query(By.directive(MatStepper)).componentInstance;\n      let selectionChangeSpy = jasmine.createSpy('selectionChange spy');\n      let animationDoneSpy = jasmine.createSpy('animationDone spy');\n      let selectionChangeSubscription = stepper.selectionChange.subscribe(selectionChangeSpy);\n      let animationDoneSubscription = stepper.animationDone.subscribe(animationDoneSpy);\n\n      stepper.selectedIndex = 1;\n      fixture.detectChanges();\n\n      expect(selectionChangeSpy).toHaveBeenCalledTimes(1);\n      expect(animationDoneSpy).not.toHaveBeenCalled();\n\n      flush();\n\n      expect(selectionChangeSpy).toHaveBeenCalledTimes(1);\n      expect(animationDoneSpy).toHaveBeenCalledTimes(1);\n\n      selectionChangeSubscription.unsubscribe();\n      animationDoneSubscription.unsubscribe();\n    }));\n\n    it('should set the correct aria-posinset and aria-setsize', () => {\n      const headers =\n          Array.from<HTMLElement>(fixture.nativeElement.querySelectorAll('.mat-step-header'));\n\n      expect(headers.map(header => header.getAttribute('aria-posinset'))).toEqual(['1', '2', '3']);\n      expect(headers.every(header => header.getAttribute('aria-setsize') === '3')).toBe(true);\n    });\n\n    it('should adjust the index when removing a step before the current one', () => {\n      const stepperComponent: MatVerticalStepper = fixture.debugElement\n          .query(By.css('mat-vertical-stepper')).componentInstance;\n\n      stepperComponent.selectedIndex = 2;\n      fixture.detectChanges();\n\n      // Re-assert since the setter has some extra logic.\n      expect(stepperComponent.selectedIndex).toBe(2);\n\n      expect(() => {\n        fixture.componentInstance.showStepTwo = false;\n        fixture.detectChanges();\n      }).not.toThrow();\n\n      expect(stepperComponent.selectedIndex).toBe(1);\n    });\n\n    it('should not do anything when pressing the ENTER key with a modifier', () => {\n      const stepHeaders = fixture.debugElement.queryAll(By.css('.mat-vertical-stepper-header'));\n      assertSelectKeyWithModifierInteraction(fixture, stepHeaders, 'vertical', ENTER);\n    });\n\n    it('should not do anything when pressing the SPACE key with a modifier', () => {\n      const stepHeaders = fixture.debugElement.queryAll(By.css('.mat-vertical-stepper-header'));\n      assertSelectKeyWithModifierInteraction(fixture, stepHeaders, 'vertical', SPACE);\n    });\n  });\n\n  describe('basic stepper when attempting to set the selected step too early', () => {\n    it('should not throw', () => {\n      const fixture = createComponent(SimpleMatVerticalStepperApp);\n      const stepperComponent: MatVerticalStepper = fixture.debugElement\n          .query(By.css('mat-vertical-stepper')).componentInstance;\n\n      expect(() => stepperComponent.selected).not.toThrow();\n    });\n  });\n\n  describe('basic stepper when attempting to set the selected step too early', () => {\n    it('should not throw', () => {\n      const fixture = createComponent(SimpleMatVerticalStepperApp);\n      const stepperComponent: MatVerticalStepper = fixture.debugElement\n          .query(By.css('mat-vertical-stepper')).componentInstance;\n\n      expect(() => stepperComponent.selected = null!).not.toThrow();\n      expect(stepperComponent.selectedIndex).toBe(-1);\n    });\n  });\n\n  describe('basic stepper with i18n label change', () => {\n    let i18nFixture: ComponentFixture<SimpleMatHorizontalStepperApp>;\n\n    beforeEach(() => {\n      i18nFixture = createComponent(SimpleMatHorizontalStepperApp);\n      i18nFixture.detectChanges();\n    });\n\n    it('should re-render when the i18n labels change', inject([MatStepperIntl],\n      (intl: MatStepperIntl) => {\n        const header =\n            i18nFixture.debugElement.queryAll(By.css('mat-step-header'))[2].nativeElement;\n        const optionalLabel = header.querySelector('.mat-step-optional');\n\n        expect(optionalLabel).toBeTruthy();\n        expect(optionalLabel.textContent).toBe('Optional');\n\n        intl.optionalLabel = 'Valgfri';\n        intl.changes.next();\n        i18nFixture.detectChanges();\n\n        expect(optionalLabel.textContent).toBe('Valgfri');\n    }));\n  });\n\n  describe('icon overrides', () => {\n    let fixture: ComponentFixture<IconOverridesStepper>;\n\n    beforeEach(() => {\n      fixture = createComponent(IconOverridesStepper);\n      fixture.detectChanges();\n    });\n\n    it('should allow for the `edit` icon to be overridden', () => {\n      const stepperDebugElement = fixture.debugElement.query(By.directive(MatStepper));\n      const stepperComponent: MatStepper = stepperDebugElement.componentInstance;\n\n      stepperComponent.steps.toArray()[0].editable = true;\n      stepperComponent.next();\n      fixture.detectChanges();\n\n      const header = stepperDebugElement.nativeElement.querySelector('mat-step-header');\n\n      expect(header.textContent).toContain('Custom edit');\n    });\n\n    it('should allow for the `done` icon to be overridden', () => {\n      const stepperDebugElement = fixture.debugElement.query(By.directive(MatStepper));\n      const stepperComponent: MatStepper = stepperDebugElement.componentInstance;\n\n      stepperComponent.steps.toArray()[0].editable = false;\n      stepperComponent.next();\n      fixture.detectChanges();\n\n      const header = stepperDebugElement.nativeElement.querySelector('mat-step-header');\n\n      expect(header.textContent).toContain('Custom done');\n    });\n\n    it('should allow for the `number` icon to be overridden with context', () => {\n      const stepperDebugElement = fixture.debugElement.query(By.directive(MatStepper));\n      const headers = stepperDebugElement.nativeElement.querySelectorAll('mat-step-header');\n\n      expect(headers[2].textContent).toContain('III');\n    });\n  });\n\n  describe('RTL', () => {\n    let fixture: ComponentFixture<SimpleMatVerticalStepperApp>;\n\n    beforeEach(() => {\n      dir.value = 'rtl';\n      fixture = createComponent(SimpleMatVerticalStepperApp);\n      fixture.detectChanges();\n    });\n\n    it('should reverse animation in RTL mode', () => {\n      let stepperComponent = fixture.debugElement.query(By.directive(MatStepper)).componentInstance;\n\n      expect(stepperComponent._getAnimationDirection(0)).toBe('current');\n      expect(stepperComponent._getAnimationDirection(1)).toBe('previous');\n      expect(stepperComponent._getAnimationDirection(2)).toBe('previous');\n\n      stepperComponent.selectedIndex = 1;\n      fixture.detectChanges();\n\n      expect(stepperComponent._getAnimationDirection(0)).toBe('next');\n      expect(stepperComponent._getAnimationDirection(2)).toBe('previous');\n      expect(stepperComponent._getAnimationDirection(1)).toBe('current');\n\n      stepperComponent.selectedIndex = 2;\n      fixture.detectChanges();\n\n      expect(stepperComponent._getAnimationDirection(0)).toBe('next');\n      expect(stepperComponent._getAnimationDirection(1)).toBe('next');\n      expect(stepperComponent._getAnimationDirection(2)).toBe('current');\n    });\n  });\n\n  describe('linear stepper', () => {\n    let fixture: ComponentFixture<LinearMatVerticalStepperApp>;\n    let testComponent: LinearMatVerticalStepperApp;\n    let stepperComponent: MatVerticalStepper;\n\n    beforeEach(() => {\n      fixture = createComponent(LinearMatVerticalStepperApp);\n      fixture.detectChanges();\n\n      testComponent = fixture.componentInstance;\n      stepperComponent = fixture.debugElement\n          .query(By.css('mat-vertical-stepper')).componentInstance;\n    });\n\n    it('should have true linear attribute', () => {\n      expect(stepperComponent.linear).toBe(true);\n    });\n\n    it('should not move to next step if current step is invalid', () => {\n      expect(testComponent.oneGroup.get('oneCtrl')!.value).toBe('');\n      expect(testComponent.oneGroup.get('oneCtrl')!.valid).toBe(false);\n      expect(testComponent.oneGroup.valid).toBe(false);\n      expect(testComponent.oneGroup.invalid).toBe(true);\n      expect(stepperComponent.selectedIndex).toBe(0);\n\n      let stepHeaderEl = fixture.debugElement\n          .queryAll(By.css('.mat-vertical-stepper-header'))[1].nativeElement;\n\n      stepHeaderEl.click();\n      fixture.detectChanges();\n\n      expect(stepperComponent.selectedIndex).toBe(0);\n\n      let nextButtonNativeEl = fixture.debugElement\n          .queryAll(By.directive(MatStepperNext))[0].nativeElement;\n      nextButtonNativeEl.click();\n      fixture.detectChanges();\n\n      expect(stepperComponent.selectedIndex).toBe(0);\n\n      testComponent.oneGroup.get('oneCtrl')!.setValue('answer');\n      stepHeaderEl.click();\n      fixture.detectChanges();\n\n      expect(testComponent.oneGroup.valid).toBe(true);\n      expect(stepperComponent.selectedIndex).toBe(1);\n    });\n\n    it('should not move to next step if current step is pending', () => {\n      let stepHeaderEl = fixture.debugElement\n          .queryAll(By.css('.mat-vertical-stepper-header'))[2].nativeElement;\n\n      let nextButtonNativeEl = fixture.debugElement\n          .queryAll(By.directive(MatStepperNext))[1].nativeElement;\n\n      testComponent.oneGroup.get('oneCtrl')!.setValue('input');\n      testComponent.twoGroup.get('twoCtrl')!.setValue('input');\n      stepperComponent.selectedIndex = 1;\n      fixture.detectChanges();\n      expect(stepperComponent.selectedIndex).toBe(1);\n\n      // Step status = PENDING\n      // Assert that linear stepper does not allow step selection change\n      expect(testComponent.twoGroup.pending).toBe(true);\n\n      stepHeaderEl.click();\n      fixture.detectChanges();\n\n      expect(stepperComponent.selectedIndex).toBe(1);\n\n      nextButtonNativeEl.click();\n      fixture.detectChanges();\n\n      expect(stepperComponent.selectedIndex).toBe(1);\n\n      // Trigger asynchronous validation\n      testComponent.validationTrigger.next();\n      // Asynchronous validation completed:\n      // Step status = VALID\n      expect(testComponent.twoGroup.pending).toBe(false);\n      expect(testComponent.twoGroup.valid).toBe(true);\n\n      stepHeaderEl.click();\n      fixture.detectChanges();\n\n      expect(stepperComponent.selectedIndex).toBe(2);\n\n      stepperComponent.selectedIndex = 1;\n      fixture.detectChanges();\n      expect(stepperComponent.selectedIndex).toBe(1);\n\n      nextButtonNativeEl.click();\n      fixture.detectChanges();\n\n      expect(stepperComponent.selectedIndex).toBe(2);\n    });\n\n    it('should be able to focus step header upon click if it is unable to be selected', () => {\n      let stepHeaderEl = fixture.debugElement.queryAll(By.css('mat-step-header'))[1].nativeElement;\n\n      fixture.detectChanges();\n\n      expect(stepHeaderEl.getAttribute('tabindex')).toBe('-1');\n    });\n\n    it('should be able to move to next step even when invalid if current step is optional', () => {\n      testComponent.oneGroup.get('oneCtrl')!.setValue('input');\n      testComponent.twoGroup.get('twoCtrl')!.setValue('input');\n      testComponent.validationTrigger.next();\n      stepperComponent.selectedIndex = 1;\n      fixture.detectChanges();\n      stepperComponent.selectedIndex = 2;\n      fixture.detectChanges();\n\n      expect(stepperComponent.steps.toArray()[2].optional).toBe(true);\n      expect(stepperComponent.selectedIndex).toBe(2);\n      expect(testComponent.threeGroup.get('threeCtrl')!.valid).toBe(true);\n\n      const nextButtonNativeEl = fixture.debugElement\n          .queryAll(By.directive(MatStepperNext))[2].nativeElement;\n      nextButtonNativeEl.click();\n      fixture.detectChanges();\n\n      expect(stepperComponent.selectedIndex)\n          .toBe(3, 'Expected selectedIndex to change when optional step input is empty.');\n\n      stepperComponent.selectedIndex = 2;\n      testComponent.threeGroup.get('threeCtrl')!.setValue('input');\n      nextButtonNativeEl.click();\n      fixture.detectChanges();\n\n      expect(testComponent.threeGroup.get('threeCtrl')!.valid).toBe(false);\n      expect(stepperComponent.selectedIndex)\n          .toBe(3, 'Expected selectedIndex to change when optional step input is invalid.');\n    });\n\n    it('should be able to reset the stepper to its initial state', () => {\n      const steps = stepperComponent.steps.toArray();\n\n      testComponent.oneGroup.get('oneCtrl')!.setValue('value');\n      fixture.detectChanges();\n\n      stepperComponent.next();\n      fixture.detectChanges();\n\n      stepperComponent.next();\n      fixture.detectChanges();\n\n      expect(stepperComponent.selectedIndex).toBe(1);\n      expect(steps[0].interacted).toBe(true);\n      expect(steps[0].completed).toBe(true);\n      expect(testComponent.oneGroup.get('oneCtrl')!.valid).toBe(true);\n      expect(testComponent.oneGroup.get('oneCtrl')!.value).toBe('value');\n\n      expect(steps[1].interacted).toBe(true);\n      expect(steps[1].completed).toBe(false);\n      expect(testComponent.twoGroup.get('twoCtrl')!.valid).toBe(false);\n\n      stepperComponent.reset();\n      fixture.detectChanges();\n\n      expect(stepperComponent.selectedIndex).toBe(0);\n      expect(steps[0].interacted).toBe(false);\n      expect(steps[0].completed).toBe(false);\n      expect(testComponent.oneGroup.get('oneCtrl')!.valid).toBe(false);\n      expect(testComponent.oneGroup.get('oneCtrl')!.value).toBeFalsy();\n\n      expect(steps[1].interacted).toBe(false);\n      expect(steps[1].completed).toBe(false);\n      expect(testComponent.twoGroup.get('twoCtrl')!.valid).toBe(false);\n    });\n\n    it('should reset back to the first step when some of the steps are not editable', () => {\n      const steps = stepperComponent.steps.toArray();\n\n      steps[0].editable = false;\n\n      testComponent.oneGroup.get('oneCtrl')!.setValue('value');\n      fixture.detectChanges();\n\n      stepperComponent.next();\n      fixture.detectChanges();\n\n      expect(stepperComponent.selectedIndex).toBe(1);\n\n      stepperComponent.reset();\n      fixture.detectChanges();\n\n      expect(stepperComponent.selectedIndex).toBe(0);\n    });\n\n    it('should not clobber the `complete` binding when resetting', () => {\n      const steps: CdkStep[] = stepperComponent.steps.toArray();\n      const fillOutStepper = () => {\n        testComponent.oneGroup.get('oneCtrl')!.setValue('input');\n        testComponent.twoGroup.get('twoCtrl')!.setValue('input');\n        testComponent.threeGroup.get('threeCtrl')!.setValue('valid');\n        testComponent.validationTrigger.next();\n        stepperComponent.selectedIndex = 1;\n        fixture.detectChanges();\n        stepperComponent.selectedIndex = 2;\n        fixture.detectChanges();\n        stepperComponent.selectedIndex = 3;\n        fixture.detectChanges();\n      };\n\n      fillOutStepper();\n\n      expect(steps[2].completed)\n          .toBe(true, 'Expected third step to be considered complete after the first run through.');\n\n      stepperComponent.reset();\n      fixture.detectChanges();\n      fillOutStepper();\n\n      expect(steps[2].completed).toBe(true,\n          'Expected third step to be considered complete when doing a run after a reset.');\n    });\n  });\n\n  describe('linear stepper with a pre-defined selectedIndex', () => {\n    let preselectedFixture: ComponentFixture<SimplePreselectedMatHorizontalStepperApp>;\n    let stepper: MatHorizontalStepper;\n\n    beforeEach(() => {\n      preselectedFixture = createComponent(SimplePreselectedMatHorizontalStepperApp);\n      preselectedFixture.detectChanges();\n      stepper = preselectedFixture.debugElement\n          .query(By.directive(MatHorizontalStepper)).componentInstance;\n    });\n\n    it('should not throw', () => {\n      expect(() => preselectedFixture.detectChanges()).not.toThrow();\n    });\n\n    it('selectedIndex should be typeof number', () => {\n      expect(typeof stepper.selectedIndex).toBe('number');\n    });\n\n    it('value of selectedIndex should be the pre-defined value', () => {\n      expect(stepper.selectedIndex).toBe(0);\n    });\n  });\n\n  describe('linear stepper with no `stepControl`', () => {\n    let noStepControlFixture: ComponentFixture<SimpleStepperWithoutStepControl>;\n    beforeEach(() => {\n      noStepControlFixture = createComponent(SimpleStepperWithoutStepControl);\n      noStepControlFixture.detectChanges();\n    });\n    it('should not move to the next step if the current one is not completed ', () => {\n      const stepper: MatHorizontalStepper = noStepControlFixture.debugElement\n          .query(By.directive(MatHorizontalStepper)).componentInstance;\n\n      const headers = noStepControlFixture.debugElement\n          .queryAll(By.css('.mat-horizontal-stepper-header'));\n\n      expect(stepper.selectedIndex).toBe(0);\n\n      headers[1].nativeElement.click();\n      noStepControlFixture.detectChanges();\n\n      expect(stepper.selectedIndex).toBe(0);\n    });\n  });\n\n  describe('linear stepper with `stepControl`', () => {\n    let controlAndBindingFixture: ComponentFixture<SimpleStepperWithStepControlAndCompletedBinding>;\n    beforeEach(() => {\n      controlAndBindingFixture =\n      createComponent(SimpleStepperWithStepControlAndCompletedBinding);\n      controlAndBindingFixture.detectChanges();\n    });\n\n    it('should have the `stepControl` take precedence when `completed` is set', () => {\n        expect(controlAndBindingFixture.componentInstance.steps[0].control.valid).toBe(true);\n        expect(controlAndBindingFixture.componentInstance.steps[0].completed).toBe(false);\n\n        const stepper: MatHorizontalStepper = controlAndBindingFixture.debugElement\n            .query(By.directive(MatHorizontalStepper)).componentInstance;\n\n        const headers = controlAndBindingFixture.debugElement\n            .queryAll(By.css('.mat-horizontal-stepper-header'));\n\n        expect(stepper.selectedIndex).toBe(0);\n\n        headers[1].nativeElement.click();\n        controlAndBindingFixture.detectChanges();\n\n        expect(stepper.selectedIndex).toBe(1);\n      });\n  });\n\n  describe('vertical stepper', () => {\n    it('should set the aria-orientation to \"vertical\"', () => {\n      let fixture = createComponent(SimpleMatVerticalStepperApp);\n      fixture.detectChanges();\n\n      let stepperEl = fixture.debugElement.query(By.css('mat-vertical-stepper')).nativeElement;\n      expect(stepperEl.getAttribute('aria-orientation')).toBe('vertical');\n    });\n\n    it('should support using the left/right arrows to move focus', () => {\n      let fixture = createComponent(SimpleMatVerticalStepperApp);\n      fixture.detectChanges();\n\n      let stepHeaders = fixture.debugElement.queryAll(By.css('.mat-vertical-stepper-header'));\n      assertCorrectKeyboardInteraction(fixture, stepHeaders, 'horizontal');\n    });\n\n    it('should support using the up/down arrows to move focus', () => {\n      let fixture = createComponent(SimpleMatVerticalStepperApp);\n      fixture.detectChanges();\n\n      let stepHeaders = fixture.debugElement.queryAll(By.css('.mat-vertical-stepper-header'));\n      assertCorrectKeyboardInteraction(fixture, stepHeaders, 'vertical');\n    });\n\n    it('should reverse arrow key focus in RTL mode', () => {\n      dir.value = 'rtl';\n      let fixture = createComponent(SimpleMatVerticalStepperApp);\n      fixture.detectChanges();\n\n      let stepHeaders = fixture.debugElement.queryAll(By.css('.mat-vertical-stepper-header'));\n      assertArrowKeyInteractionInRtl(fixture, stepHeaders);\n    });\n\n    it('should be able to disable ripples', () => {\n      const fixture = createComponent(SimpleMatVerticalStepperApp);\n      fixture.detectChanges();\n\n      const stepHeaders = fixture.debugElement.queryAll(By.directive(MatStepHeader));\n      const headerRipples = stepHeaders.map(headerDebugEl =>\n        headerDebugEl.query(By.directive(MatRipple)).injector.get(MatRipple));\n\n      expect(headerRipples.every(ripple => ripple.disabled)).toBe(false);\n\n      fixture.componentInstance.disableRipple = true;\n      fixture.detectChanges();\n\n      expect(headerRipples.every(ripple => ripple.disabled)).toBe(true);\n    });\n  });\n\n  describe('horizontal stepper', () => {\n    it('should set the aria-orientation to \"horizontal\"', () => {\n      let fixture = createComponent(SimpleMatHorizontalStepperApp);\n      fixture.detectChanges();\n\n      let stepperEl = fixture.debugElement.query(By.css('mat-horizontal-stepper')).nativeElement;\n      expect(stepperEl.getAttribute('aria-orientation')).toBe('horizontal');\n    });\n\n    it('should support using the left/right arrows to move focus', () => {\n      let fixture = createComponent(SimpleMatHorizontalStepperApp);\n      fixture.detectChanges();\n\n      let stepHeaders = fixture.debugElement.queryAll(By.css('.mat-horizontal-stepper-header'));\n      assertCorrectKeyboardInteraction(fixture, stepHeaders, 'horizontal');\n    });\n\n    it('should reverse arrow key focus in RTL mode', () => {\n      dir.value = 'rtl';\n      let fixture = createComponent(SimpleMatHorizontalStepperApp);\n      fixture.detectChanges();\n\n      let stepHeaders = fixture.debugElement.queryAll(By.css('.mat-horizontal-stepper-header'));\n      assertArrowKeyInteractionInRtl(fixture, stepHeaders);\n    });\n\n    it('should reverse arrow key focus when switching into RTL after init', () => {\n      let fixture = createComponent(SimpleMatHorizontalStepperApp);\n      fixture.detectChanges();\n\n      let stepHeaders = fixture.debugElement.queryAll(By.css('.mat-horizontal-stepper-header'));\n      assertCorrectKeyboardInteraction(fixture, stepHeaders, 'horizontal');\n\n      dir.value = 'rtl';\n      dir.change.emit('rtl');\n      fixture.detectChanges();\n\n      assertArrowKeyInteractionInRtl(fixture, stepHeaders);\n    });\n\n    it('should be able to disable ripples', () => {\n      const fixture = createComponent(SimpleMatHorizontalStepperApp);\n      fixture.detectChanges();\n\n      const stepHeaders = fixture.debugElement.queryAll(By.directive(MatStepHeader));\n      const headerRipples = stepHeaders.map(headerDebugEl =>\n          headerDebugEl.query(By.directive(MatRipple)).injector.get(MatRipple));\n\n      expect(headerRipples.every(ripple => ripple.disabled)).toBe(false);\n\n      fixture.componentInstance.disableRipple = true;\n      fixture.detectChanges();\n\n      expect(headerRipples.every(ripple => ripple.disabled)).toBe(true);\n    });\n  });\n\n  describe('linear stepper with valid step', () => {\n    let fixture: ComponentFixture<LinearStepperWithValidOptionalStep>;\n    let testComponent: LinearStepperWithValidOptionalStep;\n    let stepper: MatStepper;\n\n    beforeEach(() => {\n      fixture = createComponent(LinearStepperWithValidOptionalStep);\n      fixture.detectChanges();\n\n      testComponent = fixture.componentInstance;\n      stepper = fixture.debugElement\n          .query(By.css('mat-horizontal-stepper')).componentInstance;\n    });\n\n    it('must be visited if not optional', () => {\n      stepper.selectedIndex = 2;\n      fixture.detectChanges();\n      expect(stepper.selectedIndex).toBe(0);\n\n      stepper.selectedIndex = 1;\n      fixture.detectChanges();\n      expect(stepper.selectedIndex).toBe(1);\n\n      stepper.selectedIndex = 2;\n      fixture.detectChanges();\n      expect(stepper.selectedIndex).toBe(2);\n    });\n\n    it('can be skipped entirely if optional', () => {\n      testComponent.step2Optional = true;\n      fixture.detectChanges();\n      stepper.selectedIndex = 2;\n      fixture.detectChanges();\n      expect(stepper.selectedIndex).toBe(2);\n    });\n  });\n\n  describe('aria labelling', () => {\n    let fixture: ComponentFixture<StepperWithAriaInputs>;\n    let stepHeader: HTMLElement;\n\n    beforeEach(() => {\n      fixture = createComponent(StepperWithAriaInputs);\n      fixture.detectChanges();\n      stepHeader = fixture.nativeElement.querySelector('.mat-step-header');\n    });\n\n    it('should not set aria-label or aria-labelledby attributes if they are not passed in', () => {\n      expect(stepHeader.hasAttribute('aria-label')).toBe(false);\n      expect(stepHeader.hasAttribute('aria-labelledby')).toBe(false);\n    });\n\n    it('should set the aria-label attribute', () => {\n      fixture.componentInstance.ariaLabel = 'First step';\n      fixture.detectChanges();\n\n      expect(stepHeader.getAttribute('aria-label')).toBe('First step');\n    });\n\n    it('should set the aria-labelledby attribute', () => {\n      fixture.componentInstance.ariaLabelledby = 'first-step-label';\n      fixture.detectChanges();\n\n      expect(stepHeader.getAttribute('aria-labelledby')).toBe('first-step-label');\n    });\n\n    it('should not be able to set both an aria-label and aria-labelledby', () => {\n      fixture.componentInstance.ariaLabel = 'First step';\n      fixture.componentInstance.ariaLabelledby = 'first-step-label';\n      fixture.detectChanges();\n\n      expect(stepHeader.getAttribute('aria-label')).toBe('First step');\n      expect(stepHeader.hasAttribute('aria-labelledby')).toBe(false);\n    });\n\n  });\n\n  describe('stepper with error state', () => {\n    let fixture: ComponentFixture<MatHorizontalStepperWithErrorsApp>;\n    let stepper: MatStepper;\n\n    beforeEach(() => {\n      fixture = createComponent(\n        MatHorizontalStepperWithErrorsApp,\n        [{\n          provide: STEPPER_GLOBAL_OPTIONS,\n          useValue: {showError: true}\n        }],\n        [MatFormFieldModule, MatInputModule]\n      );\n      fixture.detectChanges();\n      stepper = fixture.debugElement\n          .query(By.css('mat-horizontal-stepper')).componentInstance;\n    });\n\n    it('should show error state', () => {\n      const nextButtonNativeEl = fixture.debugElement\n          .queryAll(By.directive(MatStepperNext))[0].nativeElement;\n\n      stepper.selectedIndex = 1;\n      stepper.steps.first.hasError = true;\n      nextButtonNativeEl.click();\n      fixture.detectChanges();\n\n      expect(stepper._getIndicatorType(0)).toBe(STEP_STATE.ERROR);\n    });\n\n    it('should respect a custom falsy hasError value', () => {\n      const nextButtonNativeEl = fixture.debugElement\n          .queryAll(By.directive(MatStepperNext))[0].nativeElement;\n\n      stepper.selectedIndex = 1;\n      nextButtonNativeEl.click();\n      fixture.detectChanges();\n\n      expect(stepper._getIndicatorType(0)).toBe(STEP_STATE.ERROR);\n\n      stepper.steps.first.hasError = false;\n      fixture.detectChanges();\n\n      expect(stepper._getIndicatorType(0)).not.toBe(STEP_STATE.ERROR);\n    });\n\n  });\n\n  describe('stepper using Material UI Guideline logic', () => {\n    let fixture: ComponentFixture<MatHorizontalStepperWithErrorsApp>;\n    let stepper: MatStepper;\n\n    beforeEach(() => {\n      fixture = createComponent(\n        MatHorizontalStepperWithErrorsApp,\n        [{\n          provide: STEPPER_GLOBAL_OPTIONS,\n          useValue: {displayDefaultIndicatorType: false}\n        }],\n        [MatFormFieldModule, MatInputModule]\n      );\n      fixture.detectChanges();\n      stepper = fixture.debugElement\n          .query(By.css('mat-horizontal-stepper')).componentInstance;\n    });\n\n    it('should show done state when step is completed and its not the current step', () => {\n      let nextButtonNativeEl = fixture.debugElement\n          .queryAll(By.directive(MatStepperNext))[0].nativeElement;\n\n      stepper.selectedIndex = 1;\n      stepper.steps.first.completed = true;\n      nextButtonNativeEl.click();\n      fixture.detectChanges();\n\n      expect(stepper._getIndicatorType(0)).toBe(STEP_STATE.DONE);\n    });\n\n    it('should show edit state when step is editable and its the current step', () => {\n      stepper.selectedIndex = 1;\n      stepper.steps.toArray()[1].editable = true;\n      fixture.detectChanges();\n\n      expect(stepper._getIndicatorType(1)).toBe(STEP_STATE.EDIT);\n    });\n  });\n});\n\n/** Asserts that keyboard interaction works correctly. */\nfunction assertCorrectKeyboardInteraction(fixture: ComponentFixture<any>,\n                                          stepHeaders: DebugElement[],\n                                          orientation: StepperOrientation) {\n  let stepperComponent = fixture.debugElement.query(By.directive(MatStepper)).componentInstance;\n  let nextKey = orientation === 'vertical' ? DOWN_ARROW : RIGHT_ARROW;\n  let prevKey = orientation === 'vertical' ? UP_ARROW : LEFT_ARROW;\n\n  expect(stepperComponent._getFocusIndex()).toBe(0);\n  expect(stepperComponent.selectedIndex).toBe(0);\n\n  let stepHeaderEl = stepHeaders[0].nativeElement;\n  dispatchKeyboardEvent(stepHeaderEl, 'keydown', nextKey);\n  fixture.detectChanges();\n\n  expect(stepperComponent._getFocusIndex())\n      .toBe(1, 'Expected index of focused step to increase by 1 after pressing the next key.');\n  expect(stepperComponent.selectedIndex)\n      .toBe(0, 'Expected index of selected step to remain unchanged after pressing the next key.');\n\n  stepHeaderEl = stepHeaders[1].nativeElement;\n  dispatchKeyboardEvent(stepHeaderEl, 'keydown', ENTER);\n  fixture.detectChanges();\n\n  expect(stepperComponent._getFocusIndex())\n      .toBe(1, 'Expected index of focused step to remain unchanged after ENTER event.');\n  expect(stepperComponent.selectedIndex)\n      .toBe(1,\n          'Expected index of selected step to change to index of focused step after ENTER event.');\n\n  stepHeaderEl = stepHeaders[1].nativeElement;\n  dispatchKeyboardEvent(stepHeaderEl, 'keydown', prevKey);\n  fixture.detectChanges();\n\n  expect(stepperComponent._getFocusIndex())\n      .toBe(0, 'Expected index of focused step to decrease by 1 after pressing the previous key.');\n  expect(stepperComponent.selectedIndex).toBe(1,\n      'Expected index of selected step to remain unchanged after pressing the previous key.');\n\n  // When the focus is on the last step and right arrow key is pressed, the focus should cycle\n  // through to the first step.\n  stepperComponent._keyManager.updateActiveItemIndex(2);\n  stepHeaderEl = stepHeaders[2].nativeElement;\n  dispatchKeyboardEvent(stepHeaderEl, 'keydown', nextKey);\n  fixture.detectChanges();\n\n  expect(stepperComponent._getFocusIndex()).toBe(0,\n      'Expected index of focused step to cycle through to index 0 after pressing the next key.');\n  expect(stepperComponent.selectedIndex)\n      .toBe(1, 'Expected index of selected step to remain unchanged after pressing the next key.');\n\n  stepHeaderEl = stepHeaders[0].nativeElement;\n  dispatchKeyboardEvent(stepHeaderEl, 'keydown', SPACE);\n  fixture.detectChanges();\n\n  expect(stepperComponent._getFocusIndex())\n      .toBe(0, 'Expected index of focused to remain unchanged after SPACE event.');\n  expect(stepperComponent.selectedIndex)\n      .toBe(0,\n          'Expected index of selected step to change to index of focused step after SPACE event.');\n\n  const endEvent = dispatchKeyboardEvent(stepHeaderEl, 'keydown', END);\n  expect(stepperComponent._getFocusIndex())\n      .toBe(stepHeaders.length - 1, 'Expected last step to be focused when pressing END.');\n  expect(endEvent.defaultPrevented).toBe(true, 'Expected default END action to be prevented.');\n\n  const homeEvent = dispatchKeyboardEvent(stepHeaderEl, 'keydown', HOME);\n  expect(stepperComponent._getFocusIndex())\n      .toBe(0, 'Expected first step to be focused when pressing HOME.');\n  expect(homeEvent.defaultPrevented).toBe(true, 'Expected default HOME action to be prevented.');\n}\n\n/** Asserts that arrow key direction works correctly in RTL mode. */\nfunction assertArrowKeyInteractionInRtl(fixture: ComponentFixture<any>,\n                                        stepHeaders: DebugElement[]) {\n  let stepperComponent = fixture.debugElement.query(By.directive(MatStepper)).componentInstance;\n\n  expect(stepperComponent._getFocusIndex()).toBe(0);\n\n  let stepHeaderEl = stepHeaders[0].nativeElement;\n  dispatchKeyboardEvent(stepHeaderEl, 'keydown', LEFT_ARROW);\n  fixture.detectChanges();\n\n  expect(stepperComponent._getFocusIndex()).toBe(1);\n\n  stepHeaderEl = stepHeaders[1].nativeElement;\n  dispatchKeyboardEvent(stepHeaderEl, 'keydown', RIGHT_ARROW);\n  fixture.detectChanges();\n\n  expect(stepperComponent._getFocusIndex()).toBe(0);\n}\n\n/** Asserts that keyboard interaction works correctly when the user is pressing a modifier key. */\nfunction assertSelectKeyWithModifierInteraction(fixture: ComponentFixture<any>,\n                                                stepHeaders: DebugElement[],\n                                                orientation: StepperOrientation,\n                                                selectionKey: number) {\n  const stepperComponent = fixture.debugElement.query(By.directive(MatStepper)).componentInstance;\n  const modifiers = ['altKey', 'shiftKey', 'ctrlKey', 'metaKey'];\n\n  expect(stepperComponent._getFocusIndex()).toBe(0);\n  expect(stepperComponent.selectedIndex).toBe(0);\n\n  dispatchKeyboardEvent(stepHeaders[0].nativeElement, 'keydown',\n      orientation === 'vertical' ? DOWN_ARROW : RIGHT_ARROW);\n  fixture.detectChanges();\n\n  expect(stepperComponent._getFocusIndex())\n      .toBe(1, 'Expected index of focused step to increase by 1 after pressing the next key.');\n  expect(stepperComponent.selectedIndex)\n      .toBe(0, 'Expected index of selected step to remain unchanged after pressing the next key.');\n\n  modifiers.forEach(modifier => {\n    const event: KeyboardEvent = createKeyboardEvent('keydown', selectionKey);\n    Object.defineProperty(event, modifier, {get: () => true});\n    dispatchEvent(stepHeaders[1].nativeElement, event);\n    fixture.detectChanges();\n\n    expect(stepperComponent.selectedIndex).toBe(0, `Expected selected index to remain unchanged ` +\n        `when pressing the selection key with ${modifier} modifier.`);\n    expect(event.defaultPrevented).toBe(false);\n  });\n}\n\nfunction asyncValidator(minLength: number, validationTrigger: Subject<void>): AsyncValidatorFn {\n  return (control: AbstractControl): Observable<ValidationErrors | null> => {\n    return validationTrigger.pipe(\n      map(() => control.value && control.value.length >= minLength ? null : {asyncValidation: {}}),\n      take(1)\n    );\n  };\n}\n\nfunction createComponent<T>(component: Type<T>,\n  providers: Provider[] = [],\n  imports: any[] = []): ComponentFixture<T> {\n  TestBed.configureTestingModule({\n    imports: [\n      MatStepperModule,\n      NoopAnimationsModule,\n      ReactiveFormsModule,\n      ...imports\n    ],\n    declarations: [component],\n    providers: [\n      {provide: Directionality, useFactory: () => dir},\n      ...providers\n    ],\n  }).compileComponents();\n\n  return TestBed.createComponent<T>(component);\n}\n\n@Component({\n  template: `\n  <form [formGroup]=\"formGroup\">\n    <mat-horizontal-stepper>\n      <mat-step errorMessage=\"This field is required\"\n        [stepControl]=\"formGroup.get('firstNameCtrl')\">\n        <ng-template matStepLabel>Step 1</ng-template>\n        <mat-form-field>\n          <mat-label>First name</mat-label>\n          <input matInput formControlName=\"firstNameCtrl\" required>\n          <mat-error>This field is required</mat-error>\n        </mat-form-field>\n        <div>\n          <button mat-button matStepperPrevious>Back</button>\n          <button mat-button matStepperNext>Next</button>\n        </div>\n      </mat-step>\n      <mat-step>\n        <ng-template matStepLabel>Step 2</ng-template>\n        Content 2\n        <div>\n          <button mat-button matStepperPrevious>Back</button>\n          <button mat-button matStepperNext>Next</button>\n        </div>\n      </mat-step>\n    </mat-horizontal-stepper>\n  </form>\n  `\n})\nclass MatHorizontalStepperWithErrorsApp implements OnInit {\n  formGroup: FormGroup;\n\n  constructor(private _formBuilder: FormBuilder) { }\n\n  ngOnInit() {\n    this.formGroup = this._formBuilder.group({\n      firstNameCtrl: ['', Validators.required],\n      lastNameCtrl: ['', Validators.required],\n    });\n  }\n}\n\n@Component({\n  template: `\n    <mat-horizontal-stepper [disableRipple]=\"disableRipple\">\n      <mat-step>\n        <ng-template matStepLabel>Step 1</ng-template>\n        Content 1\n        <div>\n          <button mat-button matStepperPrevious>Back</button>\n          <button mat-button matStepperNext>Next</button>\n        </div>\n      </mat-step>\n      <mat-step>\n        <ng-template matStepLabel>Step 2</ng-template>\n        Content 2\n        <div>\n          <button mat-button matStepperPrevious>Back</button>\n          <button mat-button matStepperNext>Next</button>\n        </div>\n      </mat-step>\n      <mat-step [label]=\"inputLabel\" optional>\n        Content 3\n        <div>\n          <button mat-button matStepperPrevious>Back</button>\n          <button mat-button matStepperNext>Next</button>\n        </div>\n      </mat-step>\n    </mat-horizontal-stepper>\n  `\n})\nclass SimpleMatHorizontalStepperApp {\n  inputLabel = 'Step 3';\n  disableRipple = false;\n}\n\n@Component({\n  template: `\n    <mat-vertical-stepper [disableRipple]=\"disableRipple\">\n      <mat-step>\n        <ng-template matStepLabel>Step 1</ng-template>\n        Content 1\n        <div>\n          <button mat-button matStepperPrevious>Back</button>\n          <button mat-button matStepperNext>Next</button>\n        </div>\n      </mat-step>\n      <mat-step *ngIf=\"showStepTwo\">\n        <ng-template matStepLabel>Step 2</ng-template>\n        Content 2\n        <div>\n          <button mat-button matStepperPrevious>Back</button>\n          <button mat-button matStepperNext>Next</button>\n        </div>\n      </mat-step>\n      <mat-step [label]=\"inputLabel\">\n        Content 3\n        <div>\n          <button mat-button matStepperPrevious>Back</button>\n          <button mat-button matStepperNext>Next</button>\n        </div>\n      </mat-step>\n    </mat-vertical-stepper>\n  `\n})\nclass SimpleMatVerticalStepperApp {\n  inputLabel = 'Step 3';\n  showStepTwo = true;\n  disableRipple = false;\n}\n\n@Component({\n  template: `\n    <mat-vertical-stepper linear>\n      <mat-step [stepControl]=\"oneGroup\">\n        <form [formGroup]=\"oneGroup\">\n          <ng-template matStepLabel>Step one</ng-template>\n          <input formControlName=\"oneCtrl\" required>\n          <div>\n            <button mat-button matStepperPrevious>Back</button>\n            <button mat-button matStepperNext>Next</button>\n          </div>\n        </form>\n      </mat-step>\n      <mat-step [stepControl]=\"twoGroup\">\n        <form [formGroup]=\"twoGroup\">\n          <ng-template matStepLabel>Step two</ng-template>\n          <input formControlName=\"twoCtrl\" required>\n          <div>\n            <button mat-button matStepperPrevious>Back</button>\n            <button mat-button matStepperNext>Next</button>\n          </div>\n        </form>\n      </mat-step>\n      <mat-step [stepControl]=\"threeGroup\" optional>\n        <form [formGroup]=\"threeGroup\">\n          <ng-template matStepLabel>Step two</ng-template>\n          <input formControlName=\"threeCtrl\">\n          <div>\n            <button mat-button matStepperPrevious>Back</button>\n            <button mat-button matStepperNext>Next</button>\n          </div>\n        </form>\n      </mat-step>\n      <mat-step>\n        Done\n      </mat-step>\n    </mat-vertical-stepper>\n  `\n})\nclass LinearMatVerticalStepperApp implements OnInit {\n  oneGroup: FormGroup;\n  twoGroup: FormGroup;\n  threeGroup: FormGroup;\n\n  validationTrigger = new Subject<void>();\n\n  ngOnInit() {\n    this.oneGroup = new FormGroup({\n      oneCtrl: new FormControl('', Validators.required)\n    });\n    this.twoGroup = new FormGroup({\n      twoCtrl: new FormControl('', Validators.required, asyncValidator(3, this.validationTrigger))\n    });\n    this.threeGroup = new FormGroup({\n      threeCtrl: new FormControl('', Validators.pattern(VALID_REGEX))\n    });\n  }\n}\n\n@Component({\n  template: `\n    <mat-horizontal-stepper [linear]=\"true\" [selectedIndex]=\"index\">\n      <mat-step label=\"One\"></mat-step>\n      <mat-step label=\"Two\"></mat-step>\n      <mat-step label=\"Three\"></mat-step>\n    </mat-horizontal-stepper>\n  `\n})\nclass SimplePreselectedMatHorizontalStepperApp {\n  index = 0;\n}\n\n@Component({\n  template: `\n    <mat-horizontal-stepper linear>\n      <mat-step\n        *ngFor=\"let step of steps\"\n        [label]=\"step.label\"\n        [completed]=\"step.completed\"></mat-step>\n    </mat-horizontal-stepper>\n  `\n})\nclass SimpleStepperWithoutStepControl {\n  steps = [\n    {label: 'One', completed: false},\n    {label: 'Two', completed: false},\n    {label: 'Three', completed: false}\n  ];\n}\n\n@Component({\n  template: `\n    <mat-horizontal-stepper linear>\n      <mat-step\n        *ngFor=\"let step of steps\"\n        [label]=\"step.label\"\n        [stepControl]=\"step.control\"\n        [completed]=\"step.completed\"></mat-step>\n    </mat-horizontal-stepper>\n  `\n})\nclass SimpleStepperWithStepControlAndCompletedBinding {\n  steps = [\n    {label: 'One', completed: false, control: new FormControl()},\n    {label: 'Two', completed: false, control: new FormControl()},\n    {label: 'Three', completed: false, control: new FormControl()}\n  ];\n}\n\n@Component({\n  template: `\n    <mat-horizontal-stepper>\n      <ng-template matStepperIcon=\"edit\">Custom edit</ng-template>\n      <ng-template matStepperIcon=\"done\">Custom done</ng-template>\n      <ng-template matStepperIcon=\"number\" let-index=\"index\">\n        {{getRomanNumeral(index + 1)}}\n      </ng-template>\n\n      <mat-step>Content 1</mat-step>\n      <mat-step>Content 2</mat-step>\n      <mat-step>Content 3</mat-step>\n    </mat-horizontal-stepper>\n`\n})\nclass IconOverridesStepper {\n  getRomanNumeral(value: number) {\n    const numberMap: {[key: number]: string} = {\n      1: 'I',\n      2: 'II',\n      3: 'III',\n      4: 'IV',\n      5: 'V',\n      6: 'VI',\n      7: 'VII',\n      8: 'VIII',\n      9: 'IX'\n    };\n\n    return numberMap[value];\n  }\n}\n\n@Component({\n  template: `\n    <mat-horizontal-stepper linear>\n      <mat-step label=\"Step 1\" [stepControl]=\"controls[0]\"></mat-step>\n      <mat-step label=\"Step 2\" [stepControl]=\"controls[1]\" [optional]=\"step2Optional\"></mat-step>\n      <mat-step label=\"Step 3\" [stepControl]=\"controls[2]\"></mat-step>\n    </mat-horizontal-stepper>\n  `\n})\nclass LinearStepperWithValidOptionalStep {\n  controls = [0, 0, 0].map(() => new FormControl());\n  step2Optional = false;\n}\n\n\n@Component({\n  template: `\n    <mat-horizontal-stepper>\n      <mat-step [aria-label]=\"ariaLabel\" [aria-labelledby]=\"ariaLabelledby\" label=\"One\"></mat-step>\n    </mat-horizontal-stepper>\n  `\n})\nclass StepperWithAriaInputs {\n  ariaLabel: string;\n  ariaLabelledby: string;\n}\n"]}