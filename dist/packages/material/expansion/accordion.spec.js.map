{"version":3,"file":"accordion.spec.js","sourceRoot":"","sources":["../../../../src/lib/expansion/accordion.spec.ts"],"names":[],"mappings":"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","sourcesContent":["import {async, TestBed, inject} from '@angular/core/testing';\nimport {Component, ViewChild, QueryList, ViewChildren} from '@angular/core';\nimport {By} from '@angular/platform-browser';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {\n  MatExpansionModule,\n  MatAccordion,\n  MatExpansionPanel,\n  MatExpansionPanelHeader,\n} from './index';\nimport {dispatchKeyboardEvent} from '@angular/cdk/testing';\nimport {DOWN_ARROW, UP_ARROW, HOME, END} from '@angular/cdk/keycodes';\nimport {FocusMonitor} from '@angular/cdk/a11y';\n\n\ndescribe('MatAccordion', () => {\n  let focusMonitor: FocusMonitor;\n\n  beforeEach(async(() => {\n    TestBed.configureTestingModule({\n      imports: [\n        BrowserAnimationsModule,\n        MatExpansionModule\n      ],\n      declarations: [\n        AccordionWithHideToggle,\n        NestedPanel,\n        SetOfItems,\n      ],\n    });\n    TestBed.compileComponents();\n\n    inject([FocusMonitor], (fm: FocusMonitor) => {\n      focusMonitor = fm;\n    })();\n  }));\n\n  it('should ensure only one item is expanded at a time', () => {\n    const fixture = TestBed.createComponent(SetOfItems);\n    fixture.detectChanges();\n\n    const items = fixture.debugElement.queryAll(By.css('.mat-expansion-panel'));\n    const panelInstances = fixture.componentInstance.panels.toArray();\n\n    panelInstances[0].expanded = true;\n    fixture.detectChanges();\n    expect(items[0].classes['mat-expanded']).toBeTruthy();\n    expect(items[1].classes['mat-expanded']).toBeFalsy();\n\n    panelInstances[1].expanded = true;\n    fixture.detectChanges();\n    expect(items[0].classes['mat-expanded']).toBeFalsy();\n    expect(items[1].classes['mat-expanded']).toBeTruthy();\n  });\n\n  it('should allow multiple items to be expanded simultaneously', () => {\n    const fixture = TestBed.createComponent(SetOfItems);\n    fixture.componentInstance.multi = true;\n    fixture.detectChanges();\n\n    const panels = fixture.debugElement.queryAll(By.css('.mat-expansion-panel'));\n    const panelInstances = fixture.componentInstance.panels.toArray();\n\n    panelInstances[0].expanded = true;\n    panelInstances[1].expanded = true;\n    fixture.detectChanges();\n    expect(panels[0].classes['mat-expanded']).toBeTruthy();\n    expect(panels[1].classes['mat-expanded']).toBeTruthy();\n  });\n\n  it('should expand or collapse all enabled items', () => {\n    const fixture = TestBed.createComponent(SetOfItems);\n    fixture.detectChanges();\n\n    const panels = fixture.debugElement.queryAll(By.css('.mat-expansion-panel'));\n\n    fixture.componentInstance.multi = true;\n    fixture.componentInstance.panels.toArray()[1].expanded = true;\n    fixture.detectChanges();\n    expect(panels[0].classes['mat-expanded']).toBeFalsy();\n    expect(panels[1].classes['mat-expanded']).toBeTruthy();\n\n    fixture.componentInstance.accordion.openAll();\n    fixture.detectChanges();\n    expect(panels[0].classes['mat-expanded']).toBeTruthy();\n    expect(panels[1].classes['mat-expanded']).toBeTruthy();\n\n    fixture.componentInstance.accordion.closeAll();\n    fixture.detectChanges();\n    expect(panels[0].classes['mat-expanded']).toBeFalsy();\n    expect(panels[1].classes['mat-expanded']).toBeFalsy();\n  });\n\n  it('should not expand or collapse disabled items', () => {\n    const fixture = TestBed.createComponent(SetOfItems);\n    fixture.detectChanges();\n\n    const panels = fixture.debugElement.queryAll(By.css('.mat-expansion-panel'));\n\n    fixture.componentInstance.multi = true;\n    fixture.componentInstance.panels.toArray()[1].disabled = true;\n    fixture.detectChanges();\n    fixture.componentInstance.accordion.openAll();\n    fixture.detectChanges();\n    expect(panels[0].classes['mat-expanded']).toBeTruthy();\n    expect(panels[1].classes['mat-expanded']).toBeFalsy();\n\n    fixture.componentInstance.accordion.closeAll();\n    fixture.detectChanges();\n    expect(panels[0].classes['mat-expanded']).toBeFalsy();\n    expect(panels[1].classes['mat-expanded']).toBeFalsy();\n  });\n\n  it('should not register nested panels to the same accordion', () => {\n    const fixture = TestBed.createComponent(NestedPanel);\n    const innerPanel = fixture.componentInstance.innerPanel;\n    const outerPanel = fixture.componentInstance.outerPanel;\n\n    expect(innerPanel.accordion).not.toBe(outerPanel.accordion);\n  });\n\n  it('should update the expansion panel if hideToggle changed', () => {\n    const fixture = TestBed.createComponent(AccordionWithHideToggle);\n    const panel = fixture.debugElement.query(By.directive(MatExpansionPanel));\n\n    fixture.detectChanges();\n\n    expect(panel.nativeElement.querySelector('.mat-expansion-indicator'))\n      .toBeTruthy('Expected the expansion indicator to be present.');\n\n    fixture.componentInstance.hideToggle = true;\n    fixture.detectChanges();\n\n    expect(panel.nativeElement.querySelector('.mat-expansion-indicator'))\n      .toBeFalsy('Expected the expansion indicator to be removed.');\n  });\n\n  it('should move focus to the next header when pressing the down arrow', () => {\n    const fixture = TestBed.createComponent(SetOfItems);\n    fixture.detectChanges();\n\n    const headerElements = fixture.debugElement.queryAll(By.css('mat-expansion-panel-header'));\n    const headers = fixture.componentInstance.headers.toArray();\n\n    focusMonitor.focusVia(headerElements[0].nativeElement, 'keyboard');\n    headers.forEach(header => spyOn(header, 'focus'));\n\n    // Stop at the second-last header so focus doesn't wrap around.\n    for (let i = 0; i < headerElements.length - 1; i++) {\n      dispatchKeyboardEvent(headerElements[i].nativeElement, 'keydown', DOWN_ARROW);\n      fixture.detectChanges();\n      expect(headers[i + 1].focus).toHaveBeenCalledTimes(1);\n    }\n  });\n\n  it('should move focus to the next header when pressing the up arrow', () => {\n    const fixture = TestBed.createComponent(SetOfItems);\n    fixture.detectChanges();\n\n    const headerElements = fixture.debugElement.queryAll(By.css('mat-expansion-panel-header'));\n    const headers = fixture.componentInstance.headers.toArray();\n\n    focusMonitor.focusVia(headerElements[headerElements.length - 1].nativeElement, 'keyboard');\n    headers.forEach(header => spyOn(header, 'focus'));\n\n    // Stop before the first header\n    for (let i = headers.length - 1; i > 0; i--) {\n      dispatchKeyboardEvent(headerElements[i].nativeElement, 'keydown', UP_ARROW);\n      fixture.detectChanges();\n      expect(headers[i - 1].focus).toHaveBeenCalledTimes(1);\n    }\n  });\n\n  it('should skip disabled items when moving focus with the keyboard', () => {\n    const fixture = TestBed.createComponent(SetOfItems);\n    fixture.detectChanges();\n\n    const headerElements = fixture.debugElement.queryAll(By.css('mat-expansion-panel-header'));\n    const panels = fixture.componentInstance.panels.toArray();\n    const headers = fixture.componentInstance.headers.toArray();\n\n    focusMonitor.focusVia(headerElements[0].nativeElement, 'keyboard');\n    headers.forEach(header => spyOn(header, 'focus'));\n    panels[1].disabled = true;\n    fixture.detectChanges();\n\n    dispatchKeyboardEvent(headerElements[0].nativeElement, 'keydown', DOWN_ARROW);\n    fixture.detectChanges();\n\n    expect(headers[1].focus).not.toHaveBeenCalled();\n    expect(headers[2].focus).toHaveBeenCalledTimes(1);\n  });\n\n  it('should focus the first header when pressing the home key', () => {\n    const fixture = TestBed.createComponent(SetOfItems);\n    fixture.detectChanges();\n\n    const headerElements = fixture.debugElement.queryAll(By.css('mat-expansion-panel-header'));\n    const headers = fixture.componentInstance.headers.toArray();\n\n    headers.forEach(header => spyOn(header, 'focus'));\n    dispatchKeyboardEvent(headerElements[headerElements.length - 1].nativeElement, 'keydown', HOME);\n    fixture.detectChanges();\n\n    expect(headers[0].focus).toHaveBeenCalledTimes(1);\n  });\n\n  it('should focus the last header when pressing the end key', () => {\n    const fixture = TestBed.createComponent(SetOfItems);\n    fixture.detectChanges();\n\n    const headerElements = fixture.debugElement.queryAll(By.css('mat-expansion-panel-header'));\n    const headers = fixture.componentInstance.headers.toArray();\n\n    headers.forEach(header => spyOn(header, 'focus'));\n    dispatchKeyboardEvent(headerElements[0].nativeElement, 'keydown', END);\n    fixture.detectChanges();\n\n    expect(headers[headers.length - 1].focus).toHaveBeenCalledTimes(1);\n  });\n\n});\n\n\n@Component({template: `\n  <mat-accordion [multi]=\"multi\">\n    <mat-expansion-panel *ngFor=\"let i of [0, 1, 2, 3]\">\n      <mat-expansion-panel-header>Summary {{i}}</mat-expansion-panel-header>\n      <p>Content</p>\n    </mat-expansion-panel>\n  </mat-accordion>`})\nclass SetOfItems {\n  @ViewChild(MatAccordion) accordion: MatAccordion;\n  @ViewChildren(MatExpansionPanel) panels: QueryList<MatExpansionPanel>;\n  @ViewChildren(MatExpansionPanelHeader) headers: QueryList<MatExpansionPanelHeader>;\n\n  multi: boolean = false;\n}\n\n@Component({template: `\n  <mat-accordion>\n    <mat-expansion-panel #outerPanel=\"matExpansionPanel\">\n      <mat-expansion-panel-header>Outer Panel</mat-expansion-panel-header>\n      <mat-expansion-panel #innerPanel=\"matExpansionPanel\">\n        <mat-expansion-panel-header>Inner Panel</mat-expansion-panel-header>\n        <p>Content</p>\n      </mat-expansion-panel>\n    </mat-expansion-panel>\n  </mat-accordion>`})\nclass NestedPanel {\n  @ViewChild('outerPanel') outerPanel: MatExpansionPanel;\n  @ViewChild('innerPanel') innerPanel: MatExpansionPanel;\n}\n\n@Component({template: `\n  <mat-accordion [hideToggle]=\"hideToggle\">\n    <mat-expansion-panel>\n      <mat-expansion-panel-header>Header</mat-expansion-panel-header>\n      <p>Content</p>\n    </mat-expansion-panel>\n  </mat-accordion>`\n})\nclass AccordionWithHideToggle {\n  hideToggle = false;\n}\n"]}