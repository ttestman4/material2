{"version":3,"file":"select.spec.js","sourceRoot":"","sources":["../../../../src/lib/select/select.spec.ts"],"names":[],"mappings":"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","sourcesContent":["import {Directionality} from '@angular/cdk/bidi';\nimport {\n  DOWN_ARROW,\n  END,\n  ENTER,\n  HOME,\n  LEFT_ARROW,\n  RIGHT_ARROW,\n  SPACE,\n  TAB,\n  UP_ARROW,\n  A,\n} from '@angular/cdk/keycodes';\nimport {OverlayContainer} from '@angular/cdk/overlay';\nimport {Platform} from '@angular/cdk/platform';\nimport {ScrollDispatcher, ViewportRuler} from '@angular/cdk/scrolling';\nimport {\n  createKeyboardEvent,\n  dispatchEvent,\n  dispatchFakeEvent,\n  dispatchKeyboardEvent,\n  wrappedErrorMessage,\n} from '@angular/cdk/testing';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  DebugElement,\n  OnInit,\n  QueryList,\n  ViewChild,\n  ViewChildren,\n} from '@angular/core';\nimport {\n  async,\n  ComponentFixture,\n  fakeAsync,\n  flush,\n  inject,\n  TestBed,\n  tick,\n} from '@angular/core/testing';\nimport {\n  ControlValueAccessor,\n  FormControl,\n  FormGroup,\n  FormGroupDirective,\n  FormsModule,\n  NG_VALUE_ACCESSOR,\n  ReactiveFormsModule,\n  Validators,\n} from '@angular/forms';\nimport {\n  ErrorStateMatcher,\n  FloatLabelType,\n  MAT_LABEL_GLOBAL_OPTIONS,\n  MatOption,\n  MatOptionSelectionChange,\n} from '@angular/material/core';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {By} from '@angular/platform-browser';\nimport {NoopAnimationsModule} from '@angular/platform-browser/animations';\nimport {LiveAnnouncer} from '@angular/cdk/a11y';\nimport {Subject, Subscription, EMPTY, Observable} from 'rxjs';\nimport {map} from 'rxjs/operators';\nimport {MatSelectModule} from './index';\nimport {MatSelect} from './select';\nimport {\n  getMatSelectDynamicMultipleError,\n  getMatSelectNonArrayValueError,\n  getMatSelectNonFunctionValueError,\n} from './select-errors';\n\n\n/** The debounce interval when typing letters to select an option. */\nconst LETTER_KEY_DEBOUNCE_INTERVAL = 200;\n\ndescribe('MatSelect', () => {\n  let overlayContainer: OverlayContainer;\n  let overlayContainerElement: HTMLElement;\n  let dir: {value: 'ltr'|'rtl', change: Observable<string>};\n  let scrolledSubject = new Subject();\n  let viewportRuler: ViewportRuler;\n  let platform: Platform;\n\n  /**\n   * Configures the test module for MatSelect with the given declarations. This is broken out so\n   * that we're only compiling the necessary test components for each test in order to speed up\n   * overall test time.\n   * @param declarations Components to declare for this block\n   */\n  function configureMatSelectTestingModule(declarations: any[]) {\n    TestBed.configureTestingModule({\n      imports: [\n        MatFormFieldModule,\n        MatSelectModule,\n        ReactiveFormsModule,\n        FormsModule,\n        NoopAnimationsModule,\n      ],\n      declarations: declarations,\n      providers: [\n        {provide: Directionality, useFactory: () => dir = {value: 'ltr', change: EMPTY}},\n        {\n          provide: ScrollDispatcher, useFactory: () => ({\n            scrolled: () => scrolledSubject.asObservable(),\n          }),\n        },\n      ],\n    }).compileComponents();\n\n    inject([OverlayContainer, Platform], (oc: OverlayContainer, p: Platform) => {\n      overlayContainer = oc;\n      overlayContainerElement = oc.getContainerElement();\n      platform = p;\n    })();\n  }\n\n  afterEach(() => {\n    overlayContainer.ngOnDestroy();\n  });\n\n  describe('core', () => {\n    beforeEach(async(() => {\n      configureMatSelectTestingModule([\n        BasicSelect,\n        MultiSelect,\n        SelectWithGroups,\n        SelectWithGroupsAndNgContainer,\n        SelectWithFormFieldLabel,\n        SelectWithChangeEvent,\n      ]);\n    }));\n\n    describe('accessibility', () => {\n      describe('for select', () => {\n        let fixture: ComponentFixture<BasicSelect>;\n        let select: HTMLElement;\n\n        beforeEach(fakeAsync(() => {\n          fixture = TestBed.createComponent(BasicSelect);\n          fixture.detectChanges();\n          select = fixture.debugElement.query(By.css('mat-select')).nativeElement;\n        }));\n\n        it('should set the role of the select to listbox', fakeAsync(() => {\n          expect(select.getAttribute('role')).toEqual('listbox');\n        }));\n\n        it('should set the aria label of the select to the placeholder', fakeAsync(() => {\n          expect(select.getAttribute('aria-label')).toEqual('Food');\n        }));\n\n        it('should support setting a custom aria-label', fakeAsync(() => {\n          fixture.componentInstance.ariaLabel = 'Custom Label';\n          fixture.detectChanges();\n\n          expect(select.getAttribute('aria-label')).toEqual('Custom Label');\n        }));\n\n        it('should not set an aria-label if aria-labelledby is specified', fakeAsync(() => {\n          fixture.componentInstance.ariaLabelledby = 'myLabelId';\n          fixture.detectChanges();\n\n          expect(select.getAttribute('aria-label')).toBeFalsy('Expected no aria-label to be set.');\n          expect(select.getAttribute('aria-labelledby')).toBe('myLabelId');\n        }));\n\n        it('should not have aria-labelledby in the DOM if it`s not specified', fakeAsync(() => {\n          fixture.detectChanges();\n          expect(select.hasAttribute('aria-labelledby')).toBeFalsy();\n        }));\n\n        it('should set the tabindex of the select to 0 by default', fakeAsync(() => {\n          expect(select.getAttribute('tabindex')).toEqual('0');\n        }));\n\n        it('should be able to override the tabindex', fakeAsync(() => {\n          fixture.componentInstance.tabIndexOverride = 3;\n          fixture.detectChanges();\n\n          expect(select.getAttribute('tabindex')).toBe('3');\n        }));\n\n        it('should set aria-required for required selects', fakeAsync(() => {\n          expect(select.getAttribute('aria-required'))\n              .toEqual('false', `Expected aria-required attr to be false for normal selects.`);\n\n          fixture.componentInstance.isRequired = true;\n          fixture.detectChanges();\n\n          expect(select.getAttribute('aria-required'))\n              .toEqual('true', `Expected aria-required attr to be true for required selects.`);\n        }));\n\n        it('should set the mat-select-required class for required selects', fakeAsync(() => {\n          expect(select.classList).not.toContain(\n              'mat-select-required', `Expected the mat-select-required class not to be set.`);\n\n          fixture.componentInstance.isRequired = true;\n          fixture.detectChanges();\n\n          expect(select.classList).toContain(\n              'mat-select-required', `Expected the mat-select-required class to be set.`);\n        }));\n\n        it('should set aria-invalid for selects that are invalid and touched', fakeAsync(() => {\n          expect(select.getAttribute('aria-invalid'))\n              .toEqual('false', `Expected aria-invalid attr to be false for valid selects.`);\n\n          fixture.componentInstance.isRequired = true;\n          fixture.componentInstance.control.markAsTouched();\n          fixture.detectChanges();\n\n          expect(select.getAttribute('aria-invalid'))\n              .toEqual('true', `Expected aria-invalid attr to be true for invalid selects.`);\n        }));\n\n        it('should set aria-disabled for disabled selects', fakeAsync(() => {\n          expect(select.getAttribute('aria-disabled')).toEqual('false');\n\n          fixture.componentInstance.control.disable();\n          fixture.detectChanges();\n\n          expect(select.getAttribute('aria-disabled')).toEqual('true');\n        }));\n\n        it('should set the tabindex of the select to -1 if disabled', fakeAsync(() => {\n          fixture.componentInstance.control.disable();\n          fixture.detectChanges();\n          expect(select.getAttribute('tabindex')).toEqual('-1');\n\n          fixture.componentInstance.control.enable();\n          fixture.detectChanges();\n          expect(select.getAttribute('tabindex')).toEqual('0');\n        }));\n\n        it('should set `aria-labelledby` to form field label if there is no placeholder', () => {\n          fixture.destroy();\n\n          const labelFixture = TestBed.createComponent(SelectWithFormFieldLabel);\n          labelFixture.detectChanges();\n          select = labelFixture.debugElement.query(By.css('mat-select')).nativeElement;\n\n          expect(select.getAttribute('aria-labelledby')).toBeTruthy();\n          expect(select.getAttribute('aria-labelledby'))\n              .toBe(labelFixture.nativeElement.querySelector('label').getAttribute('id'));\n        });\n\n        it('should not set `aria-labelledby` if there is a placeholder', () => {\n          fixture.destroy();\n\n          const labelFixture = TestBed.createComponent(SelectWithFormFieldLabel);\n          labelFixture.componentInstance.placeholder = 'Thing selector';\n          labelFixture.detectChanges();\n          select = labelFixture.debugElement.query(By.css('mat-select')).nativeElement;\n\n          expect(select.getAttribute('aria-labelledby')).toBeFalsy();\n        });\n\n        it('should not set `aria-labelledby` if there is no form field label', () => {\n          fixture.destroy();\n\n          const labelFixture = TestBed.createComponent(SelectWithChangeEvent);\n          labelFixture.detectChanges();\n          select = labelFixture.debugElement.query(By.css('mat-select')).nativeElement;\n\n          expect(select.getAttribute('aria-labelledby')).toBeFalsy();\n        });\n\n        it('should select options via the UP/DOWN arrow keys on a closed select', fakeAsync(() => {\n          const formControl = fixture.componentInstance.control;\n          const options = fixture.componentInstance.options.toArray();\n\n          expect(formControl.value).toBeFalsy('Expected no initial value.');\n\n          dispatchKeyboardEvent(select, 'keydown', DOWN_ARROW);\n\n          expect(options[0].selected).toBe(true, 'Expected first option to be selected.');\n          expect(formControl.value).toBe(options[0].value,\n              'Expected value from first option to have been set on the model.');\n\n          dispatchKeyboardEvent(select, 'keydown', DOWN_ARROW);\n          dispatchKeyboardEvent(select, 'keydown', DOWN_ARROW);\n\n          // Note that the third option is skipped, because it is disabled.\n          expect(options[3].selected).toBe(true, 'Expected fourth option to be selected.');\n          expect(formControl.value).toBe(options[3].value,\n              'Expected value from fourth option to have been set on the model.');\n\n          dispatchKeyboardEvent(select, 'keydown', UP_ARROW);\n\n          expect(options[1].selected).toBe(true, 'Expected second option to be selected.');\n          expect(formControl.value).toBe(options[1].value,\n              'Expected value from second option to have been set on the model.');\n\n          flush();\n        }));\n\n        it('should select first/last options via the HOME/END keys on a closed select',\n          fakeAsync(() => {\n            const formControl = fixture.componentInstance.control;\n            const firstOption = fixture.componentInstance.options.first;\n            const lastOption = fixture.componentInstance.options.last;\n\n            expect(formControl.value).toBeFalsy('Expected no initial value.');\n\n            const endEvent = dispatchKeyboardEvent(select, 'keydown', END);\n\n            expect(endEvent.defaultPrevented).toBe(true);\n            expect(lastOption.selected).toBe(true, 'Expected last option to be selected.');\n            expect(formControl.value).toBe(lastOption.value,\n                'Expected value from last option to have been set on the model.');\n\n            const homeEvent = dispatchKeyboardEvent(select, 'keydown', HOME);\n\n            expect(homeEvent.defaultPrevented).toBe(true);\n            expect(firstOption.selected).toBe(true, 'Expected first option to be selected.');\n            expect(formControl.value).toBe(firstOption.value,\n                'Expected value from first option to have been set on the model.');\n\n            flush();\n          }));\n\n        it('should resume focus from selected item after selecting via click', fakeAsync(() => {\n          const formControl = fixture.componentInstance.control;\n          const options = fixture.componentInstance.options.toArray();\n\n          expect(formControl.value).toBeFalsy('Expected no initial value.');\n\n          fixture.componentInstance.select.open();\n          fixture.detectChanges();\n          flush();\n\n          (overlayContainerElement.querySelectorAll('mat-option')[3] as HTMLElement).click();\n          fixture.detectChanges();\n          flush();\n\n          expect(formControl.value).toBe(options[3].value);\n\n          dispatchKeyboardEvent(select, 'keydown', DOWN_ARROW);\n          fixture.detectChanges();\n\n          expect(formControl.value).toBe(options[4].value);\n          flush();\n        }));\n\n        it('should select options via LEFT/RIGHT arrow keys on a closed select', fakeAsync(() => {\n          const formControl = fixture.componentInstance.control;\n          const options = fixture.componentInstance.options.toArray();\n\n          expect(formControl.value).toBeFalsy('Expected no initial value.');\n\n          dispatchKeyboardEvent(select, 'keydown', RIGHT_ARROW);\n\n          expect(options[0].selected).toBe(true, 'Expected first option to be selected.');\n          expect(formControl.value).toBe(options[0].value,\n              'Expected value from first option to have been set on the model.');\n\n          dispatchKeyboardEvent(select, 'keydown', RIGHT_ARROW);\n          dispatchKeyboardEvent(select, 'keydown', RIGHT_ARROW);\n\n          // Note that the third option is skipped, because it is disabled.\n          expect(options[3].selected).toBe(true, 'Expected fourth option to be selected.');\n          expect(formControl.value).toBe(options[3].value,\n              'Expected value from fourth option to have been set on the model.');\n\n          dispatchKeyboardEvent(select, 'keydown', LEFT_ARROW);\n\n          expect(options[1].selected).toBe(true, 'Expected second option to be selected.');\n          expect(formControl.value).toBe(options[1].value,\n              'Expected value from second option to have been set on the model.');\n          flush();\n        }));\n\n        it('should announce changes via the keyboard on a closed select',\n          fakeAsync(inject([LiveAnnouncer], (liveAnnouncer: LiveAnnouncer) => {\n          spyOn(liveAnnouncer, 'announce');\n\n          dispatchKeyboardEvent(select, 'keydown', RIGHT_ARROW);\n\n          expect(liveAnnouncer.announce).toHaveBeenCalledWith('Steak');\n\n          flush();\n        })));\n\n        it('should open a single-selection select using ALT + DOWN_ARROW', fakeAsync(() => {\n          const {control: formControl, select: selectInstance} = fixture.componentInstance;\n\n          expect(selectInstance.panelOpen).toBe(false, 'Expected select to be closed.');\n          expect(formControl.value).toBeFalsy('Expected no initial value.');\n\n          const event = createKeyboardEvent('keydown', DOWN_ARROW);\n          Object.defineProperty(event, 'altKey', {get: () => true});\n\n          dispatchEvent(select, event);\n\n          expect(selectInstance.panelOpen).toBe(true, 'Expected select to be open.');\n          expect(formControl.value).toBeFalsy('Expected value not to have changed.');\n        }));\n\n        it('should open a single-selection select using ALT + UP_ARROW', fakeAsync(() => {\n          const {control: formControl, select: selectInstance} = fixture.componentInstance;\n\n          expect(selectInstance.panelOpen).toBe(false, 'Expected select to be closed.');\n          expect(formControl.value).toBeFalsy('Expected no initial value.');\n\n          const event = createKeyboardEvent('keydown', UP_ARROW);\n          Object.defineProperty(event, 'altKey', {get: () => true});\n\n          dispatchEvent(select, event);\n\n          expect(selectInstance.panelOpen).toBe(true, 'Expected select to be open.');\n          expect(formControl.value).toBeFalsy('Expected value not to have changed.');\n        }));\n\n        it('should close when pressing ALT + DOWN_ARROW', fakeAsync(() => {\n          const {select: selectInstance} = fixture.componentInstance;\n\n          selectInstance.open();\n          fixture.detectChanges();\n\n          expect(selectInstance.panelOpen).toBe(true, 'Expected select to be open.');\n\n          const event = createKeyboardEvent('keydown', DOWN_ARROW);\n          Object.defineProperty(event, 'altKey', {get: () => true});\n\n          dispatchEvent(select, event);\n\n          expect(selectInstance.panelOpen).toBe(false, 'Expected select to be closed.');\n          expect(event.defaultPrevented).toBe(true, 'Expected default action to be prevented.');\n        }));\n\n        it('should close when pressing ALT + UP_ARROW', fakeAsync(() => {\n          const {select: selectInstance} = fixture.componentInstance;\n\n          selectInstance.open();\n          fixture.detectChanges();\n\n          expect(selectInstance.panelOpen).toBe(true, 'Expected select to be open.');\n\n          const event = createKeyboardEvent('keydown', UP_ARROW);\n          Object.defineProperty(event, 'altKey', {get: () => true});\n\n          dispatchEvent(select, event);\n\n          expect(selectInstance.panelOpen).toBe(false, 'Expected select to be closed.');\n          expect(event.defaultPrevented).toBe(true, 'Expected default action to be prevented.');\n        }));\n\n        it('should be able to select options by typing on a closed select', fakeAsync(() => {\n          const formControl = fixture.componentInstance.control;\n          const options = fixture.componentInstance.options.toArray();\n\n          expect(formControl.value).toBeFalsy('Expected no initial value.');\n\n          dispatchEvent(select, createKeyboardEvent('keydown', 80, undefined, 'p'));\n          tick(200);\n\n          expect(options[1].selected).toBe(true, 'Expected second option to be selected.');\n          expect(formControl.value).toBe(options[1].value,\n            'Expected value from second option to have been set on the model.');\n\n          dispatchEvent(select, createKeyboardEvent('keydown', 69, undefined, 'e'));\n          tick(200);\n\n          expect(options[5].selected).toBe(true, 'Expected sixth option to be selected.');\n          expect(formControl.value).toBe(options[5].value,\n            'Expected value from sixth option to have been set on the model.');\n        }));\n\n        it('should open the panel when pressing a vertical arrow key on a closed multiple select',\n          fakeAsync(() => {\n            fixture.destroy();\n\n            const multiFixture = TestBed.createComponent(MultiSelect);\n            const instance = multiFixture.componentInstance;\n\n            multiFixture.detectChanges();\n            select = multiFixture.debugElement.query(By.css('mat-select')).nativeElement;\n\n            const initialValue = instance.control.value;\n\n            expect(instance.select.panelOpen).toBe(false, 'Expected panel to be closed.');\n\n            const event = dispatchKeyboardEvent(select, 'keydown', DOWN_ARROW);\n\n            expect(instance.select.panelOpen).toBe(true, 'Expected panel to be open.');\n            expect(instance.control.value).toBe(initialValue, 'Expected value to stay the same.');\n            expect(event.defaultPrevented).toBe(true, 'Expected default to be prevented.');\n          }));\n\n        it('should open the panel when pressing a horizontal arrow key on closed multiple select',\n          fakeAsync(() => {\n            fixture.destroy();\n\n            const multiFixture = TestBed.createComponent(MultiSelect);\n            const instance = multiFixture.componentInstance;\n\n            multiFixture.detectChanges();\n            select = multiFixture.debugElement.query(By.css('mat-select')).nativeElement;\n\n            const initialValue = instance.control.value;\n\n            expect(instance.select.panelOpen).toBe(false, 'Expected panel to be closed.');\n\n            const event = dispatchKeyboardEvent(select, 'keydown', RIGHT_ARROW);\n\n            expect(instance.select.panelOpen).toBe(true, 'Expected panel to be open.');\n            expect(instance.control.value).toBe(initialValue, 'Expected value to stay the same.');\n            expect(event.defaultPrevented).toBe(true, 'Expected default to be prevented.');\n          }));\n\n        it('should do nothing when typing on a closed multi-select', fakeAsync(() => {\n          fixture.destroy();\n\n          const multiFixture = TestBed.createComponent(MultiSelect);\n          const instance = multiFixture.componentInstance;\n\n          multiFixture.detectChanges();\n          select = multiFixture.debugElement.query(By.css('mat-select')).nativeElement;\n\n          const initialValue = instance.control.value;\n\n          expect(instance.select.panelOpen).toBe(false, 'Expected panel to be closed.');\n\n          dispatchEvent(select, createKeyboardEvent('keydown', 80, undefined, 'p'));\n\n          expect(instance.select.panelOpen).toBe(false, 'Expected panel to stay closed.');\n          expect(instance.control.value).toBe(initialValue, 'Expected value to stay the same.');\n        }));\n\n        it('should do nothing if the key manager did not change the active item', fakeAsync(() => {\n          const formControl = fixture.componentInstance.control;\n\n          expect(formControl.value).toBeNull('Expected form control value to be empty.');\n          expect(formControl.pristine).toBe(true, 'Expected form control to be clean.');\n\n          dispatchKeyboardEvent(select, 'keydown', 16); // Press a random key.\n\n          expect(formControl.value).toBeNull('Expected form control value to stay empty.');\n          expect(formControl.pristine).toBe(true, 'Expected form control to stay clean.');\n        }));\n\n        it('should continue from the selected option when the value is set programmatically',\n            fakeAsync(() => {\n              const formControl = fixture.componentInstance.control;\n\n              formControl.setValue('eggs-5');\n              fixture.detectChanges();\n\n              dispatchKeyboardEvent(select, 'keydown', DOWN_ARROW);\n\n              expect(formControl.value).toBe('pasta-6');\n              expect(fixture.componentInstance.options.toArray()[6].selected).toBe(true);\n              flush();\n            }));\n\n        it('should not shift focus when the selected options are updated programmatically ' +\n            'in a multi select', fakeAsync(() => {\n          fixture.destroy();\n\n          const multiFixture = TestBed.createComponent(MultiSelect);\n\n          multiFixture.detectChanges();\n          select = multiFixture.debugElement.query(By.css('mat-select')).nativeElement;\n          multiFixture.componentInstance.select.open();\n          multiFixture.detectChanges();\n\n          const options =\n              overlayContainerElement.querySelectorAll('mat-option') as NodeListOf<HTMLElement>;\n\n          options[3].focus();\n          expect(document.activeElement).toBe(options[3], 'Expected fourth option to be focused.');\n\n          multiFixture.componentInstance.control.setValue(['steak-0', 'sushi-7']);\n          multiFixture.detectChanges();\n\n          expect(document.activeElement)\n              .toBe(options[3], 'Expected fourth option to remain focused.');\n        }));\n\n        it('should not cycle through the options if the control is disabled', fakeAsync(() => {\n          const formControl = fixture.componentInstance.control;\n\n          formControl.setValue('eggs-5');\n          formControl.disable();\n\n          dispatchKeyboardEvent(select, 'keydown', DOWN_ARROW);\n\n          expect(formControl.value).toBe('eggs-5', 'Expected value to remain unchaged.');\n        }));\n\n        it('should not wrap selection after reaching the end of the options', fakeAsync(() => {\n          const lastOption = fixture.componentInstance.options.last;\n\n          fixture.componentInstance.options.forEach(() => {\n            dispatchKeyboardEvent(select, 'keydown', DOWN_ARROW);\n          });\n\n          expect(lastOption.selected).toBe(true, 'Expected last option to be selected.');\n\n          dispatchKeyboardEvent(select, 'keydown', DOWN_ARROW);\n\n          expect(lastOption.selected).toBe(true, 'Expected last option to stay selected.');\n\n          flush();\n        }));\n\n        it('should not open a multiple select when tabbing through', fakeAsync(() => {\n          fixture.destroy();\n\n          const multiFixture = TestBed.createComponent(MultiSelect);\n\n          multiFixture.detectChanges();\n          select = multiFixture.debugElement.query(By.css('mat-select')).nativeElement;\n\n          expect(multiFixture.componentInstance.select.panelOpen)\n              .toBe(false, 'Expected panel to be closed initially.');\n\n          dispatchKeyboardEvent(select, 'keydown', TAB);\n\n          expect(multiFixture.componentInstance.select.panelOpen)\n              .toBe(false, 'Expected panel to stay closed.');\n        }));\n\n        it('should toggle the next option when pressing shift + DOWN_ARROW on a multi-select',\n          fakeAsync(() => {\n            fixture.destroy();\n\n            const multiFixture = TestBed.createComponent(MultiSelect);\n            const event = createKeyboardEvent('keydown', DOWN_ARROW);\n            Object.defineProperty(event, 'shiftKey', {get: () => true});\n\n            multiFixture.detectChanges();\n            select = multiFixture.debugElement.query(By.css('mat-select')).nativeElement;\n\n            multiFixture.componentInstance.select.open();\n            multiFixture.detectChanges();\n            flush();\n\n            expect(multiFixture.componentInstance.select.value).toBeFalsy();\n\n            dispatchEvent(select, event);\n            multiFixture.detectChanges();\n\n            expect(multiFixture.componentInstance.select.value).toEqual(['pizza-1']);\n\n            dispatchEvent(select, event);\n            multiFixture.detectChanges();\n\n            expect(multiFixture.componentInstance.select.value).toEqual(['pizza-1', 'tacos-2']);\n          }));\n\n        it('should toggle the previous option when pressing shift + UP_ARROW on a multi-select',\n          fakeAsync(() => {\n            fixture.destroy();\n\n            const multiFixture = TestBed.createComponent(MultiSelect);\n            const event = createKeyboardEvent('keydown', UP_ARROW);\n            Object.defineProperty(event, 'shiftKey', {get: () => true});\n\n            multiFixture.detectChanges();\n            select = multiFixture.debugElement.query(By.css('mat-select')).nativeElement;\n\n            multiFixture.componentInstance.select.open();\n            multiFixture.detectChanges();\n            flush();\n\n            // Move focus down first.\n            for (let i = 0; i < 5; i++) {\n              dispatchKeyboardEvent(select, 'keydown', DOWN_ARROW);\n              multiFixture.detectChanges();\n            }\n\n            expect(multiFixture.componentInstance.select.value).toBeFalsy();\n\n            dispatchEvent(select, event);\n            multiFixture.detectChanges();\n\n            expect(multiFixture.componentInstance.select.value).toEqual(['chips-4']);\n\n            dispatchEvent(select, event);\n            multiFixture.detectChanges();\n\n            expect(multiFixture.componentInstance.select.value).toEqual(['sandwich-3', 'chips-4']);\n          }));\n\n        it('should prevent the default action when pressing space', fakeAsync(() => {\n          const event = dispatchKeyboardEvent(select, 'keydown', SPACE);\n          expect(event.defaultPrevented).toBe(true);\n        }));\n\n        it('should prevent the default action when pressing enter', fakeAsync(() => {\n          const event = dispatchKeyboardEvent(select, 'keydown', ENTER);\n          expect(event.defaultPrevented).toBe(true);\n        }));\n\n        it('should not prevent the default actions on selection keys when pressing a modifier',\n          fakeAsync(() => {\n            [ENTER, SPACE].forEach(key => {\n              const event = createKeyboardEvent('keydown', key);\n              Object.defineProperty(event, 'shiftKey', {get: () => true});\n              expect(event.defaultPrevented).toBe(false);\n            });\n\n          }));\n\n        it('should consider the selection a result of a user action when closed', fakeAsync(() => {\n          const option = fixture.componentInstance.options.first;\n          const spy = jasmine.createSpy('option selection spy');\n          const subscription =\n              option.onSelectionChange.pipe(map(e => e.isUserInput)).subscribe(spy);\n\n          dispatchKeyboardEvent(select, 'keydown', DOWN_ARROW);\n          expect(spy).toHaveBeenCalledWith(true);\n\n          subscription.unsubscribe();\n          flush();\n        }));\n\n        it('should be able to focus the select trigger', fakeAsync(() => {\n          document.body.focus(); // ensure that focus isn't on the trigger already\n\n          fixture.componentInstance.select.focus();\n\n          expect(document.activeElement).toBe(select, 'Expected select element to be focused.');\n        }));\n\n        // Having `aria-hidden` on the trigger avoids issues where\n        // screen readers read out the wrong amount of options.\n        it('should set aria-hidden on the trigger element', fakeAsync(() => {\n          const trigger = fixture.debugElement.query(By.css('.mat-select-trigger')).nativeElement;\n\n          expect(trigger.getAttribute('aria-hidden'))\n              .toBe('true', 'Expected aria-hidden to be true when the select is open.');\n        }));\n\n        it('should set `aria-multiselectable` to true on multi-select instances', fakeAsync(() => {\n          fixture.destroy();\n\n          const multiFixture = TestBed.createComponent(MultiSelect);\n\n          multiFixture.detectChanges();\n          select = multiFixture.debugElement.query(By.css('mat-select')).nativeElement;\n\n          expect(select.getAttribute('aria-multiselectable')).toBe('true');\n        }));\n\n        it('should set aria-multiselectable false on single-selection instances', fakeAsync(() => {\n          expect(select.getAttribute('aria-multiselectable')).toBe('false');\n        }));\n\n        it('should set aria-activedescendant only while the panel is open', fakeAsync(() => {\n          fixture.componentInstance.control.setValue('chips-4');\n          fixture.detectChanges();\n\n          const host = fixture.debugElement.query(By.css('mat-select')).nativeElement;\n\n          expect(host.hasAttribute('aria-activedescendant'))\n              .toBe(false, 'Expected no aria-activedescendant on init.');\n\n          fixture.componentInstance.select.open();\n          fixture.detectChanges();\n          flush();\n\n          const options = overlayContainerElement.querySelectorAll('mat-option');\n\n          expect(host.getAttribute('aria-activedescendant'))\n              .toBe(options[4].id, 'Expected aria-activedescendant to match the active option.');\n\n          fixture.componentInstance.select.close();\n          fixture.detectChanges();\n          flush();\n\n          expect(host.hasAttribute('aria-activedescendant'))\n              .toBe(false, 'Expected no aria-activedescendant when closed.');\n        }));\n\n        it('should set aria-activedescendant based on the focused option', fakeAsync(() => {\n          const host = fixture.debugElement.query(By.css('mat-select')).nativeElement;\n\n          fixture.componentInstance.select.open();\n          fixture.detectChanges();\n          flush();\n\n          const options = overlayContainerElement.querySelectorAll('mat-option');\n\n          expect(host.getAttribute('aria-activedescendant')).toBe(options[0].id);\n\n          [1, 2, 3].forEach(() => {\n            dispatchKeyboardEvent(host, 'keydown', DOWN_ARROW);\n            fixture.detectChanges();\n          });\n\n          expect(host.getAttribute('aria-activedescendant')).toBe(options[4].id);\n\n          dispatchKeyboardEvent(host, 'keydown', UP_ARROW);\n          fixture.detectChanges();\n\n          expect(host.getAttribute('aria-activedescendant')).toBe(options[3].id);\n        }));\n\n        it('should not change the aria-activedescendant using the horizontal arrow keys',\n          fakeAsync(() => {\n            const host = fixture.debugElement.query(By.css('mat-select')).nativeElement;\n\n            fixture.componentInstance.select.open();\n            fixture.detectChanges();\n            flush();\n\n            const options = overlayContainerElement.querySelectorAll('mat-option');\n\n            expect(host.getAttribute('aria-activedescendant')).toBe(options[0].id);\n\n            [1, 2, 3].forEach(() => {\n              dispatchKeyboardEvent(host, 'keydown', RIGHT_ARROW);\n              fixture.detectChanges();\n            });\n\n            expect(host.getAttribute('aria-activedescendant')).toBe(options[0].id);\n          }));\n\n        it('should restore focus to the trigger after selecting an option in multi-select mode',\n          fakeAsync(() => {\n            fixture.destroy();\n\n            const multiFixture = TestBed.createComponent(MultiSelect);\n            const instance = multiFixture.componentInstance;\n\n            multiFixture.detectChanges();\n            select = multiFixture.debugElement.query(By.css('mat-select')).nativeElement;\n            instance.select.open();\n            multiFixture.detectChanges();\n\n            // Ensure that the select isn't focused to begin with.\n            select.blur();\n            expect(document.activeElement).not.toBe(select, 'Expected trigger not to be focused.');\n\n            const option = overlayContainerElement.querySelector('mat-option')! as HTMLElement;\n            option.click();\n            multiFixture.detectChanges();\n\n            expect(document.activeElement).toBe(select, 'Expected trigger to be focused.');\n          }));\n\n      });\n\n      describe('for options', () => {\n        let fixture: ComponentFixture<BasicSelect>;\n        let trigger: HTMLElement;\n        let options: NodeListOf<HTMLElement>;\n\n        beforeEach(fakeAsync(() => {\n          fixture = TestBed.createComponent(BasicSelect);\n          fixture.detectChanges();\n          trigger = fixture.debugElement.query(By.css('.mat-select-trigger')).nativeElement;\n          trigger.click();\n          fixture.detectChanges();\n\n          options =\n              overlayContainerElement.querySelectorAll('mat-option') as NodeListOf<HTMLElement>;\n        }));\n\n        it('should set the role of mat-option to option', fakeAsync(() => {\n          expect(options[0].getAttribute('role')).toEqual('option');\n          expect(options[1].getAttribute('role')).toEqual('option');\n          expect(options[2].getAttribute('role')).toEqual('option');\n        }));\n\n        it('should set aria-selected on each option', fakeAsync(() => {\n          expect(options[0].getAttribute('aria-selected')).toEqual('false');\n          expect(options[1].getAttribute('aria-selected')).toEqual('false');\n          expect(options[2].getAttribute('aria-selected')).toEqual('false');\n\n          options[1].click();\n          fixture.detectChanges();\n\n          trigger.click();\n          fixture.detectChanges();\n          flush();\n\n          expect(options[0].getAttribute('aria-selected')).toEqual('false');\n          expect(options[1].getAttribute('aria-selected')).toEqual('true');\n          expect(options[2].getAttribute('aria-selected')).toEqual('false');\n        }));\n\n        it('should set the tabindex of each option according to disabled state', fakeAsync(() => {\n          expect(options[0].getAttribute('tabindex')).toEqual('0');\n          expect(options[1].getAttribute('tabindex')).toEqual('0');\n          expect(options[2].getAttribute('tabindex')).toEqual('-1');\n        }));\n\n        it('should set aria-disabled for disabled options', fakeAsync(() => {\n          expect(options[0].getAttribute('aria-disabled')).toEqual('false');\n          expect(options[1].getAttribute('aria-disabled')).toEqual('false');\n          expect(options[2].getAttribute('aria-disabled')).toEqual('true');\n\n          fixture.componentInstance.foods[2]['disabled'] = false;\n          fixture.detectChanges();\n\n          expect(options[0].getAttribute('aria-disabled')).toEqual('false');\n          expect(options[1].getAttribute('aria-disabled')).toEqual('false');\n          expect(options[2].getAttribute('aria-disabled')).toEqual('false');\n        }));\n      });\n\n      describe('for option groups', () => {\n        let fixture: ComponentFixture<SelectWithGroups>;\n        let trigger: HTMLElement;\n        let groups: NodeListOf<HTMLElement>;\n\n        beforeEach(fakeAsync(() => {\n          fixture = TestBed.createComponent(SelectWithGroups);\n          fixture.detectChanges();\n          trigger = fixture.debugElement.query(By.css('.mat-select-trigger')).nativeElement;\n          trigger.click();\n          fixture.detectChanges();\n          groups =\n              overlayContainerElement.querySelectorAll('mat-optgroup') as NodeListOf<HTMLElement>;\n        }));\n\n        it('should set the appropriate role', fakeAsync(() => {\n          expect(groups[0].getAttribute('role')).toBe('group');\n        }));\n\n        it('should set the `aria-labelledby` attribute', fakeAsync(() => {\n          let group = groups[0];\n          let label = group.querySelector('label')!;\n\n          expect(label.getAttribute('id')).toBeTruthy('Expected label to have an id.');\n          expect(group.getAttribute('aria-labelledby'))\n              .toBe(label.getAttribute('id'), 'Expected `aria-labelledby` to match the label id.');\n        }));\n\n        it('should set the `aria-disabled` attribute if the group is disabled', fakeAsync(() => {\n          expect(groups[1].getAttribute('aria-disabled')).toBe('true');\n        }));\n      });\n    });\n\n    describe('overlay panel', () => {\n      let fixture: ComponentFixture<BasicSelect>;\n      let trigger: HTMLElement;\n\n      beforeEach(fakeAsync(() => {\n        fixture = TestBed.createComponent(BasicSelect);\n        fixture.detectChanges();\n        trigger = fixture.debugElement.query(By.css('.mat-select-trigger')).nativeElement;\n      }));\n\n      it('should not throw when attempting to open too early', () => {\n        // Create component and then immediately open without running change detection\n        fixture = TestBed.createComponent(BasicSelect);\n        expect(() => fixture.componentInstance.select.open()).not.toThrow();\n      });\n\n      it('should open the panel when trigger is clicked', fakeAsync(() => {\n        trigger.click();\n        fixture.detectChanges();\n        flush();\n\n        expect(fixture.componentInstance.select.panelOpen).toBe(true);\n        expect(overlayContainerElement.textContent).toContain('Steak');\n        expect(overlayContainerElement.textContent).toContain('Pizza');\n        expect(overlayContainerElement.textContent).toContain('Tacos');\n      }));\n\n      it('should close the panel when an item is clicked', fakeAsync(() => {\n        trigger.click();\n        fixture.detectChanges();\n        flush();\n\n        const option = overlayContainerElement.querySelector('mat-option') as HTMLElement;\n        option.click();\n        fixture.detectChanges();\n        flush();\n\n        expect(overlayContainerElement.textContent).toEqual('');\n        expect(fixture.componentInstance.select.panelOpen).toBe(false);\n      }));\n\n      it('should close the panel when a click occurs outside the panel', fakeAsync(() => {\n        trigger.click();\n        fixture.detectChanges();\n        flush();\n\n        const backdrop =\n            overlayContainerElement.querySelector('.cdk-overlay-backdrop') as HTMLElement;\n\n        backdrop.click();\n        fixture.detectChanges();\n        flush();\n\n        expect(overlayContainerElement.textContent).toEqual('');\n        expect(fixture.componentInstance.select.panelOpen).toBe(false);\n      }));\n\n      it('should set the width of the overlay based on the trigger', fakeAsync(() => {\n        trigger.style.width = '200px';\n\n        trigger.click();\n        fixture.detectChanges();\n        flush();\n\n        const pane = overlayContainerElement.querySelector('.cdk-overlay-pane') as HTMLElement;\n        expect(pane.style.minWidth).toBe('200px');\n      }));\n\n      it('should not attempt to open a select that does not have any options', fakeAsync(() => {\n        fixture.componentInstance.foods = [];\n        fixture.detectChanges();\n\n        trigger.click();\n        fixture.detectChanges();\n\n        expect(fixture.componentInstance.select.panelOpen).toBe(false);\n      }));\n\n      it('should close the panel when tabbing out', fakeAsync(() => {\n        trigger.click();\n        fixture.detectChanges();\n        flush();\n\n        expect(fixture.componentInstance.select.panelOpen).toBe(true);\n\n        dispatchKeyboardEvent(trigger, 'keydown', TAB);\n        fixture.detectChanges();\n        flush();\n\n        expect(fixture.componentInstance.select.panelOpen).toBe(false);\n      }));\n\n      it('should restore focus to the host before tabbing away', fakeAsync(() => {\n        const select = fixture.nativeElement.querySelector('.mat-select');\n\n        trigger.click();\n        fixture.detectChanges();\n        flush();\n\n        expect(fixture.componentInstance.select.panelOpen).toBe(true);\n\n        // Use a spy since focus can be flaky in unit tests.\n        spyOn(select, 'focus').and.callThrough();\n\n        dispatchKeyboardEvent(trigger, 'keydown', TAB);\n        fixture.detectChanges();\n        flush();\n\n        expect(select.focus).toHaveBeenCalled();\n      }));\n\n      it('should close when tabbing out from inside the panel', fakeAsync(() => {\n        trigger.click();\n        fixture.detectChanges();\n        flush();\n\n        expect(fixture.componentInstance.select.panelOpen).toBe(true);\n\n        const panel = overlayContainerElement.querySelector('.mat-select-panel')!;\n        dispatchKeyboardEvent(panel, 'keydown', TAB);\n        fixture.detectChanges();\n        flush();\n\n        expect(fixture.componentInstance.select.panelOpen).toBe(false);\n      }));\n\n      it('should focus the first option when pressing HOME', fakeAsync(() => {\n        fixture.componentInstance.control.setValue('pizza-1');\n        fixture.detectChanges();\n\n        trigger.click();\n        fixture.detectChanges();\n        flush();\n\n        const event = dispatchKeyboardEvent(trigger, 'keydown', HOME);\n        fixture.detectChanges();\n\n        expect(fixture.componentInstance.select._keyManager.activeItemIndex).toBe(0);\n        expect(event.defaultPrevented).toBe(true);\n      }));\n\n      it('should focus the last option when pressing END', fakeAsync(() => {\n        fixture.componentInstance.control.setValue('pizza-1');\n        fixture.detectChanges();\n\n        trigger.click();\n        fixture.detectChanges();\n        flush();\n\n        const event = dispatchKeyboardEvent(trigger, 'keydown', END);\n        fixture.detectChanges();\n\n        expect(fixture.componentInstance.select._keyManager.activeItemIndex).toBe(7);\n        expect(event.defaultPrevented).toBe(true);\n      }));\n\n      it('should be able to set extra classes on the panel', fakeAsync(() => {\n        trigger.click();\n        fixture.detectChanges();\n\n        const panel = overlayContainerElement.querySelector('.mat-select-panel') as HTMLElement;\n\n        expect(panel.classList).toContain('custom-one');\n        expect(panel.classList).toContain('custom-two');\n      }));\n\n      it('should update disableRipple properly on each option', fakeAsync(() => {\n        const options = fixture.componentInstance.options.toArray();\n\n        expect(options.every(option => option.disableRipple === false))\n            .toBeTruthy('Expected all options to have disableRipple set to false initially.');\n\n        fixture.componentInstance.disableRipple = true;\n        fixture.detectChanges();\n\n        expect(options.every(option => option.disableRipple === true))\n            .toBeTruthy('Expected all options to have disableRipple set to true.');\n      }));\n\n      it('should not show ripples if they were disabled', fakeAsync(() => {\n        fixture.componentInstance.disableRipple = true;\n        fixture.detectChanges();\n\n        trigger.click();\n        fixture.detectChanges();\n        flush();\n\n        const option = overlayContainerElement.querySelector('mat-option')!;\n\n        dispatchFakeEvent(option, 'mousedown');\n        dispatchFakeEvent(option, 'mouseup');\n\n        expect(option.querySelectorAll('.mat-ripple-element').length).toBe(0);\n      }));\n\n      it('should be able to render options inside groups with an ng-container', fakeAsync(() => {\n        fixture.destroy();\n\n        const groupFixture = TestBed.createComponent(SelectWithGroupsAndNgContainer);\n        groupFixture.detectChanges();\n        trigger = groupFixture.debugElement.query(By.css('.mat-select-trigger')).nativeElement;\n        trigger.click();\n        groupFixture.detectChanges();\n\n        expect(document.querySelectorAll('.cdk-overlay-container mat-option').length)\n            .toBeGreaterThan(0, 'Expected at least one option to be rendered.');\n      }));\n\n      it('should not consider itself as blurred if the trigger loses focus while the ' +\n        'panel is still open', fakeAsync(() => {\n          const selectElement = fixture.nativeElement.querySelector('.mat-select');\n          const selectInstance = fixture.componentInstance.select;\n\n          dispatchFakeEvent(selectElement, 'focus');\n          fixture.detectChanges();\n\n          expect(selectInstance.focused).toBe(true, 'Expected select to be focused.');\n\n          selectInstance.open();\n          fixture.detectChanges();\n          flush();\n          dispatchFakeEvent(selectElement, 'blur');\n          fixture.detectChanges();\n\n          expect(selectInstance.focused).toBe(true, 'Expected select element to remain focused.');\n        }));\n\n    });\n\n    describe('selection logic', () => {\n      let fixture: ComponentFixture<BasicSelect>;\n      let trigger: HTMLElement;\n      let formField: HTMLElement;\n\n      beforeEach(fakeAsync(() => {\n        fixture = TestBed.createComponent(BasicSelect);\n        fixture.detectChanges();\n        trigger = fixture.debugElement.query(By.css('.mat-select-trigger')).nativeElement;\n        formField = fixture.debugElement.query(By.css('.mat-form-field')).nativeElement;\n      }));\n\n      it('should not float label if no option is selected', fakeAsync(() => {\n        expect(formField.classList.contains('mat-form-field-should-float'))\n            .toBe(false, 'Label should not be floating');\n      }));\n\n      it('should focus the first option if no option is selected', fakeAsync(() => {\n        trigger.click();\n        fixture.detectChanges();\n        flush();\n\n        expect(fixture.componentInstance.select._keyManager.activeItemIndex).toEqual(0);\n      }));\n\n      it('should select an option when it is clicked', fakeAsync(() => {\n        trigger.click();\n        fixture.detectChanges();\n        flush();\n\n        let option = overlayContainerElement.querySelector('mat-option') as HTMLElement;\n        option.click();\n        fixture.detectChanges();\n        flush();\n\n        trigger.click();\n        fixture.detectChanges();\n        flush();\n\n        option = overlayContainerElement.querySelector('mat-option') as HTMLElement;\n\n        expect(option.classList).toContain('mat-selected');\n        expect(fixture.componentInstance.options.first.selected).toBe(true);\n        expect(fixture.componentInstance.select.selected)\n            .toBe(fixture.componentInstance.options.first);\n      }));\n\n      it('should be able to select an option using the MatOption API', fakeAsync(() => {\n        trigger.click();\n        fixture.detectChanges();\n        flush();\n\n        const optionInstances = fixture.componentInstance.options.toArray();\n        const optionNodes: NodeListOf<HTMLElement> =\n            overlayContainerElement.querySelectorAll('mat-option');\n\n        optionInstances[1].select();\n        fixture.detectChanges();\n\n        expect(optionNodes[1].classList).toContain('mat-selected');\n        expect(optionInstances[1].selected).toBe(true);\n        expect(fixture.componentInstance.select.selected).toBe(optionInstances[1]);\n      }));\n\n      it('should deselect other options when one is selected', fakeAsync(() => {\n        trigger.click();\n        fixture.detectChanges();\n        flush();\n\n        let options =\n            overlayContainerElement.querySelectorAll('mat-option') as NodeListOf<HTMLElement>;\n\n        options[0].click();\n        fixture.detectChanges();\n        flush();\n\n        trigger.click();\n        fixture.detectChanges();\n        flush();\n\n        options =\n            overlayContainerElement.querySelectorAll('mat-option') as NodeListOf<HTMLElement>;\n        expect(options[1].classList).not.toContain('mat-selected');\n        expect(options[2].classList).not.toContain('mat-selected');\n\n        const optionInstances = fixture.componentInstance.options.toArray();\n        expect(optionInstances[1].selected).toBe(false);\n        expect(optionInstances[2].selected).toBe(false);\n      }));\n\n      it('should deselect other options when one is programmatically selected', fakeAsync(() => {\n        let control = fixture.componentInstance.control;\n        let foods = fixture.componentInstance.foods;\n\n        trigger.click();\n        fixture.detectChanges();\n        flush();\n\n        let options =\n            overlayContainerElement.querySelectorAll('mat-option') as NodeListOf<HTMLElement>;\n\n        options[0].click();\n        fixture.detectChanges();\n        flush();\n\n        control.setValue(foods[1].value);\n        fixture.detectChanges();\n\n        trigger.click();\n        fixture.detectChanges();\n        flush();\n\n        options = overlayContainerElement.querySelectorAll('mat-option') as NodeListOf<HTMLElement>;\n\n        expect(options[0].classList)\n            .not.toContain('mat-selected', 'Expected first option to no longer be selected');\n        expect(options[1].classList)\n            .toContain('mat-selected', 'Expected second option to be selected');\n\n        const optionInstances = fixture.componentInstance.options.toArray();\n\n        expect(optionInstances[0].selected)\n            .toBe(false, 'Expected first option to no longer be selected');\n        expect(optionInstances[1].selected)\n            .toBe(true, 'Expected second option to be selected');\n      }));\n\n      it('should remove selection if option has been removed', fakeAsync(() => {\n        let select = fixture.componentInstance.select;\n\n        trigger.click();\n        fixture.detectChanges();\n        flush();\n\n        let firstOption = overlayContainerElement.querySelectorAll('mat-option')[0] as HTMLElement;\n\n        firstOption.click();\n        fixture.detectChanges();\n\n        expect(select.selected).toBe(select.options.first, 'Expected first option to be selected.');\n\n        fixture.componentInstance.foods = [];\n        fixture.detectChanges();\n        flush();\n\n        expect(select.selected)\n            .toBeUndefined('Expected selection to be removed when option no longer exists.');\n      }));\n\n      it('should display the selected option in the trigger', fakeAsync(() => {\n        trigger.click();\n        fixture.detectChanges();\n        flush();\n\n        const option = overlayContainerElement.querySelector('mat-option') as HTMLElement;\n        option.click();\n        fixture.detectChanges();\n        flush();\n\n        const value = fixture.debugElement.query(By.css('.mat-select-value')).nativeElement;\n\n        expect(formField.classList.contains('mat-form-field-should-float'))\n            .toBe(true, 'Label should be floating');\n        expect(value.textContent).toContain('Steak');\n      }));\n\n      it('should focus the selected option if an option is selected', fakeAsync(() => {\n        // must wait for initial writeValue promise to finish\n        flush();\n\n        fixture.componentInstance.control.setValue('pizza-1');\n        fixture.detectChanges();\n\n        trigger.click();\n        fixture.detectChanges();\n        flush();\n\n        // must wait for animation to finish\n        fixture.detectChanges();\n        expect(fixture.componentInstance.select._keyManager.activeItemIndex).toEqual(1);\n      }));\n\n      it('should select an option that was added after initialization', fakeAsync(() => {\n        fixture.componentInstance.foods.push({viewValue: 'Potatoes', value: 'potatoes-8'});\n        trigger.click();\n        fixture.detectChanges();\n        flush();\n\n        const options =\n            overlayContainerElement.querySelectorAll('mat-option') as NodeListOf<HTMLElement>;\n        options[8].click();\n        fixture.detectChanges();\n        flush();\n\n        expect(trigger.textContent).toContain('Potatoes');\n        expect(fixture.componentInstance.select.selected)\n            .toBe(fixture.componentInstance.options.last);\n      }));\n\n      it('should update the trigger when the selected option label is changed', fakeAsync(() => {\n        fixture.componentInstance.control.setValue('pizza-1');\n        fixture.detectChanges();\n\n        expect(trigger.textContent!.trim()).toBe('Pizza');\n\n        fixture.componentInstance.foods[1].viewValue = 'Calzone';\n        fixture.detectChanges();\n\n        expect(trigger.textContent!.trim()).toBe('Calzone');\n      }));\n\n      it('should not select disabled options', fakeAsync(() => {\n        trigger.click();\n        fixture.detectChanges();\n\n        const options =\n            overlayContainerElement.querySelectorAll('mat-option') as NodeListOf<HTMLElement>;\n        options[2].click();\n        fixture.detectChanges();\n\n        expect(fixture.componentInstance.select.panelOpen).toBe(true);\n        expect(options[2].classList).not.toContain('mat-selected');\n        expect(fixture.componentInstance.select.selected).toBeUndefined();\n      }));\n\n      it('should not select options inside a disabled group', fakeAsync(() => {\n        fixture.destroy();\n\n        const groupFixture = TestBed.createComponent(SelectWithGroups);\n        groupFixture.detectChanges();\n        groupFixture.debugElement.query(By.css('.mat-select-trigger')).nativeElement.click();\n        groupFixture.detectChanges();\n\n        const disabledGroup = overlayContainerElement.querySelectorAll('mat-optgroup')[1];\n        const options = disabledGroup.querySelectorAll('mat-option');\n\n        (options[0] as HTMLElement).click();\n        groupFixture.detectChanges();\n\n        expect(groupFixture.componentInstance.select.panelOpen).toBe(true);\n        expect(options[0].classList).not.toContain('mat-selected');\n        expect(groupFixture.componentInstance.select.selected).toBeUndefined();\n      }));\n\n      it('should not throw if triggerValue accessed with no selected value', fakeAsync(() => {\n        expect(() => fixture.componentInstance.select.triggerValue).not.toThrow();\n      }));\n\n      it('should emit to `optionSelectionChanges` when an option is selected', fakeAsync(() => {\n        trigger.click();\n        fixture.detectChanges();\n        flush();\n\n        const spy = jasmine.createSpy('option selection spy');\n        const subscription = fixture.componentInstance.select.optionSelectionChanges.subscribe(spy);\n        const option = overlayContainerElement.querySelector('mat-option') as HTMLElement;\n        option.click();\n        fixture.detectChanges();\n        flush();\n\n        expect(spy).toHaveBeenCalledWith(jasmine.any(MatOptionSelectionChange));\n\n        subscription.unsubscribe();\n      }));\n\n      it('should handle accessing `optionSelectionChanges` before the options are initialized',\n        fakeAsync(() => {\n          fixture.destroy();\n          fixture = TestBed.createComponent(BasicSelect);\n\n          let spy = jasmine.createSpy('option selection spy');\n          let subscription: Subscription;\n\n          expect(fixture.componentInstance.select.options).toBeFalsy();\n          expect(() => {\n            subscription = fixture.componentInstance.select.optionSelectionChanges.subscribe(spy);\n          }).not.toThrow();\n\n          fixture.detectChanges();\n          trigger = fixture.debugElement.query(By.css('.mat-select-trigger')).nativeElement;\n\n          trigger.click();\n          fixture.detectChanges();\n          flush();\n\n          const option = overlayContainerElement.querySelector('mat-option') as HTMLElement;\n          option.click();\n          fixture.detectChanges();\n          flush();\n\n          expect(spy).toHaveBeenCalledWith(jasmine.any(MatOptionSelectionChange));\n\n          subscription!.unsubscribe();\n        }));\n\n    });\n\n    describe('forms integration', () => {\n      let fixture: ComponentFixture<BasicSelect>;\n      let trigger: HTMLElement;\n\n      beforeEach(fakeAsync(() => {\n        fixture = TestBed.createComponent(BasicSelect);\n        fixture.detectChanges();\n        trigger = fixture.debugElement.query(By.css('.mat-select-trigger')).nativeElement;\n      }));\n\n      it('should take an initial view value with reactive forms', fakeAsync(() => {\n        fixture.componentInstance.control = new FormControl('pizza-1');\n        fixture.detectChanges();\n\n        const value = fixture.debugElement.query(By.css('.mat-select-value'));\n        expect(value.nativeElement.textContent)\n            .toContain('Pizza', `Expected trigger to be populated by the control's initial value.`);\n\n        trigger = fixture.debugElement.query(By.css('.mat-select-trigger')).nativeElement;\n        trigger.click();\n        fixture.detectChanges();\n        flush();\n\n        const options =\n            overlayContainerElement.querySelectorAll('mat-option') as NodeListOf<HTMLElement>;\n        expect(options[1].classList)\n            .toContain('mat-selected',\n                `Expected option with the control's initial value to be selected.`);\n      }));\n\n      it('should set the view value from the form', fakeAsync(() => {\n        let value = fixture.debugElement.query(By.css('.mat-select-value'));\n        expect(value.nativeElement.textContent.trim()).toBe('Food');\n\n        fixture.componentInstance.control.setValue('pizza-1');\n        fixture.detectChanges();\n\n        value = fixture.debugElement.query(By.css('.mat-select-value'));\n        expect(value.nativeElement.textContent)\n            .toContain('Pizza', `Expected trigger to be populated by the control's new value.`);\n\n        trigger.click();\n        fixture.detectChanges();\n        flush();\n\n        const options =\n            overlayContainerElement.querySelectorAll('mat-option') as NodeListOf<HTMLElement>;\n        expect(options[1].classList).toContain(\n            'mat-selected', `Expected option with the control's new value to be selected.`);\n      }));\n\n      it('should update the form value when the view changes', fakeAsync(() => {\n        expect(fixture.componentInstance.control.value)\n            .toEqual(null, `Expected the control's value to be empty initially.`);\n\n        trigger.click();\n        fixture.detectChanges();\n        flush();\n\n        const option = overlayContainerElement.querySelector('mat-option') as HTMLElement;\n        option.click();\n        fixture.detectChanges();\n        flush();\n\n        expect(fixture.componentInstance.control.value)\n            .toEqual('steak-0', `Expected control's value to be set to the new option.`);\n      }));\n\n      it('should clear the selection when a nonexistent option value is selected', fakeAsync(() => {\n        fixture.componentInstance.control.setValue('pizza-1');\n        fixture.detectChanges();\n\n        fixture.componentInstance.control.setValue('gibberish');\n        fixture.detectChanges();\n\n        const value = fixture.debugElement.query(By.css('.mat-select-value'));\n        expect(value.nativeElement.textContent.trim())\n            .toBe('Food', `Expected trigger to show the placeholder.`);\n        expect(trigger.textContent)\n            .not.toContain('Pizza', `Expected trigger is cleared when option value is not found.`);\n\n        trigger.click();\n        fixture.detectChanges();\n        flush();\n\n        const options =\n            overlayContainerElement.querySelectorAll('mat-option') as NodeListOf<HTMLElement>;\n        expect(options[1].classList)\n            .not.toContain('mat-selected', `Expected option w/ the old value not to be selected.`);\n      }));\n\n\n      it('should clear the selection when the control is reset', fakeAsync(() => {\n        fixture.componentInstance.control.setValue('pizza-1');\n        fixture.detectChanges();\n\n        fixture.componentInstance.control.reset();\n        fixture.detectChanges();\n\n        const value = fixture.debugElement.query(By.css('.mat-select-value'));\n        expect(value.nativeElement.textContent.trim())\n            .toBe('Food', `Expected trigger to show the placeholder.`);\n        expect(trigger.textContent)\n            .not.toContain('Pizza', `Expected trigger is cleared when option value is not found.`);\n\n        trigger.click();\n        fixture.detectChanges();\n        flush();\n\n        const options =\n            overlayContainerElement.querySelectorAll('mat-option') as NodeListOf<HTMLElement>;\n        expect(options[1].classList)\n            .not.toContain('mat-selected', `Expected option w/ the old value not to be selected.`);\n      }));\n\n      it('should set the control to touched when the select is blurred', fakeAsync(() => {\n        expect(fixture.componentInstance.control.touched)\n            .toEqual(false, `Expected the control to start off as untouched.`);\n\n        trigger.click();\n        dispatchFakeEvent(trigger, 'blur');\n        fixture.detectChanges();\n        flush();\n\n        expect(fixture.componentInstance.control.touched)\n            .toEqual(false, `Expected the control to stay untouched when menu opened.`);\n\n        const backdrop =\n            overlayContainerElement.querySelector('.cdk-overlay-backdrop') as HTMLElement;\n        backdrop.click();\n        dispatchFakeEvent(trigger, 'blur');\n        fixture.detectChanges();\n        flush();\n\n        expect(fixture.componentInstance.control.touched)\n            .toEqual(true, `Expected the control to be touched as soon as focus left the select.`);\n      }));\n\n      it('should set the control to touched when the panel is closed', fakeAsync(() => {\n        expect(fixture.componentInstance.control.touched)\n            .toBe(false, 'Expected the control to start off as untouched.');\n\n        trigger.click();\n        dispatchFakeEvent(trigger, 'blur');\n        fixture.detectChanges();\n        flush();\n\n        expect(fixture.componentInstance.control.touched)\n            .toBe(false, 'Expected the control to stay untouched when menu opened.');\n\n        fixture.componentInstance.select.close();\n        fixture.detectChanges();\n        flush();\n\n        expect(fixture.componentInstance.control.touched)\n            .toBe(true, 'Expected the control to be touched when the panel was closed.');\n      }));\n\n      it('should not set touched when a disabled select is touched', fakeAsync(() => {\n        expect(fixture.componentInstance.control.touched)\n            .toBe(false, 'Expected the control to start off as untouched.');\n\n        fixture.componentInstance.control.disable();\n        dispatchFakeEvent(trigger, 'blur');\n\n        expect(fixture.componentInstance.control.touched)\n            .toBe(false, 'Expected the control to stay untouched.');\n      }));\n\n      it('should set the control to dirty when the select value changes in DOM', fakeAsync(() => {\n        expect(fixture.componentInstance.control.dirty)\n            .toEqual(false, `Expected control to start out pristine.`);\n\n        trigger.click();\n        fixture.detectChanges();\n        flush();\n\n        const option = overlayContainerElement.querySelector('mat-option') as HTMLElement;\n        option.click();\n        fixture.detectChanges();\n        flush();\n\n        expect(fixture.componentInstance.control.dirty)\n            .toEqual(true, `Expected control to be dirty after value was changed by user.`);\n      }));\n\n      it('should not set the control to dirty when the value changes programmatically',\n          fakeAsync(() => {\n            expect(fixture.componentInstance.control.dirty)\n                .toEqual(false, `Expected control to start out pristine.`);\n\n            fixture.componentInstance.control.setValue('pizza-1');\n\n            expect(fixture.componentInstance.control.dirty)\n                .toEqual(false, `Expected control to stay pristine after programmatic change.`);\n          }));\n\n      it('should set an asterisk after the label if control is required', fakeAsync(() => {\n        let requiredMarker = fixture.debugElement.query(By.css('.mat-form-field-required-marker'));\n        expect(requiredMarker)\n            .toBeNull(`Expected label not to have an asterisk, as control was not required.`);\n\n        fixture.componentInstance.isRequired = true;\n        fixture.detectChanges();\n\n        requiredMarker = fixture.debugElement.query(By.css('.mat-form-field-required-marker'));\n        expect(requiredMarker)\n            .not.toBeNull(`Expected label to have an asterisk, as control was required.`);\n      }));\n    });\n\n    describe('disabled behavior', () => {\n      it('should disable itself when control is disabled programmatically', fakeAsync(() => {\n        const fixture = TestBed.createComponent(BasicSelect);\n        fixture.detectChanges();\n\n        fixture.componentInstance.control.disable();\n        fixture.detectChanges();\n        let trigger =\n            fixture.debugElement.query(By.css('.mat-select-trigger')).nativeElement;\n        expect(getComputedStyle(trigger).getPropertyValue('cursor'))\n            .toEqual('default', `Expected cursor to be default arrow on disabled control.`);\n\n        trigger.click();\n        fixture.detectChanges();\n\n        expect(overlayContainerElement.textContent)\n            .toEqual('', `Expected select panel to stay closed.`);\n        expect(fixture.componentInstance.select.panelOpen)\n            .toBe(false, `Expected select panelOpen property to stay false.`);\n\n        fixture.componentInstance.control.enable();\n        fixture.detectChanges();\n        expect(getComputedStyle(trigger).getPropertyValue('cursor'))\n            .toEqual('pointer', `Expected cursor to be a pointer on enabled control.`);\n\n        trigger.click();\n        fixture.detectChanges();\n\n        expect(overlayContainerElement.textContent)\n            .toContain('Steak', `Expected select panel to open normally on re-enabled control`);\n        expect(fixture.componentInstance.select.panelOpen)\n            .toBe(true, `Expected select panelOpen property to become true.`);\n      }));\n    });\n\n    describe('animations', () => {\n      let fixture: ComponentFixture<BasicSelect>;\n      let formField: HTMLElement;\n\n      beforeEach(fakeAsync(() => {\n        fixture = TestBed.createComponent(BasicSelect);\n        fixture.detectChanges();\n        formField = fixture.debugElement.query(By.css('.mat-form-field')).nativeElement;\n      }));\n\n      it('should float the label when the panel is open and unselected', fakeAsync(() => {\n        expect(formField.classList.contains('mat-form-field-should-float'))\n            .toBe(false, 'Expected label to initially have a normal position.');\n\n        fixture.componentInstance.select.open();\n        fixture.detectChanges();\n        flush();\n\n        expect(formField.classList).toContain('mat-form-field-should-float',\n            'Expected label to animate up to floating position.');\n\n        fixture.componentInstance.select.close();\n        fixture.detectChanges();\n        flush();\n\n        expect(formField.classList).not.toContain('mat-form-field-should-float',\n            'Expected placeholder to animate back down to normal position.');\n      }));\n\n    });\n\n    describe('keyboard scrolling', () => {\n      let fixture: ComponentFixture<BasicSelect>;\n      let host: HTMLElement;\n      let panel: HTMLElement;\n\n      beforeEach(fakeAsync(() => {\n        fixture = TestBed.createComponent(BasicSelect);\n\n        fixture.componentInstance.foods = [];\n\n        for (let i = 0; i < 30; i++) {\n          fixture.componentInstance.foods.push({value: `value-${i}`, viewValue: `Option ${i}`});\n        }\n\n        fixture.detectChanges();\n        fixture.componentInstance.select.open();\n        fixture.detectChanges();\n        flush();\n\n        host = fixture.debugElement.query(By.css('mat-select')).nativeElement;\n        panel = overlayContainerElement.querySelector('.mat-select-panel')! as HTMLElement;\n      }));\n\n      it('should not scroll to options that are completely in the view', fakeAsync(() => {\n        const initialScrollPosition = panel.scrollTop;\n\n        [1, 2, 3].forEach(() => {\n          dispatchKeyboardEvent(host, 'keydown', DOWN_ARROW);\n        });\n\n        expect(panel.scrollTop)\n            .toBe(initialScrollPosition, 'Expected scroll position not to change');\n      }));\n\n      it('should scroll down to the active option', fakeAsync(() => {\n        for (let i = 0; i < 15; i++) {\n          dispatchKeyboardEvent(host, 'keydown', DOWN_ARROW);\n        }\n\n        // <option index * height> - <panel height> = 16 * 48 - 256 = 512\n        expect(panel.scrollTop).toBe(512, 'Expected scroll to be at the 16th option.');\n      }));\n\n      it('should scroll up to the active option', fakeAsync(() => {\n        // Scroll to the bottom.\n        for (let i = 0; i < fixture.componentInstance.foods.length; i++) {\n          dispatchKeyboardEvent(host, 'keydown', DOWN_ARROW);\n        }\n\n        for (let i = 0; i < 20; i++) {\n          dispatchKeyboardEvent(host, 'keydown', UP_ARROW);\n        }\n\n        // <option index * height> = 9 * 48 = 432\n        expect(panel.scrollTop).toBe(432, 'Expected scroll to be at the 9th option.');\n      }));\n\n      it('should skip option group labels', fakeAsync(() => {\n        fixture.destroy();\n\n        const groupFixture = TestBed.createComponent(SelectWithGroups);\n\n        groupFixture.detectChanges();\n        groupFixture.componentInstance.select.open();\n        groupFixture.detectChanges();\n        flush();\n\n        host = groupFixture.debugElement.query(By.css('mat-select')).nativeElement;\n        panel = overlayContainerElement.querySelector('.mat-select-panel')! as HTMLElement;\n\n        for (let i = 0; i < 5; i++) {\n          dispatchKeyboardEvent(host, 'keydown', DOWN_ARROW);\n        }\n\n        // Note that we press down 5 times, but it will skip\n        // 3 options because the second group is disabled.\n        // <(option index + group labels) * height> - <panel height> = (9 + 3) * 48 - 256 = 320\n        expect(panel.scrollTop).toBe(320, 'Expected scroll to be at the 9th option.');\n      }));\n\n      it('should scroll top the top when pressing HOME', fakeAsync(() => {\n        for (let i = 0; i < 20; i++) {\n          dispatchKeyboardEvent(host, 'keydown', DOWN_ARROW);\n          fixture.detectChanges();\n        }\n\n        expect(panel.scrollTop).toBeGreaterThan(0, 'Expected panel to be scrolled down.');\n\n        dispatchKeyboardEvent(host, 'keydown', HOME);\n        fixture.detectChanges();\n\n        expect(panel.scrollTop).toBe(0, 'Expected panel to be scrolled to the top');\n      }));\n\n      it('should scroll to the bottom of the panel when pressing END', fakeAsync(() => {\n        dispatchKeyboardEvent(host, 'keydown', END);\n        fixture.detectChanges();\n\n        // <option amount> * <option height> - <panel height> = 30 * 48 - 256 = 1184\n        expect(panel.scrollTop).toBe(1184, 'Expected panel to be scrolled to the bottom');\n      }));\n\n      it('should scroll to the active option when typing', fakeAsync(() => {\n        for (let i = 0; i < 15; i++) {\n          // Press the letter 'o' 15 times since all the options are named 'Option <index>'\n          dispatchEvent(host, createKeyboardEvent('keydown', 79, undefined, 'o'));\n          fixture.detectChanges();\n          tick(LETTER_KEY_DEBOUNCE_INTERVAL);\n        }\n        flush();\n\n        // <option index * height> - <panel height> = 16 * 48 - 256 = 512\n        expect(panel.scrollTop).toBe(512, 'Expected scroll to be at the 16th option.');\n      }));\n\n    });\n  });\n\n  describe('when initialized without options', () => {\n    beforeEach(async(() => configureMatSelectTestingModule([SelectInitWithoutOptions])));\n\n    it('should select the proper option when option list is initialized later', fakeAsync(() => {\n      const fixture = TestBed.createComponent(SelectInitWithoutOptions);\n      const instance = fixture.componentInstance;\n\n      fixture.detectChanges();\n      flush();\n\n      // Wait for the initial writeValue promise.\n      expect(instance.select.selected).toBeFalsy();\n\n      instance.addOptions();\n      fixture.detectChanges();\n      flush();\n\n      // Wait for the next writeValue promise.\n      expect(instance.select.selected).toBe(instance.options.toArray()[1]);\n    }));\n  });\n\n  describe('with a selectionChange event handler', () => {\n    beforeEach(async(() => configureMatSelectTestingModule([SelectWithChangeEvent])));\n\n    let fixture: ComponentFixture<SelectWithChangeEvent>;\n    let trigger: HTMLElement;\n\n    beforeEach(fakeAsync(() => {\n      fixture = TestBed.createComponent(SelectWithChangeEvent);\n      fixture.detectChanges();\n\n      trigger = fixture.debugElement.query(By.css('.mat-select-trigger')).nativeElement;\n    }));\n\n    it('should emit an event when the selected option has changed', fakeAsync(() => {\n      trigger.click();\n      fixture.detectChanges();\n\n      (overlayContainerElement.querySelector('mat-option') as HTMLElement).click();\n\n      expect(fixture.componentInstance.changeListener).toHaveBeenCalled();\n    }));\n\n    it('should not emit multiple change events for the same option', fakeAsync(() => {\n      trigger.click();\n      fixture.detectChanges();\n\n      const option = overlayContainerElement.querySelector('mat-option') as HTMLElement;\n\n      option.click();\n      option.click();\n\n      expect(fixture.componentInstance.changeListener).toHaveBeenCalledTimes(1);\n    }));\n\n    it('should only emit one event when pressing arrow keys on closed select', fakeAsync(() => {\n      const select = fixture.debugElement.query(By.css('mat-select')).nativeElement;\n      dispatchKeyboardEvent(select, 'keydown', DOWN_ARROW);\n\n      expect(fixture.componentInstance.changeListener).toHaveBeenCalledTimes(1);\n\n      flush();\n    }));\n  });\n\n  describe('with ngModel', () => {\n    beforeEach(async(() => configureMatSelectTestingModule([NgModelSelect])));\n\n    it('should disable itself when control is disabled using the property', fakeAsync(() => {\n      const fixture = TestBed.createComponent(NgModelSelect);\n      fixture.detectChanges();\n\n      fixture.componentInstance.isDisabled = true;\n      fixture.detectChanges();\n      flush();\n\n      fixture.detectChanges();\n      const trigger =\n          fixture.debugElement.query(By.css('.mat-select-trigger')).nativeElement;\n      expect(getComputedStyle(trigger).getPropertyValue('cursor'))\n          .toEqual('default', `Expected cursor to be default arrow on disabled control.`);\n\n      trigger.click();\n      fixture.detectChanges();\n\n      expect(overlayContainerElement.textContent)\n          .toEqual('', `Expected select panel to stay closed.`);\n      expect(fixture.componentInstance.select.panelOpen)\n          .toBe(false, `Expected select panelOpen property to stay false.`);\n\n      fixture.componentInstance.isDisabled = false;\n      fixture.detectChanges();\n      flush();\n\n      fixture.detectChanges();\n      expect(getComputedStyle(trigger).getPropertyValue('cursor'))\n          .toEqual('pointer', `Expected cursor to be a pointer on enabled control.`);\n\n      trigger.click();\n      fixture.detectChanges();\n\n      expect(overlayContainerElement.textContent)\n          .toContain('Steak', `Expected select panel to open normally on re-enabled control`);\n      expect(fixture.componentInstance.select.panelOpen)\n          .toBe(true, `Expected select panelOpen property to become true.`);\n    }));\n  });\n\n  describe('with ngIf', () => {\n    beforeEach(async(() => configureMatSelectTestingModule([NgIfSelect])));\n\n    it('should handle nesting in an ngIf', fakeAsync(() => {\n      const fixture = TestBed.createComponent(NgIfSelect);\n      fixture.detectChanges();\n\n      fixture.componentInstance.isShowing = true;\n      fixture.detectChanges();\n\n      const trigger = fixture.debugElement.query(By.css('.mat-select-trigger')).nativeElement;\n      trigger.style.width = '300px';\n\n      trigger.click();\n      fixture.detectChanges();\n      flush();\n\n      const value = fixture.debugElement.query(By.css('.mat-select-value'));\n      expect(value.nativeElement.textContent)\n          .toContain('Pizza', `Expected trigger to be populated by the control's initial value.`);\n\n      const pane = overlayContainerElement.querySelector('.cdk-overlay-pane') as HTMLElement;\n      expect(pane.style.minWidth).toEqual('300px');\n\n      expect(fixture.componentInstance.select.panelOpen).toBe(true);\n      expect(overlayContainerElement.textContent).toContain('Steak');\n      expect(overlayContainerElement.textContent).toContain('Pizza');\n      expect(overlayContainerElement.textContent).toContain('Tacos');\n    }));\n  });\n\n  describe('with multiple mat-select elements in one view', () => {\n    beforeEach(async(() => configureMatSelectTestingModule([ManySelects])));\n\n      let fixture: ComponentFixture<ManySelects>;\n      let triggers: DebugElement[];\n      let options: NodeListOf<HTMLElement>;\n\n      beforeEach(fakeAsync(() => {\n        fixture = TestBed.createComponent(ManySelects);\n        fixture.detectChanges();\n        triggers = fixture.debugElement.queryAll(By.css('.mat-select-trigger'));\n\n        triggers[0].nativeElement.click();\n        fixture.detectChanges();\n        flush();\n\n        options = overlayContainerElement.querySelectorAll('mat-option') as NodeListOf<HTMLElement>;\n      }));\n\n      it('should set aria-owns properly', fakeAsync(() => {\n        const selects = fixture.debugElement.queryAll(By.css('mat-select'));\n\n        expect(selects[0].nativeElement.getAttribute('aria-owns'))\n            .toContain(options[0].id, `Expected aria-owns to contain IDs of its child options.`);\n        expect(selects[0].nativeElement.getAttribute('aria-owns'))\n            .toContain(options[1].id, `Expected aria-owns to contain IDs of its child options.`);\n\n        const backdrop =\n            overlayContainerElement.querySelector('.cdk-overlay-backdrop') as HTMLElement;\n        backdrop.click();\n        fixture.detectChanges();\n        flush();\n\n        triggers[1].nativeElement.click();\n        fixture.detectChanges();\n        flush();\n\n        options =\n            overlayContainerElement.querySelectorAll('mat-option') as NodeListOf<HTMLElement>;\n        expect(selects[1].nativeElement.getAttribute('aria-owns'))\n            .toContain(options[0].id, `Expected aria-owns to contain IDs of its child options.`);\n        expect(selects[1].nativeElement.getAttribute('aria-owns'))\n            .toContain(options[1].id, `Expected aria-owns to contain IDs of its child options.`);\n      }));\n\n      it('should remove aria-owns when the options are not visible', fakeAsync(() => {\n        const select = fixture.debugElement.query(By.css('mat-select'));\n\n        expect(select.nativeElement.hasAttribute('aria-owns'))\n            .toBe(true, 'Expected select to have aria-owns while open.');\n\n        const backdrop =\n            overlayContainerElement.querySelector('.cdk-overlay-backdrop') as HTMLElement;\n        backdrop.click();\n        fixture.detectChanges();\n        flush();\n\n        expect(select.nativeElement.hasAttribute('aria-owns'))\n            .toBe(false, 'Expected select not to have aria-owns when closed.');\n      }));\n\n      it('should set the option id properly', fakeAsync(() => {\n        let firstOptionID = options[0].id;\n\n        expect(options[0].id)\n            .toContain('mat-option', `Expected option ID to have the correct prefix.`);\n        expect(options[0].id).not.toEqual(options[1].id, `Expected option IDs to be unique.`);\n\n        const backdrop =\n            overlayContainerElement.querySelector('.cdk-overlay-backdrop') as HTMLElement;\n        backdrop.click();\n        fixture.detectChanges();\n        flush();\n\n        triggers[1].nativeElement.click();\n        fixture.detectChanges();\n        flush();\n\n        options =\n            overlayContainerElement.querySelectorAll('mat-option') as NodeListOf<HTMLElement>;\n        expect(options[0].id)\n            .toContain('mat-option', `Expected option ID to have the correct prefix.`);\n        expect(options[0].id).not.toEqual(firstOptionID, `Expected option IDs to be unique.`);\n        expect(options[0].id).not.toEqual(options[1].id, `Expected option IDs to be unique.`);\n      }));\n  });\n\n  describe('with floatLabel', () => {\n    beforeEach(async(() => configureMatSelectTestingModule([FloatLabelSelect])));\n\n    let fixture: ComponentFixture<FloatLabelSelect>;\n    let formField: HTMLElement;\n\n    beforeEach(fakeAsync(() => {\n      fixture = TestBed.createComponent(FloatLabelSelect);\n      fixture.detectChanges();\n      formField = fixture.debugElement.query(By.css('.mat-form-field')).nativeElement;\n    }));\n\n    it('should be able to disable the floating label', fakeAsync(() => {\n      fixture.componentInstance.floatLabel = 'never';\n      fixture.detectChanges();\n\n      expect(formField.classList.contains('mat-form-field-can-float'))\n          .toBe(false, 'Floating label should be disabled');\n\n      fixture.componentInstance.control.setValue('pizza-1');\n      fixture.detectChanges();\n\n      expect(formField.classList.contains('mat-form-field-can-float'))\n          .toBe(false, 'Floating label should be disabled');\n    }));\n\n    it('should be able to always float the label', fakeAsync(() => {\n      expect(fixture.componentInstance.control.value).toBeFalsy();\n\n      fixture.componentInstance.floatLabel = 'always';\n      fixture.detectChanges();\n\n      expect(formField.classList.contains('mat-form-field-can-float'))\n          .toBe(true, 'Label should be able to float');\n      expect(formField.classList.contains('mat-form-field-should-float'))\n          .toBe(true, 'Label should be floating');\n    }));\n\n    it ('should default to global floating label type', fakeAsync(() => {\n      fixture.destroy();\n\n      TestBed.resetTestingModule();\n      TestBed.configureTestingModule({\n        imports: [\n          MatFormFieldModule,\n          MatSelectModule,\n          ReactiveFormsModule,\n          FormsModule,\n          NoopAnimationsModule\n        ],\n        declarations: [\n          FloatLabelSelect\n        ],\n        providers: [{ provide: MAT_LABEL_GLOBAL_OPTIONS, useValue: { float: 'always' } }]\n      });\n\n      fixture = TestBed.createComponent(FloatLabelSelect);\n      fixture.componentInstance.floatLabel = null;\n      fixture.detectChanges();\n      formField = fixture.debugElement.query(By.css('.mat-form-field')).nativeElement;\n\n      expect(formField.classList.contains('mat-form-field-can-float'))\n          .toBe(true, 'Label should be able to float');\n      expect(formField.classList.contains('mat-form-field-should-float'))\n          .toBe(true, 'Label should be floating');\n    }));\n  });\n\n  describe('with a sibling component that throws an error', () => {\n    beforeEach(async(() => configureMatSelectTestingModule([\n      SelectWithErrorSibling,\n      ThrowsErrorOnInit,\n    ])));\n\n    it('should not crash the browser when a sibling throws an error on init', fakeAsync(() => {\n      // Note that this test can be considered successful if the error being thrown didn't\n      // end up crashing the testing setup altogether.\n      expect(() => {\n        TestBed.createComponent(SelectWithErrorSibling).detectChanges();\n      }).toThrowError(new RegExp('Oh no!', 'g'));\n    }));\n  });\n\n  describe('with tabindex', () => {\n    beforeEach(async(() => configureMatSelectTestingModule([SelectWithPlainTabindex])));\n\n    it('should be able to set the tabindex via the native attribute', fakeAsync(() => {\n      const fixture = TestBed.createComponent(SelectWithPlainTabindex);\n      fixture.detectChanges();\n\n      const select = fixture.debugElement.query(By.css('mat-select')).nativeElement;\n      expect(select.getAttribute('tabindex')).toBe('5');\n    }));\n  });\n\n  describe('change events', () => {\n    beforeEach(async(() => configureMatSelectTestingModule([SelectWithPlainTabindex])));\n\n    it('should complete the stateChanges stream on destroy', () => {\n      const fixture = TestBed.createComponent(SelectWithPlainTabindex);\n      fixture.detectChanges();\n\n      const debugElement = fixture.debugElement.query(By.directive(MatSelect));\n      const select = debugElement.componentInstance;\n\n      const spy = jasmine.createSpy('stateChanges complete');\n      const subscription = select.stateChanges.subscribe(undefined, undefined, spy);\n\n      fixture.destroy();\n      expect(spy).toHaveBeenCalled();\n      subscription.unsubscribe();\n    });\n  });\n\n  describe('when initially hidden', () => {\n    beforeEach(async(() => configureMatSelectTestingModule([BasicSelectInitiallyHidden])));\n\n    it('should set the width of the overlay if the element was hidden initially', fakeAsync(() => {\n      const fixture = TestBed.createComponent(BasicSelectInitiallyHidden);\n      fixture.detectChanges();\n\n      const trigger = fixture.debugElement.query(By.css('.mat-select-trigger')).nativeElement;\n      trigger.style.width = '200px';\n      fixture.componentInstance.isVisible = true;\n      fixture.detectChanges();\n\n      trigger.click();\n      fixture.detectChanges();\n      flush();\n\n      const pane = overlayContainerElement.querySelector('.cdk-overlay-pane') as HTMLElement;\n      expect(pane.style.minWidth).toBe('200px');\n    }));\n  });\n\n  describe('with no placeholder', () => {\n    beforeEach(async(() => configureMatSelectTestingModule([BasicSelectNoPlaceholder])));\n\n    it('should set the width of the overlay if there is no placeholder', fakeAsync(() => {\n      const fixture = TestBed.createComponent(BasicSelectNoPlaceholder);\n\n      fixture.detectChanges();\n      const trigger = fixture.debugElement.query(By.css('.mat-select-trigger')).nativeElement;\n\n      trigger.click();\n      fixture.detectChanges();\n      flush();\n\n      const pane = overlayContainerElement.querySelector('.cdk-overlay-pane') as HTMLElement;\n      expect(parseInt(pane.style.minWidth as string)).toBeGreaterThan(0);\n    }));\n  });\n\n  describe('with theming', () => {\n    beforeEach(async(() => configureMatSelectTestingModule([BasicSelectWithTheming])));\n\n    let fixture: ComponentFixture<BasicSelectWithTheming>;\n\n    beforeEach(fakeAsync(() => {\n      fixture = TestBed.createComponent(BasicSelectWithTheming);\n      fixture.detectChanges();\n    }));\n\n    it('should transfer the theme to the select panel', fakeAsync(() => {\n      fixture.componentInstance.theme = 'warn';\n      fixture.detectChanges();\n\n      fixture.componentInstance.select.open();\n      fixture.detectChanges();\n\n      const panel = overlayContainerElement.querySelector('.mat-select-panel')! as HTMLElement;\n      expect(panel.classList).toContain('mat-warn');\n    }));\n  });\n\n  describe('when invalid inside a form', () => {\n    beforeEach(async(() => configureMatSelectTestingModule([InvalidSelectInForm])));\n\n    it('should not throw SelectionModel errors in addition to ngModel errors', fakeAsync(() => {\n      const fixture = TestBed.createComponent(InvalidSelectInForm);\n\n      // The first change detection run will throw the \"ngModel is missing a name\" error.\n      expect(() => fixture.detectChanges()).toThrowError(/the name attribute must be set/g);\n\n      // The second run shouldn't throw selection-model related errors.\n      expect(() => fixture.detectChanges()).not.toThrow();\n    }));\n  });\n\n  describe('with ngModel using compareWith', () => {\n    beforeEach(async(() => configureMatSelectTestingModule([NgModelCompareWithSelect])));\n\n    let fixture: ComponentFixture<NgModelCompareWithSelect>;\n    let instance: NgModelCompareWithSelect;\n\n    beforeEach(fakeAsync(() => {\n      fixture = TestBed.createComponent(NgModelCompareWithSelect);\n      instance = fixture.componentInstance;\n      fixture.detectChanges();\n    }));\n\n    describe('comparing by value', () => {\n\n      it('should have a selection', fakeAsync(() => {\n        const selectedOption = instance.select.selected as MatOption;\n        expect(selectedOption.value.value).toEqual('pizza-1');\n      }));\n\n      it('should update when making a new selection', fakeAsync(() => {\n        instance.options.last._selectViaInteraction();\n        fixture.detectChanges();\n        flush();\n\n        const selectedOption = instance.select.selected as MatOption;\n        expect(instance.selectedFood.value).toEqual('tacos-2');\n        expect(selectedOption.value.value).toEqual('tacos-2');\n      }));\n    });\n\n    describe('comparing by reference', () => {\n      beforeEach(fakeAsync(() => {\n        spyOn(instance, 'compareByReference').and.callThrough();\n        instance.useCompareByReference();\n        fixture.detectChanges();\n      }));\n\n      it('should use the comparator', fakeAsync(() => {\n        expect(instance.compareByReference).toHaveBeenCalled();\n      }));\n\n      it('should initialize with no selection despite having a value', fakeAsync(() => {\n        expect(instance.selectedFood.value).toBe('pizza-1');\n        expect(instance.select.selected).toBeUndefined();\n      }));\n\n      it('should not update the selection if value is copied on change', fakeAsync(() => {\n        instance.options.first._selectViaInteraction();\n        fixture.detectChanges();\n        flush();\n\n        expect(instance.selectedFood.value).toEqual('steak-0');\n        expect(instance.select.selected).toBeUndefined();\n      }));\n\n      it('should throw an error when using a non-function comparator', fakeAsync(() => {\n        instance.useNullComparator();\n\n        expect(() => {\n          fixture.detectChanges();\n        }).toThrowError(wrappedErrorMessage(getMatSelectNonFunctionValueError()));\n      }));\n    });\n  });\n\n  describe(`when the select's value is accessed on initialization`, () => {\n    beforeEach(async(() => configureMatSelectTestingModule([SelectEarlyAccessSibling])));\n\n    it('should not throw when trying to access the selected value on init', fakeAsync(() => {\n      expect(() => {\n        TestBed.createComponent(SelectEarlyAccessSibling).detectChanges();\n      }).not.toThrow();\n    }));\n  });\n\n  describe('inside of a form group', () => {\n    beforeEach(async(() => configureMatSelectTestingModule([SelectInsideFormGroup])));\n\n    let fixture: ComponentFixture<SelectInsideFormGroup>;\n    let testComponent: SelectInsideFormGroup;\n    let select: HTMLElement;\n\n    beforeEach(fakeAsync(() => {\n      fixture = TestBed.createComponent(SelectInsideFormGroup);\n      fixture.detectChanges();\n      testComponent = fixture.componentInstance;\n      select = fixture.debugElement.query(By.css('mat-select')).nativeElement;\n    }));\n\n    it('should not set the invalid class on a clean select', fakeAsync(() => {\n      expect(testComponent.formGroup.untouched).toBe(true, 'Expected the form to be untouched.');\n      expect(testComponent.formControl.invalid).toBe(true, 'Expected form control to be invalid.');\n      expect(select.classList)\n          .not.toContain('mat-select-invalid', 'Expected select not to appear invalid.');\n      expect(select.getAttribute('aria-invalid'))\n          .toBe('false', 'Expected aria-invalid to be set to false.');\n    }));\n\n    it('should appear as invalid if it becomes touched', fakeAsync(() => {\n      expect(select.classList)\n          .not.toContain('mat-select-invalid', 'Expected select not to appear invalid.');\n      expect(select.getAttribute('aria-invalid'))\n          .toBe('false', 'Expected aria-invalid to be set to false.');\n\n      testComponent.formControl.markAsTouched();\n      fixture.detectChanges();\n\n      expect(select.classList)\n          .toContain('mat-select-invalid', 'Expected select to appear invalid.');\n      expect(select.getAttribute('aria-invalid'))\n          .toBe('true', 'Expected aria-invalid to be set to true.');\n    }));\n\n    it('should not have the invalid class when the select becomes valid', fakeAsync(() => {\n      testComponent.formControl.markAsTouched();\n      fixture.detectChanges();\n\n      expect(select.classList)\n          .toContain('mat-select-invalid', 'Expected select to appear invalid.');\n      expect(select.getAttribute('aria-invalid'))\n          .toBe('true', 'Expected aria-invalid to be set to true.');\n\n      testComponent.formControl.setValue('pizza-1');\n      fixture.detectChanges();\n\n      expect(select.classList)\n          .not.toContain('mat-select-invalid', 'Expected select not to appear invalid.');\n      expect(select.getAttribute('aria-invalid'))\n          .toBe('false', 'Expected aria-invalid to be set to false.');\n    }));\n\n    it('should appear as invalid when the parent form group is submitted', fakeAsync(() => {\n      expect(select.classList)\n          .not.toContain('mat-select-invalid', 'Expected select not to appear invalid.');\n      expect(select.getAttribute('aria-invalid'))\n          .toBe('false', 'Expected aria-invalid to be set to false.');\n\n      dispatchFakeEvent(fixture.debugElement.query(By.css('form')).nativeElement, 'submit');\n      fixture.detectChanges();\n\n      expect(select.classList)\n          .toContain('mat-select-invalid', 'Expected select to appear invalid.');\n      expect(select.getAttribute('aria-invalid'))\n          .toBe('true', 'Expected aria-invalid to be set to true.');\n    }));\n\n    it('should render the error messages when the parent form is submitted', fakeAsync(() => {\n      const debugEl = fixture.debugElement.nativeElement;\n\n      expect(debugEl.querySelectorAll('mat-error').length).toBe(0, 'Expected no error messages');\n\n      dispatchFakeEvent(fixture.debugElement.query(By.css('form')).nativeElement, 'submit');\n      fixture.detectChanges();\n\n      expect(debugEl.querySelectorAll('mat-error').length).toBe(1, 'Expected one error message');\n    }));\n\n    it('should override error matching behavior via injection token', fakeAsync(() => {\n      const errorStateMatcher: ErrorStateMatcher = {\n        isErrorState: jasmine.createSpy('error state matcher').and.returnValue(true)\n      };\n\n      fixture.destroy();\n\n      TestBed.resetTestingModule().configureTestingModule({\n        imports: [MatSelectModule, ReactiveFormsModule, FormsModule, NoopAnimationsModule],\n        declarations: [SelectInsideFormGroup],\n        providers: [{ provide: ErrorStateMatcher, useValue: errorStateMatcher }],\n      });\n\n      const errorFixture = TestBed.createComponent(SelectInsideFormGroup);\n      const component = errorFixture.componentInstance;\n\n      errorFixture.detectChanges();\n\n      expect(component.select.errorState).toBe(true);\n      expect(errorStateMatcher.isErrorState).toHaveBeenCalled();\n    }));\n\n    it('should notify that the state changed when the options have changed', fakeAsync(() => {\n      testComponent.formControl.setValue('pizza-1');\n      fixture.detectChanges();\n\n      const spy = jasmine.createSpy('stateChanges spy');\n      const subscription = testComponent.select.stateChanges.subscribe(spy);\n\n      testComponent.options = [];\n      fixture.detectChanges();\n      tick();\n\n      expect(spy).toHaveBeenCalled();\n      subscription.unsubscribe();\n    }));\n\n  });\n\n  describe('with custom error behavior', () => {\n    beforeEach(async(() => configureMatSelectTestingModule([CustomErrorBehaviorSelect])));\n\n    it('should be able to override the error matching behavior via an @Input', fakeAsync(() => {\n      const fixture = TestBed.createComponent(CustomErrorBehaviorSelect);\n      const component = fixture.componentInstance;\n      const matcher = jasmine.createSpy('error state matcher').and.returnValue(true);\n\n      fixture.detectChanges();\n\n      expect(component.control.invalid).toBe(false);\n      expect(component.select.errorState).toBe(false);\n\n      fixture.componentInstance.errorStateMatcher = { isErrorState: matcher };\n      fixture.detectChanges();\n\n      expect(component.select.errorState).toBe(true);\n      expect(matcher).toHaveBeenCalled();\n    }));\n  });\n\n  describe('with preselected array values', () => {\n    beforeEach(async(() => configureMatSelectTestingModule([\n      SingleSelectWithPreselectedArrayValues,\n    ])));\n\n    it('should be able to preselect an array value in single-selection mode', fakeAsync(() => {\n      const fixture = TestBed.createComponent(SingleSelectWithPreselectedArrayValues);\n      fixture.detectChanges();\n      flush();\n      fixture.detectChanges();\n\n      const trigger = fixture.debugElement.query(By.css('.mat-select-trigger')).nativeElement;\n\n      expect(trigger.textContent).toContain('Pizza');\n      expect(fixture.componentInstance.options.toArray()[1].selected).toBe(true);\n    }));\n  });\n\n  describe('with custom value accessor', () => {\n    beforeEach(async(() => configureMatSelectTestingModule([\n      CompWithCustomSelect,\n      CustomSelectAccessor,\n    ])));\n\n    it('should support use inside a custom value accessor', fakeAsync(() => {\n      const fixture = TestBed.createComponent(CompWithCustomSelect);\n      spyOn(fixture.componentInstance.customAccessor, 'writeValue');\n      fixture.detectChanges();\n\n      expect(fixture.componentInstance.customAccessor.select.ngControl)\n          .toBeFalsy('Expected mat-select NOT to inherit control from parent value accessor.');\n      expect(fixture.componentInstance.customAccessor.writeValue).toHaveBeenCalled();\n    }));\n  });\n\n  describe('with a falsy value', () => {\n    beforeEach(async(() => configureMatSelectTestingModule([FalsyValueSelect])));\n\n    it('should be able to programmatically select a falsy option', fakeAsync(() => {\n      const fixture = TestBed.createComponent(FalsyValueSelect);\n\n      fixture.detectChanges();\n      fixture.debugElement.query(By.css('.mat-select-trigger')).nativeElement.click();\n      fixture.componentInstance.control.setValue(0);\n      fixture.detectChanges();\n      flush();\n\n      expect(fixture.componentInstance.options.first.selected)\n          .toBe(true, 'Expected first option to be selected');\n      expect(overlayContainerElement.querySelectorAll('mat-option')[0].classList)\n          .toContain('mat-selected', 'Expected first option to be selected');\n    }));\n  });\n\n  describe('with OnPush', () => {\n    beforeEach(async(() => configureMatSelectTestingModule([\n      BasicSelectOnPush,\n      BasicSelectOnPushPreselected,\n    ])));\n\n    it('should set the trigger text based on the value when initialized', fakeAsync(() => {\n      const fixture = TestBed.createComponent(BasicSelectOnPushPreselected);\n\n      fixture.detectChanges();\n      flush();\n\n      const trigger = fixture.debugElement.query(By.css('.mat-select-trigger')).nativeElement;\n\n      fixture.detectChanges();\n\n      expect(trigger.textContent).toContain('Pizza');\n    }));\n\n    it('should update the trigger based on the value', fakeAsync(() => {\n      const fixture = TestBed.createComponent(BasicSelectOnPush);\n      fixture.detectChanges();\n      const trigger = fixture.debugElement.query(By.css('.mat-select-trigger')).nativeElement;\n\n      fixture.componentInstance.control.setValue('pizza-1');\n      fixture.detectChanges();\n\n      expect(trigger.textContent).toContain('Pizza');\n\n      fixture.componentInstance.control.reset();\n      fixture.detectChanges();\n\n      expect(trigger.textContent).not.toContain('Pizza');\n    }));\n  });\n\n  describe('with custom trigger', () => {\n    beforeEach(async(() => configureMatSelectTestingModule([SelectWithCustomTrigger])));\n\n    it('should allow the user to customize the label', fakeAsync(() => {\n      const fixture = TestBed.createComponent(SelectWithCustomTrigger);\n      fixture.detectChanges();\n\n      fixture.componentInstance.control.setValue('pizza-1');\n      fixture.detectChanges();\n\n      const label = fixture.debugElement.query(By.css('.mat-select-value')).nativeElement;\n\n      expect(label.textContent).toContain('azziP',\n          'Expected the displayed text to be \"Pizza\" in reverse.');\n    }));\n  });\n\n  describe('when reseting the value by setting null or undefined', () => {\n    beforeEach(async(() => configureMatSelectTestingModule([ResetValuesSelect])));\n\n    let fixture: ComponentFixture<ResetValuesSelect>;\n    let trigger: HTMLElement;\n    let formField: HTMLElement;\n    let options: NodeListOf<HTMLElement>;\n\n    beforeEach(fakeAsync(() => {\n      fixture = TestBed.createComponent(ResetValuesSelect);\n      fixture.detectChanges();\n      trigger = fixture.debugElement.query(By.css('.mat-select-trigger')).nativeElement;\n      formField = fixture.debugElement.query(By.css('.mat-form-field')).nativeElement;\n\n      trigger.click();\n      fixture.detectChanges();\n      flush();\n\n      options = overlayContainerElement.querySelectorAll('mat-option') as NodeListOf<HTMLElement>;\n      options[0].click();\n      fixture.detectChanges();\n      flush();\n    }));\n\n    it('should reset when an option with an undefined value is selected', fakeAsync(() => {\n      options[4].click();\n      fixture.detectChanges();\n      flush();\n\n      expect(fixture.componentInstance.control.value).toBeUndefined();\n      expect(fixture.componentInstance.select.selected).toBeFalsy();\n      expect(formField.classList).not.toContain('mat-form-field-should-float');\n      expect(trigger.textContent).not.toContain('Undefined');\n    }));\n\n    it('should reset when an option with a null value is selected', fakeAsync(() => {\n      options[5].click();\n      fixture.detectChanges();\n      flush();\n\n      expect(fixture.componentInstance.control.value).toBeNull();\n      expect(fixture.componentInstance.select.selected).toBeFalsy();\n      expect(formField.classList).not.toContain('mat-form-field-should-float');\n      expect(trigger.textContent).not.toContain('Null');\n    }));\n\n    it('should reset when a blank option is selected', fakeAsync(() => {\n      options[6].click();\n      fixture.detectChanges();\n      flush();\n\n      expect(fixture.componentInstance.control.value).toBeUndefined();\n      expect(fixture.componentInstance.select.selected).toBeFalsy();\n      expect(formField.classList).not.toContain('mat-form-field-should-float');\n      expect(trigger.textContent).not.toContain('None');\n    }));\n\n    it('should not mark the reset option as selected ', fakeAsync(() => {\n      options[5].click();\n      fixture.detectChanges();\n      flush();\n\n      fixture.componentInstance.select.open();\n      fixture.detectChanges();\n      flush();\n\n      expect(options[5].classList).not.toContain('mat-selected');\n    }));\n\n    it('should not reset when any other falsy option is selected', fakeAsync(() => {\n      options[3].click();\n      fixture.detectChanges();\n      flush();\n\n      expect(fixture.componentInstance.control.value).toBe(false);\n      expect(fixture.componentInstance.select.selected).toBeTruthy();\n      expect(formField.classList).toContain('mat-form-field-should-float');\n      expect(trigger.textContent).toContain('Falsy');\n    }));\n\n    it('should not consider the reset values as selected when resetting the form control',\n        fakeAsync(() => {\n          expect(formField.classList).toContain('mat-form-field-should-float');\n\n          fixture.componentInstance.control.reset();\n          fixture.detectChanges();\n\n          expect(fixture.componentInstance.control.value).toBeNull();\n          expect(fixture.componentInstance.select.selected).toBeFalsy();\n          expect(formField.classList).not.toContain('mat-formf-field-should-float');\n          expect(trigger.textContent).not.toContain('Null');\n          expect(trigger.textContent).not.toContain('Undefined');\n        }));\n  });\n\n  describe('without Angular forms', () => {\n    beforeEach(async(() => configureMatSelectTestingModule([\n      BasicSelectWithoutForms,\n      BasicSelectWithoutFormsPreselected,\n      BasicSelectWithoutFormsMultiple,\n    ])));\n\n    it('should set the value when options are clicked', fakeAsync(() => {\n      const fixture = TestBed.createComponent(BasicSelectWithoutForms);\n\n      fixture.detectChanges();\n      expect(fixture.componentInstance.selectedFood).toBeFalsy();\n\n      const trigger = fixture.debugElement.query(By.css('.mat-select-trigger')).nativeElement;\n\n      trigger.click();\n      fixture.detectChanges();\n      flush();\n\n      (overlayContainerElement.querySelector('mat-option') as HTMLElement).click();\n      fixture.detectChanges();\n      flush();\n\n      expect(fixture.componentInstance.selectedFood).toBe('steak-0');\n      expect(fixture.componentInstance.select.value).toBe('steak-0');\n      expect(trigger.textContent).toContain('Steak');\n\n      trigger.click();\n      fixture.detectChanges();\n      flush();\n\n      (overlayContainerElement.querySelectorAll('mat-option')[2] as HTMLElement).click();\n      fixture.detectChanges();\n      flush();\n\n      expect(fixture.componentInstance.selectedFood).toBe('sandwich-2');\n      expect(fixture.componentInstance.select.value).toBe('sandwich-2');\n      expect(trigger.textContent).toContain('Sandwich');\n    }));\n\n    it('should mark options as selected when the value is set', fakeAsync(() => {\n      const fixture = TestBed.createComponent(BasicSelectWithoutForms);\n\n      fixture.detectChanges();\n      fixture.componentInstance.selectedFood = 'sandwich-2';\n      fixture.detectChanges();\n\n      const trigger = fixture.debugElement.query(By.css('.mat-select-trigger')).nativeElement;\n      expect(trigger.textContent).toContain('Sandwich');\n\n      trigger.click();\n      fixture.detectChanges();\n\n      const option = overlayContainerElement.querySelectorAll('mat-option')[2];\n\n      expect(option.classList).toContain('mat-selected');\n      expect(fixture.componentInstance.select.value).toBe('sandwich-2');\n    }));\n\n    it('should reset the label when a null value is set', fakeAsync(() => {\n      const fixture = TestBed.createComponent(BasicSelectWithoutForms);\n\n      fixture.detectChanges();\n      expect(fixture.componentInstance.selectedFood).toBeFalsy();\n\n      const trigger = fixture.debugElement.query(By.css('.mat-select-trigger')).nativeElement;\n\n      trigger.click();\n      fixture.detectChanges();\n      flush();\n\n      (overlayContainerElement.querySelector('mat-option') as HTMLElement).click();\n      fixture.detectChanges();\n      flush();\n\n      expect(fixture.componentInstance.selectedFood).toBe('steak-0');\n      expect(fixture.componentInstance.select.value).toBe('steak-0');\n      expect(trigger.textContent).toContain('Steak');\n\n      fixture.componentInstance.selectedFood = null;\n      fixture.detectChanges();\n\n      expect(fixture.componentInstance.select.value).toBeNull();\n      expect(trigger.textContent).not.toContain('Steak');\n    }));\n\n    it('should reflect the preselected value', fakeAsync(() => {\n      const fixture = TestBed.createComponent(BasicSelectWithoutFormsPreselected);\n\n      fixture.detectChanges();\n      flush();\n\n      const trigger = fixture.debugElement.query(By.css('.mat-select-trigger')).nativeElement;\n      fixture.detectChanges();\n      expect(trigger.textContent).toContain('Pizza');\n\n      trigger.click();\n      fixture.detectChanges();\n\n      const option = overlayContainerElement.querySelectorAll('mat-option')[1];\n\n      expect(option.classList).toContain('mat-selected');\n      expect(fixture.componentInstance.select.value).toBe('pizza-1');\n    }));\n\n    it('should be able to select multiple values', fakeAsync(() => {\n      const fixture = TestBed.createComponent(BasicSelectWithoutFormsMultiple);\n\n      fixture.detectChanges();\n      expect(fixture.componentInstance.selectedFoods).toBeFalsy();\n\n      const trigger = fixture.debugElement.query(By.css('.mat-select-trigger')).nativeElement;\n\n      trigger.click();\n      fixture.detectChanges();\n\n      const options =\n          overlayContainerElement.querySelectorAll('mat-option') as NodeListOf<HTMLElement>;\n\n      options[0].click();\n      fixture.detectChanges();\n\n      expect(fixture.componentInstance.selectedFoods).toEqual(['steak-0']);\n      expect(fixture.componentInstance.select.value).toEqual(['steak-0']);\n      expect(trigger.textContent).toContain('Steak');\n\n      options[2].click();\n      fixture.detectChanges();\n\n      expect(fixture.componentInstance.selectedFoods).toEqual(['steak-0', 'sandwich-2']);\n      expect(fixture.componentInstance.select.value).toEqual(['steak-0', 'sandwich-2']);\n      expect(trigger.textContent).toContain('Steak, Sandwich');\n\n      options[1].click();\n      fixture.detectChanges();\n\n      expect(fixture.componentInstance.selectedFoods).toEqual(['steak-0', 'pizza-1', 'sandwich-2']);\n      expect(fixture.componentInstance.select.value).toEqual(['steak-0', 'pizza-1', 'sandwich-2']);\n      expect(trigger.textContent).toContain('Steak, Pizza, Sandwich');\n    }));\n\n    it('should restore focus to the host element', fakeAsync(() => {\n      const fixture = TestBed.createComponent(BasicSelectWithoutForms);\n\n      fixture.detectChanges();\n      fixture.debugElement.query(By.css('.mat-select-trigger')).nativeElement.click();\n      fixture.detectChanges();\n      flush();\n\n      (overlayContainerElement.querySelector('mat-option') as HTMLElement).click();\n      fixture.detectChanges();\n      flush();\n\n      const select = fixture.debugElement.nativeElement.querySelector('mat-select');\n\n      expect(document.activeElement).toBe(select, 'Expected trigger to be focused.');\n    }));\n\n    it('should not restore focus to the host element when clicking outside', fakeAsync(() => {\n      const fixture = TestBed.createComponent(BasicSelectWithoutForms);\n      const select = fixture.debugElement.nativeElement.querySelector('mat-select');\n\n      fixture.detectChanges();\n      fixture.debugElement.query(By.css('.mat-select-trigger')).nativeElement.click();\n      fixture.detectChanges();\n      flush();\n\n      expect(document.activeElement).toBe(select, 'Expected trigger to be focused.');\n\n      select.blur(); // Blur manually since the programmatic click might not do it.\n      (overlayContainerElement.querySelector('.cdk-overlay-backdrop') as HTMLElement).click();\n      fixture.detectChanges();\n      flush();\n\n      expect(document.activeElement).not.toBe(select, 'Expected trigger not to be focused.');\n    }));\n\n    it('should update the data binding before emitting the change event', fakeAsync(() => {\n      const fixture = TestBed.createComponent(BasicSelectWithoutForms);\n      const instance = fixture.componentInstance;\n      const spy = jasmine.createSpy('change spy');\n\n      fixture.detectChanges();\n      instance.select.selectionChange.subscribe(() => spy(instance.selectedFood));\n\n      expect(instance.selectedFood).toBeFalsy();\n\n      fixture.debugElement.query(By.css('.mat-select-trigger')).nativeElement.click();\n      fixture.detectChanges();\n      flush();\n\n      (overlayContainerElement.querySelector('mat-option') as HTMLElement).click();\n      fixture.detectChanges();\n      flush();\n\n      expect(instance.selectedFood).toBe('steak-0');\n      expect(spy).toHaveBeenCalledWith('steak-0');\n    }));\n\n  });\n\n  describe('with option centering disabled', () => {\n    beforeEach(async(() => configureMatSelectTestingModule([\n      SelectWithoutOptionCentering,\n    ])));\n\n    let fixture: ComponentFixture<SelectWithoutOptionCentering>;\n    let trigger: HTMLElement;\n\n    beforeEach(fakeAsync(() => {\n      fixture = TestBed.createComponent(SelectWithoutOptionCentering);\n      fixture.detectChanges();\n      trigger = fixture.debugElement.query(By.css('.mat-select-trigger')).nativeElement;\n    }));\n\n    it('should not align the active option with the trigger if centering is disabled',\n        fakeAsync(() => {\n          trigger.click();\n          fixture.detectChanges();\n          flush();\n\n          const scrollContainer = document.querySelector('.cdk-overlay-pane .mat-select-panel')!;\n\n          // The panel should be scrolled to 0 because centering the option disabled.\n          expect(scrollContainer.scrollTop).toEqual(0, `Expected panel not to be scrolled.`);\n          // The trigger should contain 'Pizza' because it was preselected\n          expect(trigger.textContent).toContain('Pizza');\n          // The selected index should be 1 because it was preselected\n          expect(fixture.componentInstance.options.toArray()[1].selected).toBe(true);\n        }));\n  });\n\n  describe('positioning', () => {\n    beforeEach(async(() => configureMatSelectTestingModule([\n      BasicSelect,\n      MultiSelect,\n      SelectWithGroups,\n    ])));\n\n    beforeEach((inject([ViewportRuler], (vr: ViewportRuler) => {\n      viewportRuler = vr;\n    })));\n\n    let fixture: ComponentFixture<BasicSelect>;\n    let trigger: HTMLElement;\n    let formField: HTMLElement;\n\n    beforeEach(fakeAsync(() => {\n      fixture = TestBed.createComponent(BasicSelect);\n      fixture.detectChanges();\n      trigger = fixture.debugElement.query(By.css('.mat-select-trigger')).nativeElement;\n      formField = fixture.debugElement.query(By.css('mat-form-field')).nativeElement;\n    }));\n\n    /**\n     * Asserts that the given option is aligned with the trigger.\n     * @param index The index of the option.\n     * @param selectInstance Instance of the `mat-select` component to check against.\n     */\n    function checkTriggerAlignedWithOption(index: number, selectInstance =\n        fixture.componentInstance.select): void {\n\n      const overlayPane = overlayContainerElement.querySelector('.cdk-overlay-pane')!;\n      const triggerTop = trigger.getBoundingClientRect().top;\n      const overlayTop = overlayPane.getBoundingClientRect().top;\n      const options = overlayPane.querySelectorAll('mat-option');\n      const optionTop = options[index].getBoundingClientRect().top;\n      const triggerFontSize = parseInt(window.getComputedStyle(trigger).fontSize || '0');\n      const triggerLineHeightEm = 1.125;\n\n      // Extra trigger height beyond the font size caused by the fact that the line-height is\n      // greater than 1em.\n      const triggerExtraLineSpaceAbove = (1 - triggerLineHeightEm) * triggerFontSize / 2;\n      const topDifference = Math.floor(optionTop) -\n          Math.floor(triggerTop - triggerFontSize - triggerExtraLineSpaceAbove);\n\n      // Expect the coordinates to be within a pixel of each other. We can't rely on comparing\n      // the exact value, because different browsers report the various sizes with slight (< 1px)\n      // deviations.\n      expect(Math.abs(topDifference) < 2)\n          .toBe(true, `Expected trigger to align with option ${index}.`);\n\n      // For the animation to start at the option's center, its origin must be the distance\n      // from the top of the overlay to the option top + half the option height (48/2 = 24).\n      const expectedOrigin = Math.floor(optionTop - overlayTop + 24);\n      const rawYOrigin = selectInstance._transformOrigin.split(' ')[1].trim();\n      const origin = Math.floor(parseInt(rawYOrigin));\n\n      // Because the origin depends on the Y axis offset, we also have to\n      // round down and check that the difference is within a pixel.\n      expect(Math.abs(expectedOrigin - origin) < 2).toBe(true,\n          `Expected panel animation to originate in the center of option ${index}.`);\n    }\n\n    describe('ample space to open', () => {\n      beforeEach(fakeAsync(() => {\n        // these styles are necessary because we are first testing the overlay's position\n        // if there is room for it to open to its full extent in either direction.\n        formField.style.position = 'fixed';\n        formField.style.top = '285px';\n        formField.style.left = '20px';\n      }));\n\n      it('should align the first option with trigger text if no option is selected',\n          fakeAsync(() => {\n            // We shouldn't push it too far down for this one, because the default may\n            // end up being too much when running the tests on mobile browsers.\n            formField.style.top = '100px';\n            trigger.click();\n            fixture.detectChanges();\n            flush();\n\n            const scrollContainer = document.querySelector('.cdk-overlay-pane .mat-select-panel')!;\n\n            // The panel should be scrolled to 0 because centering the option is not possible.\n            expect(scrollContainer.scrollTop).toEqual(0, `Expected panel not to be scrolled.`);\n            checkTriggerAlignedWithOption(0);\n          }));\n\n      it('should align a selected option too high to be centered with the trigger text',\n          fakeAsync(() => {\n            // Select the second option, because it can't be scrolled any further downward\n            fixture.componentInstance.control.setValue('pizza-1');\n            fixture.detectChanges();\n\n            trigger.click();\n            fixture.detectChanges();\n            flush();\n\n            const scrollContainer = document.querySelector('.cdk-overlay-pane .mat-select-panel')!;\n\n            // The panel should be scrolled to 0 because centering the option is not possible.\n            expect(scrollContainer.scrollTop).toEqual(0, `Expected panel not to be scrolled.`);\n            checkTriggerAlignedWithOption(1);\n          }));\n\n      it('should align a selected option in the middle with the trigger text', fakeAsync(() => {\n        // Select the fifth option, which has enough space to scroll to the center\n        fixture.componentInstance.control.setValue('chips-4');\n        fixture.detectChanges();\n        flush();\n\n        trigger.click();\n        fixture.detectChanges();\n        flush();\n\n        const scrollContainer = document.querySelector('.cdk-overlay-pane .mat-select-panel')!;\n\n        // The selected option should be scrolled to the center of the panel.\n        // This will be its original offset from the scrollTop - half the panel height + half\n        // the option height. 4 (index) * 48 (option height) = 192px offset from scrollTop\n        // 192 - 256/2 + 48/2 = 88px\n        expect(scrollContainer.scrollTop)\n            .toEqual(88, `Expected overlay panel to be scrolled to center the selected option.`);\n\n        checkTriggerAlignedWithOption(4);\n      }));\n\n      it('should align a selected option at the scroll max with the trigger text', fakeAsync(() => {\n        // Select the last option in the list\n        fixture.componentInstance.control.setValue('sushi-7');\n        fixture.detectChanges();\n        flush();\n\n        trigger.click();\n        fixture.detectChanges();\n        flush();\n\n        const scrollContainer = document.querySelector('.cdk-overlay-pane .mat-select-panel')!;\n\n        // The selected option should be scrolled to the max scroll position.\n        // This will be the height of the scrollContainer - the panel height.\n        // 8 options * 48px = 384 scrollContainer height, 384 - 256 = 128px max scroll\n        expect(scrollContainer.scrollTop)\n            .toEqual(128, `Expected overlay panel to be scrolled to its maximum position.`);\n\n        checkTriggerAlignedWithOption(7);\n      }));\n\n      it('should account for preceding label groups when aligning the option', fakeAsync(() => {\n        // Test is off-by-one on edge for some reason, but verified that it looks correct through\n        // manual testing.\n        if (platform.EDGE) {\n          return;\n        }\n\n        fixture.destroy();\n\n        let groupFixture = TestBed.createComponent(SelectWithGroups);\n        groupFixture.detectChanges();\n        trigger = groupFixture.debugElement.query(By.css('.mat-select-trigger')).nativeElement;\n        formField = groupFixture.debugElement.query(By.css('mat-form-field')).nativeElement;\n\n        formField.style.position = 'fixed';\n        formField.style.top = '200px';\n        formField.style.left = '100px';\n\n        // Select an option in the third group, which has a couple of group labels before it.\n        groupFixture.componentInstance.control.setValue('vulpix-7');\n        groupFixture.detectChanges();\n\n        trigger.click();\n        groupFixture.detectChanges();\n        flush();\n\n        const scrollContainer = document.querySelector('.cdk-overlay-pane .mat-select-panel')!;\n\n        // The selected option should be scrolled to the center of the panel.\n        // This will be its original offset from the scrollTop - half the panel height + half the\n        // option height. 10 (option index + 3 group labels before it) * 48 (option height) = 480\n        // 480 (offset from scrollTop) - 256/2 + 48/2 = 376px\n        expect(Math.floor(scrollContainer.scrollTop))\n            .toBe(376, `Expected overlay panel to be scrolled to center the selected option.`);\n\n        checkTriggerAlignedWithOption(7, groupFixture.componentInstance.select);\n      }));\n    });\n\n    describe('limited space to open vertically', () => {\n      beforeEach(fakeAsync(() => {\n        formField.style.position = 'fixed';\n        formField.style.left = '20px';\n      }));\n\n      it('should adjust position of centered option if there is little space above',\n          fakeAsync(() => {\n            const selectMenuHeight = 256;\n            const selectMenuViewportPadding = 8;\n            const selectItemHeight = 48;\n            const selectedIndex = 4;\n            const fontSize = 16;\n            const lineHeightEm = 1.125;\n            const expectedExtraScroll = 5;\n\n            // Trigger element height.\n            const triggerHeight = fontSize * lineHeightEm;\n\n            // Ideal space above selected item in order to center it.\n            const idealSpaceAboveSelectedItem = (selectMenuHeight - selectItemHeight) / 2;\n\n            // Actual space above selected item.\n            const actualSpaceAboveSelectedItem = selectItemHeight * selectedIndex;\n\n            // Ideal scroll position to center.\n            const idealScrollTop = actualSpaceAboveSelectedItem - idealSpaceAboveSelectedItem;\n\n            // Top-most select-position that allows for perfect centering.\n            const topMostPositionForPerfectCentering =\n                idealSpaceAboveSelectedItem + selectMenuViewportPadding +\n                (selectItemHeight - triggerHeight) / 2;\n\n            // Position of select relative to top edge of mat-form-field.\n            const formFieldTopSpace =\n                trigger.getBoundingClientRect().top - formField.getBoundingClientRect().top;\n\n            const formFieldTop =\n                topMostPositionForPerfectCentering - formFieldTopSpace - expectedExtraScroll;\n\n            formField.style.top = `${formFieldTop}px`;\n\n            // Select an option in the middle of the list\n            fixture.componentInstance.control.setValue('chips-4');\n            fixture.detectChanges();\n            flush();\n\n            trigger.click();\n            fixture.detectChanges();\n            flush();\n\n            const scrollContainer = document.querySelector('.cdk-overlay-pane .mat-select-panel')!;\n\n            expect(Math.ceil(scrollContainer.scrollTop))\n                .toEqual(Math.ceil(idealScrollTop + 5),\n                    `Expected panel to adjust scroll position to fit in viewport.`);\n\n            checkTriggerAlignedWithOption(4);\n          }));\n\n      it('should adjust position of centered option if there is little space below',\n          fakeAsync(() => {\n            const selectMenuHeight = 256;\n            const selectMenuViewportPadding = 8;\n            const selectItemHeight = 48;\n            const selectedIndex = 4;\n            const fontSize = 16;\n            const lineHeightEm = 1.125;\n            const expectedExtraScroll = 5;\n\n            // Trigger element height.\n            const triggerHeight = fontSize * lineHeightEm;\n\n            // Ideal space above selected item in order to center it.\n            const idealSpaceAboveSelectedItem = (selectMenuHeight - selectItemHeight) / 2;\n\n            // Actual space above selected item.\n            const actualSpaceAboveSelectedItem = selectItemHeight * selectedIndex;\n\n            // Ideal scroll position to center.\n            const idealScrollTop = actualSpaceAboveSelectedItem - idealSpaceAboveSelectedItem;\n\n            // Bottom-most select-position that allows for perfect centering.\n            const bottomMostPositionForPerfectCentering =\n                idealSpaceAboveSelectedItem + selectMenuViewportPadding +\n                (selectItemHeight - triggerHeight) / 2;\n\n            // Position of select relative to bottom edge of mat-form-field:\n            const formFieldBottomSpace =\n                formField.getBoundingClientRect().bottom - trigger.getBoundingClientRect().bottom;\n\n            const formFieldBottom =\n                bottomMostPositionForPerfectCentering - formFieldBottomSpace - expectedExtraScroll;\n\n            // Push the select to a position with not quite enough space on the bottom to open\n            // with the option completely centered (needs 113px at least: 256/2 - 48/2 + 9)\n            formField.style.bottom = `${formFieldBottom}px`;\n\n            // Select an option in the middle of the list\n            fixture.componentInstance.control.setValue('chips-4');\n            fixture.detectChanges();\n            flush();\n\n            fixture.detectChanges();\n\n            trigger.click();\n            fixture.detectChanges();\n            flush();\n\n            const scrollContainer = document.querySelector('.cdk-overlay-pane .mat-select-panel')!;\n\n            // Scroll should adjust by the difference between the bottom space available\n            // (56px from the bottom of the screen - 8px padding = 48px)\n            // and the height of the panel below the option (113px).\n            // 113px - 48px = 75px difference. Original scrollTop 88px - 75px = 23px\n            const difference = Math.ceil(scrollContainer.scrollTop) -\n                Math.ceil(idealScrollTop - expectedExtraScroll);\n\n            // Note that different browser/OS combinations report the different dimensions with\n            // slight deviations (< 1px). We round the expectation and check that the values\n            // are within a pixel of each other to avoid flakes.\n            expect(Math.abs(difference) < 2)\n                .toBe(true, `Expected panel to adjust scroll position to fit in viewport.`);\n\n            checkTriggerAlignedWithOption(4);\n          }));\n\n      it('should fall back to \"above\" positioning if scroll adjustment will not help',\n          fakeAsync(() => {\n            // Push the select to a position with not enough space on the bottom to open\n            formField.style.bottom = '56px';\n            fixture.detectChanges();\n\n            // Select an option that cannot be scrolled any farther upward\n            fixture.componentInstance.control.setValue('coke-0');\n            fixture.detectChanges();\n\n            trigger.click();\n            fixture.detectChanges();\n            flush();\n\n            const overlayPane = document.querySelector('.cdk-overlay-pane')!;\n            const triggerBottom = trigger.getBoundingClientRect().bottom;\n            const overlayBottom = overlayPane.getBoundingClientRect().bottom;\n            const scrollContainer = overlayPane.querySelector('.mat-select-panel')!;\n\n            // Expect no scroll to be attempted\n            expect(scrollContainer.scrollTop).toEqual(0, `Expected panel not to be scrolled.`);\n\n            const difference = Math.floor(overlayBottom) - Math.floor(triggerBottom);\n\n            // Check that the values are within a pixel of each other. This avoids sub-pixel\n            // deviations between OS and browser versions.\n            expect(Math.abs(difference) < 2)\n                .toEqual(true, `Expected trigger bottom to align with overlay bottom.`);\n\n            expect(fixture.componentInstance.select._transformOrigin)\n                .toContain(`bottom`, `Expected panel animation to originate at the bottom.`);\n          }));\n\n      it('should fall back to \"below\" positioning if scroll adjustment won\\'t help',\n          fakeAsync(() => {\n            // Push the select to a position with not enough space on the top to open\n            formField.style.top = '85px';\n\n            // Select an option that cannot be scrolled any farther downward\n            fixture.componentInstance.control.setValue('sushi-7');\n            fixture.detectChanges();\n            flush();\n\n            trigger.click();\n            fixture.detectChanges();\n            flush();\n\n            const overlayPane = document.querySelector('.cdk-overlay-pane')!;\n            const triggerTop = trigger.getBoundingClientRect().top;\n            const overlayTop = overlayPane.getBoundingClientRect().top;\n            const scrollContainer = overlayPane.querySelector('.mat-select-panel')!;\n\n            // Expect scroll to remain at the max scroll position\n            expect(scrollContainer.scrollTop).toEqual(128, `Expected panel to be at max scroll.`);\n\n            expect(Math.floor(overlayTop))\n                .toEqual(Math.floor(triggerTop), `Expected trigger top to align with overlay top.`);\n\n            expect(fixture.componentInstance.select._transformOrigin)\n                .toContain(`top`, `Expected panel animation to originate at the top.`);\n          }));\n\n    });\n\n    describe('limited space to open horizontally', () => {\n      beforeEach(fakeAsync(() => {\n        formField.style.position = 'absolute';\n        formField.style.top = '200px';\n      }));\n\n      it('should stay within the viewport when overflowing on the left in ltr', fakeAsync(() => {\n        formField.style.left = '-100px';\n        trigger.click();\n        fixture.detectChanges();\n        flush();\n\n        const panelLeft = document.querySelector('.mat-select-panel')!.getBoundingClientRect().left;\n\n        expect(panelLeft).toBeGreaterThan(0,\n            `Expected select panel to be inside the viewport in ltr.`);\n      }));\n\n      it('should stay within the viewport when overflowing on the left in rtl', fakeAsync(() => {\n        dir.value = 'rtl';\n        formField.style.left = '-100px';\n        trigger.click();\n        fixture.detectChanges();\n        flush();\n\n        const panelLeft = document.querySelector('.mat-select-panel')!.getBoundingClientRect().left;\n\n        expect(panelLeft).toBeGreaterThan(0,\n            `Expected select panel to be inside the viewport in rtl.`);\n      }));\n\n      it('should stay within the viewport when overflowing on the right in ltr', fakeAsync(() => {\n        formField.style.right = '-100px';\n        trigger.click();\n        fixture.detectChanges();\n        flush();\n\n        const viewportRect = viewportRuler.getViewportRect().right;\n        const panelRight = document.querySelector('.mat-select-panel')!\n            .getBoundingClientRect().right;\n\n        expect(viewportRect - panelRight).toBeGreaterThan(0,\n            `Expected select panel to be inside the viewport in ltr.`);\n      }));\n\n      it('should stay within the viewport when overflowing on the right in rtl', fakeAsync(() => {\n        dir.value = 'rtl';\n        formField.style.right = '-100px';\n        trigger.click();\n        fixture.detectChanges();\n        flush();\n\n        const viewportRect = viewportRuler.getViewportRect().right;\n        const panelRight = document.querySelector('.mat-select-panel')!\n            .getBoundingClientRect().right;\n\n        expect(viewportRect - panelRight).toBeGreaterThan(0,\n            `Expected select panel to be inside the viewport in rtl.`);\n      }));\n\n      it('should keep the position within the viewport on repeat openings', fakeAsync(() => {\n        formField.style.left = '-100px';\n        trigger.click();\n        fixture.detectChanges();\n        flush();\n\n        let panelLeft = document.querySelector('.mat-select-panel')!.getBoundingClientRect().left;\n\n        expect(panelLeft)\n            .toBeGreaterThanOrEqual(0, `Expected select panel to be inside the viewport.`);\n\n        fixture.componentInstance.select.close();\n        fixture.detectChanges();\n        flush();\n\n        trigger.click();\n        fixture.detectChanges();\n        flush();\n\n        panelLeft = document.querySelector('.mat-select-panel')!.getBoundingClientRect().left;\n\n        expect(panelLeft).toBeGreaterThanOrEqual(0,\n            `Expected select panel continue being inside the viewport.`);\n      }));\n    });\n\n    describe('when scrolled', () => {\n      const startingWindowHeight = window.innerHeight;\n\n      // Need to set the scrollTop two different ways to support\n      // both Chrome and Firefox.\n      function setScrollTop(num: number) {\n        document.body.scrollTop = num;\n        document.documentElement!.scrollTop = num;\n      }\n\n      beforeEach(fakeAsync(() => {\n        // Make the div above the select very tall, so the page will scroll\n        fixture.componentInstance.heightAbove = 2000;\n        fixture.detectChanges();\n        setScrollTop(0);\n\n        // Give the select enough horizontal space to open\n        formField.style.marginLeft = '20px';\n        formField.style.marginRight = '20px';\n      }));\n\n      it('should align the first option properly when scrolled', fakeAsync(() => {\n        // Give the select enough space to open\n        fixture.componentInstance.heightBelow = 400;\n        fixture.detectChanges();\n\n        // Space that is needed in order to show the menu below the trigger.\n        // 256 (height of the menu overlay) - 45 (estimated height of the trigger)\n        const requiredSpaceBelow = 256 - 45;\n\n        // Scroll the select into view. Make sure that there is enough space for the menu\n        // to open below the trigger (depending on the screen resolution)\n        setScrollTop(2000 - requiredSpaceBelow);\n\n\n        // In the iOS simulator (BrowserStack & SauceLabs), adding the content to the\n        // body causes karma's iframe for the test to stretch to fit that content once we attempt to\n        // scroll the page. Setting width / height / maxWidth / maxHeight on the iframe does not\n        // successfully constrain its size. As such, skip assertions in environments where the\n        // window size has changed since the start of the test.\n        if (window.innerHeight > startingWindowHeight) {\n          return;\n        }\n\n        trigger.click();\n        fixture.detectChanges();\n        flush();\n\n        checkTriggerAlignedWithOption(0);\n      }));\n\n      it('should align a centered option properly when scrolled', fakeAsync(() => {\n        // Give the select enough space to open\n        fixture.componentInstance.heightBelow = 400;\n        fixture.detectChanges();\n\n        fixture.componentInstance.control.setValue('chips-4');\n        fixture.detectChanges();\n        flush();\n\n        // Space that is needed in order to show the menu below the trigger.\n        // 256 (height of the menu overlay) - 45 (estimated height of the trigger)\n        // Even though there might be less options displayed below the trigger because the\n        // selected option is the fourth item, we want to make sure we have enough space here.\n        const requiredSpaceBelow = 256 - 45;\n\n        // Scroll the select into view. Make sure that there is enough space for the menu\n        // to open below the trigger (depending on the screen resolution)\n        setScrollTop(2000 - requiredSpaceBelow);\n\n        // In the iOS simulator (BrowserStack & SauceLabs), adding the content to the\n        // body causes karma's iframe for the test to stretch to fit that content once we attempt\n        // to scroll the page. Setting width / height / maxWidth / maxHeight on the iframe does\n        // not successfully constrain its size. As such, skip assertions in environments where the\n        // window size has changed since the start of the test.\n        if (window.innerHeight > startingWindowHeight) {\n          return;\n        }\n\n        trigger.click();\n        fixture.detectChanges();\n        flush();\n\n        checkTriggerAlignedWithOption(4);\n      }));\n\n      it('should align a centered option properly when scrolling while the panel is open',\n          fakeAsync(() => {\n            fixture.componentInstance.heightBelow = 400;\n            fixture.componentInstance.heightAbove = 400;\n            fixture.componentInstance.control.setValue('chips-4');\n            fixture.detectChanges();\n            flush();\n\n            trigger.click();\n            fixture.detectChanges();\n            flush();\n\n            setScrollTop(100);\n            scrolledSubject.next();\n            fixture.detectChanges();\n\n            checkTriggerAlignedWithOption(4);\n          }));\n\n      it('should fall back to \"above\" positioning properly when scrolled', fakeAsync(() => {\n        // Give the select insufficient space to open below the trigger\n        fixture.componentInstance.heightAbove = 0;\n        fixture.componentInstance.heightBelow = 100;\n        trigger.style.marginTop = '2000px';\n        fixture.detectChanges();\n\n        // Scroll the select into view\n        setScrollTop(1400);\n\n        // In the iOS simulator (BrowserStack & SauceLabs), adding the content to the\n        // body causes karma's iframe for the test to stretch to fit that content once we attempt to\n        // scroll the page. Setting width / height / maxWidth / maxHeight on the iframe does not\n        // successfully constrain its size. As such, skip assertions in environments where the\n        // window size has changed since the start of the test.\n        if (window.innerHeight > startingWindowHeight) {\n          return;\n        }\n\n        trigger.click();\n        fixture.detectChanges();\n        flush();\n\n        const overlayPane = overlayContainerElement.querySelector('.cdk-overlay-pane')!;\n        const triggerBottom = trigger.getBoundingClientRect().bottom;\n        const overlayBottom = overlayPane.getBoundingClientRect().bottom;\n        const difference = Math.floor(overlayBottom) - Math.floor(triggerBottom);\n\n        // Check that the values are within a pixel of each other. This avoids sub-pixel\n        // deviations between OS and browser versions.\n        expect(Math.abs(difference) < 2)\n            .toEqual(true, `Expected trigger bottom to align with overlay bottom.`);\n      }));\n\n      it('should fall back to \"below\" positioning properly when scrolled', fakeAsync(() => {\n        // Give plenty of space for the select to open below the trigger\n        fixture.componentInstance.heightBelow = 650;\n        fixture.detectChanges();\n\n        // Select an option too low in the list to fit in limited space above\n        fixture.componentInstance.control.setValue('sushi-7');\n        fixture.detectChanges();\n\n        // Scroll the select so that it has insufficient space to open above the trigger\n        setScrollTop(1950);\n\n        // In the iOS simulator (BrowserStack & SauceLabs), adding the content to the\n        // body causes karma's iframe for the test to stretch to fit that content once we attempt to\n        // scroll the page. Setting width / height / maxWidth / maxHeight on the iframe does not\n        // successfully constrain its size. As such, skip assertions in environments where the\n        // window size has changed since the start of the test.\n        if (window.innerHeight > startingWindowHeight) {\n          return;\n        }\n\n        trigger.click();\n        fixture.detectChanges();\n        flush();\n\n        const overlayPane = overlayContainerElement.querySelector('.cdk-overlay-pane')!;\n        const triggerTop = trigger.getBoundingClientRect().top;\n        const overlayTop = overlayPane.getBoundingClientRect().top;\n\n        expect(Math.floor(overlayTop))\n            .toEqual(Math.floor(triggerTop), `Expected trigger top to align with overlay top.`);\n      }));\n    });\n\n    describe('x-axis positioning', () => {\n      beforeEach(fakeAsync(() => {\n        formField.style.position = 'fixed';\n        formField.style.left = '30px';\n      }));\n\n      it('should align the trigger and the selected option on the x-axis in ltr', fakeAsync(() => {\n        trigger.click();\n        fixture.detectChanges();\n        flush();\n\n        const triggerLeft = trigger.getBoundingClientRect().left;\n        const firstOptionLeft = document.querySelector('.cdk-overlay-pane mat-option')!\n            .getBoundingClientRect().left;\n\n        // Each option is 32px wider than the trigger, so it must be adjusted 16px\n        // to ensure the text overlaps correctly.\n        expect(Math.floor(firstOptionLeft)).toEqual(Math.floor(triggerLeft - 16),\n            `Expected trigger to align with the selected option on the x-axis in LTR.`);\n      }));\n\n      it('should align the trigger and the selected option on the x-axis in rtl', fakeAsync(() => {\n        dir.value = 'rtl';\n        fixture.detectChanges();\n\n        trigger.click();\n        fixture.detectChanges();\n        flush();\n\n        const triggerRight = trigger.getBoundingClientRect().right;\n        const firstOptionRight =\n            document.querySelector('.cdk-overlay-pane mat-option')!.getBoundingClientRect().right;\n\n        // Each option is 32px wider than the trigger, so it must be adjusted 16px\n        // to ensure the text overlaps correctly.\n        expect(Math.floor(firstOptionRight))\n            .toEqual(Math.floor(triggerRight + 16),\n                `Expected trigger to align with the selected option on the x-axis in RTL.`);\n      }));\n    });\n\n    describe('x-axis positioning in multi select mode', () => {\n      let multiFixture: ComponentFixture<MultiSelect>;\n\n      beforeEach(fakeAsync(() => {\n        multiFixture = TestBed.createComponent(MultiSelect);\n        multiFixture.detectChanges();\n        formField = multiFixture.debugElement.query(By.css('.mat-form-field')).nativeElement;\n        trigger = multiFixture.debugElement.query(By.css('.mat-select-trigger')).nativeElement;\n\n        formField.style.position = 'fixed';\n        formField.style.left = '60px';\n      }));\n\n      it('should adjust for the checkbox in ltr', fakeAsync(() => {\n        trigger.click();\n        multiFixture.detectChanges();\n        flush();\n\n        const triggerLeft = trigger.getBoundingClientRect().left;\n        const firstOptionLeft =\n            document.querySelector('.cdk-overlay-pane mat-option')!.getBoundingClientRect().left;\n\n        // 44px accounts for the checkbox size, margin and the panel's padding.\n        expect(Math.floor(firstOptionLeft))\n            .toEqual(Math.floor(triggerLeft - 40),\n                `Expected trigger label to align along x-axis, accounting for the checkbox.`);\n      }));\n\n      it('should adjust for the checkbox in rtl', fakeAsync(() => {\n        dir.value = 'rtl';\n        trigger.click();\n        multiFixture.detectChanges();\n        flush();\n\n        const triggerRight = trigger.getBoundingClientRect().right;\n        const firstOptionRight =\n            document.querySelector('.cdk-overlay-pane mat-option')!.getBoundingClientRect().right;\n\n        // 44px accounts for the checkbox size, margin and the panel's padding.\n        expect(Math.floor(firstOptionRight))\n            .toEqual(Math.floor(triggerRight + 40),\n                `Expected trigger label to align along x-axis, accounting for the checkbox.`);\n      }));\n    });\n\n    describe('x-axis positioning with groups', () => {\n      let groupFixture: ComponentFixture<SelectWithGroups>;\n\n      beforeEach(fakeAsync(() => {\n        groupFixture = TestBed.createComponent(SelectWithGroups);\n        groupFixture.detectChanges();\n        formField = groupFixture.debugElement.query(By.css('.mat-form-field')).nativeElement;\n        trigger = groupFixture.debugElement.query(By.css('.mat-select-trigger')).nativeElement;\n\n        formField.style.position = 'fixed';\n        formField.style.left = '60px';\n      }));\n\n      it('should adjust for the group padding in ltr', fakeAsync(() => {\n        groupFixture.componentInstance.control.setValue('oddish-1');\n        groupFixture.detectChanges();\n\n        trigger.click();\n        groupFixture.detectChanges();\n\n        groupFixture.whenStable().then(() => {\n          const group = document.querySelector('.cdk-overlay-pane mat-optgroup')!;\n          const triggerLeft = trigger.getBoundingClientRect().left;\n          const selectedOptionLeft = group.querySelector('mat-option.mat-selected')!\n              .getBoundingClientRect().left;\n\n          // 32px is the 16px default padding plus 16px of padding when an option is in a group.\n          expect(Math.floor(selectedOptionLeft)).toEqual(Math.floor(triggerLeft - 32),\n              `Expected trigger label to align along x-axis, accounting for the padding in ltr.`);\n        });\n      }));\n\n      it('should adjust for the group padding in rtl', fakeAsync(() => {\n        dir.value = 'rtl';\n        groupFixture.componentInstance.control.setValue('oddish-1');\n        groupFixture.detectChanges();\n\n        trigger.click();\n        groupFixture.detectChanges();\n        flush();\n\n        const group = document.querySelector('.cdk-overlay-pane mat-optgroup')!;\n        const triggerRight = trigger.getBoundingClientRect().right;\n        const selectedOptionRight = group.querySelector('mat-option.mat-selected')!\n            .getBoundingClientRect().right;\n\n        // 32px is the 16px default padding plus 16px of padding when an option is in a group.\n        expect(Math.floor(selectedOptionRight)).toEqual(Math.floor(triggerRight + 32),\n            `Expected trigger label to align along x-axis, accounting for the padding in rtl.`);\n      }));\n\n      it('should not adjust if all options are within a group, except the selected one',\n          fakeAsync(() => {\n            groupFixture.componentInstance.control.setValue('mime-11');\n            groupFixture.detectChanges();\n\n            trigger.click();\n            groupFixture.detectChanges();\n            flush();\n\n            const selected = document.querySelector('.cdk-overlay-pane mat-option.mat-selected')!;\n            const selectedOptionLeft = selected.getBoundingClientRect().left;\n            const triggerLeft = trigger.getBoundingClientRect().left;\n\n            // 16px is the default option padding\n            expect(Math.floor(selectedOptionLeft)).toEqual(Math.floor(triggerLeft - 16));\n          }));\n\n      it('should align the first option to the trigger, if nothing is selected', fakeAsync(() => {\n        // Push down the form field so there is space for the item to completely align.\n        formField.style.top = '100px';\n\n        const menuItemHeight = 48;\n        const triggerFontSize = 16;\n        const triggerLineHeightEm = 1.125;\n        const triggerHeight = triggerFontSize * triggerLineHeightEm;\n\n        trigger.click();\n        groupFixture.detectChanges();\n        flush();\n\n        const triggerTop = trigger.getBoundingClientRect().top;\n\n        const option = overlayContainerElement.querySelector('.cdk-overlay-pane mat-option');\n        const optionTop = option ? option.getBoundingClientRect().top : 0;\n\n        // There appears to be a small rounding error on IE, so we verify that the value is close,\n        // not exact.\n        if (platform.TRIDENT) {\n          let difference =\n              Math.abs(optionTop + (menuItemHeight - triggerHeight) / 2 - triggerTop);\n          expect(difference)\n              .toBeLessThan(0.1, 'Expected trigger to align with the first option.');\n        } else {\n          expect(Math.floor(optionTop + (menuItemHeight - triggerHeight) / 2))\n              .toBe(Math.floor(triggerTop), 'Expected trigger to align with the first option.');\n        }\n      }));\n    });\n  });\n\n  describe('with multiple selection', () => {\n    beforeEach(async(() => configureMatSelectTestingModule([MultiSelect])));\n\n    let fixture: ComponentFixture<MultiSelect>;\n    let testInstance: MultiSelect;\n    let trigger: HTMLElement;\n\n    beforeEach(fakeAsync(() => {\n      fixture = TestBed.createComponent(MultiSelect);\n      testInstance = fixture.componentInstance;\n      fixture.detectChanges();\n\n      trigger = fixture.debugElement.query(By.css('.mat-select-trigger')).nativeElement;\n    }));\n\n    it('should be able to select multiple values', fakeAsync(() => {\n      trigger.click();\n      fixture.detectChanges();\n\n      const options = overlayContainerElement.querySelectorAll('mat-option') as\n          NodeListOf<HTMLElement>;\n\n      options[0].click();\n      options[2].click();\n      options[5].click();\n      fixture.detectChanges();\n\n      expect(testInstance.control.value).toEqual(['steak-0', 'tacos-2', 'eggs-5']);\n    }));\n\n    it('should be able to toggle an option on and off', fakeAsync(() => {\n      trigger.click();\n      fixture.detectChanges();\n\n      const option = overlayContainerElement.querySelector('mat-option') as HTMLElement;\n\n      option.click();\n      fixture.detectChanges();\n\n      expect(testInstance.control.value).toEqual(['steak-0']);\n\n      option.click();\n      fixture.detectChanges();\n\n      expect(testInstance.control.value).toEqual([]);\n    }));\n\n    it('should update the label', fakeAsync(() => {\n      trigger.click();\n      fixture.detectChanges();\n      flush();\n\n      const options = overlayContainerElement.querySelectorAll('mat-option') as\n          NodeListOf<HTMLElement>;\n\n      options[0].click();\n      options[2].click();\n      options[5].click();\n      fixture.detectChanges();\n\n      expect(trigger.textContent).toContain('Steak, Tacos, Eggs');\n\n      options[2].click();\n      fixture.detectChanges();\n\n      expect(trigger.textContent).toContain('Steak, Eggs');\n    }));\n\n    it('should be able to set the selected value by taking an array', fakeAsync(() => {\n      trigger.click();\n      testInstance.control.setValue(['steak-0', 'eggs-5']);\n      fixture.detectChanges();\n\n      const optionNodes = overlayContainerElement.querySelectorAll('mat-option') as\n          NodeListOf<HTMLElement>;\n\n      const optionInstances = testInstance.options.toArray();\n\n      expect(optionNodes[0].classList).toContain('mat-selected');\n      expect(optionNodes[5].classList).toContain('mat-selected');\n\n      expect(optionInstances[0].selected).toBe(true);\n      expect(optionInstances[5].selected).toBe(true);\n    }));\n\n    it('should override the previously-selected value when setting an array', fakeAsync(() => {\n      trigger.click();\n      fixture.detectChanges();\n\n      const options = overlayContainerElement.querySelectorAll('mat-option') as\n          NodeListOf<HTMLElement>;\n\n      options[0].click();\n      fixture.detectChanges();\n\n      expect(options[0].classList).toContain('mat-selected');\n\n      testInstance.control.setValue(['eggs-5']);\n      fixture.detectChanges();\n\n      expect(options[0].classList).not.toContain('mat-selected');\n      expect(options[5].classList).toContain('mat-selected');\n    }));\n\n    it('should not close the panel when clicking on options', fakeAsync(() => {\n      trigger.click();\n      fixture.detectChanges();\n\n      expect(testInstance.select.panelOpen).toBe(true);\n\n      const options = overlayContainerElement.querySelectorAll('mat-option') as\n          NodeListOf<HTMLElement>;\n\n      options[0].click();\n      options[1].click();\n      fixture.detectChanges();\n\n      expect(testInstance.select.panelOpen).toBe(true);\n    }));\n\n    it('should sort the selected options based on their order in the panel', fakeAsync(() => {\n      trigger.click();\n      fixture.detectChanges();\n      flush();\n\n      const options = overlayContainerElement.querySelectorAll('mat-option') as\n          NodeListOf<HTMLElement>;\n\n      options[2].click();\n      options[0].click();\n      options[1].click();\n      fixture.detectChanges();\n\n      expect(trigger.textContent).toContain('Steak, Pizza, Tacos');\n      expect(fixture.componentInstance.control.value).toEqual(['steak-0', 'pizza-1', 'tacos-2']);\n    }));\n\n    it('should sort the selected options in reverse in rtl', fakeAsync(() => {\n      dir.value = 'rtl';\n      trigger.click();\n      fixture.detectChanges();\n      flush();\n\n      const options = overlayContainerElement.querySelectorAll('mat-option') as\n          NodeListOf<HTMLElement>;\n\n      options[2].click();\n      options[0].click();\n      options[1].click();\n      fixture.detectChanges();\n\n      expect(trigger.textContent).toContain('Tacos, Pizza, Steak');\n      expect(fixture.componentInstance.control.value).toEqual(['steak-0', 'pizza-1', 'tacos-2']);\n    }));\n\n    it('should be able to customize the value sorting logic', fakeAsync(() => {\n      fixture.componentInstance.sortComparator = (a, b, optionsArray) => {\n        return optionsArray.indexOf(b) - optionsArray.indexOf(a);\n      };\n      fixture.detectChanges();\n\n      trigger.click();\n      fixture.detectChanges();\n      flush();\n\n      const options = overlayContainerElement.querySelectorAll('mat-option') as\n          NodeListOf<HTMLElement>;\n\n      for (let i = 0; i < 3; i++) {\n        options[i].click();\n      }\n      fixture.detectChanges();\n\n      // Expect the items to be in reverse order.\n      expect(trigger.textContent).toContain('Tacos, Pizza, Steak');\n      expect(fixture.componentInstance.control.value).toEqual(['tacos-2', 'pizza-1', 'steak-0']);\n    }));\n\n    it('should sort the values that get set via the model based on the panel order',\n        fakeAsync(() => {\n          trigger.click();\n          fixture.detectChanges();\n\n          testInstance.control.setValue(['tacos-2', 'steak-0', 'pizza-1']);\n          fixture.detectChanges();\n\n          expect(trigger.textContent).toContain('Steak, Pizza, Tacos');\n        }));\n\n    it('should reverse sort the values, that get set via the model in rtl', fakeAsync(() => {\n      dir.value = 'rtl';\n      trigger.click();\n      fixture.detectChanges();\n\n      testInstance.control.setValue(['tacos-2', 'steak-0', 'pizza-1']);\n      fixture.detectChanges();\n\n      expect(trigger.textContent).toContain('Tacos, Pizza, Steak');\n    }));\n\n    it('should throw an exception when trying to set a non-array value', fakeAsync(() => {\n      expect(() => {\n        testInstance.control.setValue('not-an-array');\n      }).toThrowError(wrappedErrorMessage(getMatSelectNonArrayValueError()));\n    }));\n\n    it('should throw an exception when trying to change multiple mode after init', fakeAsync(() => {\n      expect(() => {\n        testInstance.select.multiple = false;\n      }).toThrowError(wrappedErrorMessage(getMatSelectDynamicMultipleError()));\n    }));\n\n    it('should pass the `multiple` value to all of the option instances', fakeAsync(() => {\n      trigger.click();\n      fixture.detectChanges();\n      flush();\n\n      expect(testInstance.options.toArray().every(option => !!option.multiple)).toBe(true,\n          'Expected `multiple` to have been added to initial set of options.');\n\n      testInstance.foods.push({ value: 'cake-8', viewValue: 'Cake' });\n      fixture.detectChanges();\n\n      expect(testInstance.options.toArray().every(option => !!option.multiple)).toBe(true,\n          'Expected `multiple` to have been set on dynamically-added option.');\n    }));\n\n    it('should update the active item index on click', fakeAsync(() => {\n      trigger.click();\n      fixture.detectChanges();\n      flush();\n\n      expect(fixture.componentInstance.select._keyManager.activeItemIndex).toBe(0);\n\n      const options = overlayContainerElement.querySelectorAll('mat-option') as\n          NodeListOf<HTMLElement>;\n\n      options[2].click();\n      fixture.detectChanges();\n\n      expect(fixture.componentInstance.select._keyManager.activeItemIndex).toBe(2);\n    }));\n\n    it('should be to select an option with a `null` value', fakeAsync(() => {\n      fixture.componentInstance.foods = [\n        { value: null, viewValue: 'Steak' },\n        { value: 'pizza-1', viewValue: 'Pizza' },\n        { value: null, viewValue: 'Tacos' },\n      ];\n\n      fixture.detectChanges();\n      trigger.click();\n      fixture.detectChanges();\n\n      const options = overlayContainerElement.querySelectorAll('mat-option') as\n          NodeListOf<HTMLElement>;\n\n      options[0].click();\n      options[1].click();\n      options[2].click();\n      fixture.detectChanges();\n\n      expect(testInstance.control.value).toEqual([null, 'pizza-1', null]);\n    }));\n\n    it('should select all options when pressing ctrl + a', () => {\n      const selectElement = fixture.nativeElement.querySelector('mat-select');\n      const options = fixture.componentInstance.options.toArray();\n\n      expect(testInstance.control.value).toBeFalsy();\n      expect(options.every(option => option.selected)).toBe(false);\n\n      fixture.componentInstance.select.open();\n      fixture.detectChanges();\n\n      const event = createKeyboardEvent('keydown', A, selectElement);\n      Object.defineProperty(event, 'ctrlKey', {get: () => true});\n      dispatchEvent(selectElement, event);\n      fixture.detectChanges();\n\n      expect(options.every(option => option.selected)).toBe(true);\n      expect(testInstance.control.value).toEqual([\n        'steak-0',\n        'pizza-1',\n        'tacos-2',\n        'sandwich-3',\n        'chips-4',\n        'eggs-5',\n        'pasta-6',\n        'sushi-7'\n      ]);\n    });\n\n    it('should skip disabled options when using ctrl + a', () => {\n      const selectElement = fixture.nativeElement.querySelector('mat-select');\n      const options = fixture.componentInstance.options.toArray();\n\n      for (let i = 0; i < 3; i++) {\n        options[i].disabled = true;\n      }\n\n      expect(testInstance.control.value).toBeFalsy();\n\n      fixture.componentInstance.select.open();\n      fixture.detectChanges();\n\n      const event = createKeyboardEvent('keydown', A, selectElement);\n      Object.defineProperty(event, 'ctrlKey', {get: () => true});\n      dispatchEvent(selectElement, event);\n      fixture.detectChanges();\n\n      expect(testInstance.control.value).toEqual([\n        'sandwich-3',\n        'chips-4',\n        'eggs-5',\n        'pasta-6',\n        'sushi-7'\n      ]);\n    });\n\n    it('should select all options when pressing ctrl + a when some options are selected', () => {\n      const selectElement = fixture.nativeElement.querySelector('mat-select');\n      const options = fixture.componentInstance.options.toArray();\n\n      options[0].select();\n      fixture.detectChanges();\n\n      expect(testInstance.control.value).toEqual(['steak-0']);\n      expect(options.some(option => option.selected)).toBe(true);\n\n      fixture.componentInstance.select.open();\n      fixture.detectChanges();\n\n      const event = createKeyboardEvent('keydown', A, selectElement);\n      Object.defineProperty(event, 'ctrlKey', {get: () => true});\n      dispatchEvent(selectElement, event);\n      fixture.detectChanges();\n\n      expect(options.every(option => option.selected)).toBe(true);\n      expect(testInstance.control.value).toEqual([\n        'steak-0',\n        'pizza-1',\n        'tacos-2',\n        'sandwich-3',\n        'chips-4',\n        'eggs-5',\n        'pasta-6',\n        'sushi-7'\n      ]);\n    });\n\n    it('should deselect all options with ctrl + a if all options are selected', () => {\n      const selectElement = fixture.nativeElement.querySelector('mat-select');\n      const options = fixture.componentInstance.options.toArray();\n\n      options.forEach(option => option.select());\n      fixture.detectChanges();\n\n      expect(testInstance.control.value).toEqual([\n        'steak-0',\n        'pizza-1',\n        'tacos-2',\n        'sandwich-3',\n        'chips-4',\n        'eggs-5',\n        'pasta-6',\n        'sushi-7'\n      ]);\n      expect(options.every(option => option.selected)).toBe(true);\n\n      fixture.componentInstance.select.open();\n      fixture.detectChanges();\n\n      const event = createKeyboardEvent('keydown', A, selectElement);\n      Object.defineProperty(event, 'ctrlKey', {get: () => true});\n      dispatchEvent(selectElement, event);\n      fixture.detectChanges();\n\n      expect(options.some(option => option.selected)).toBe(false);\n      expect(testInstance.control.value).toEqual([]);\n    });\n\n  });\n});\n\n\n@Component({\n  selector: 'basic-select',\n  template: `\n    <div [style.height.px]=\"heightAbove\"></div>\n    <mat-form-field>\n      <mat-select placeholder=\"Food\" [formControl]=\"control\" [required]=\"isRequired\"\n        [tabIndex]=\"tabIndexOverride\" [aria-label]=\"ariaLabel\" [aria-labelledby]=\"ariaLabelledby\"\n        [panelClass]=\"panelClass\" [disableRipple]=\"disableRipple\">\n        <mat-option *ngFor=\"let food of foods\" [value]=\"food.value\" [disabled]=\"food.disabled\">\n          {{ food.viewValue }}\n        </mat-option>\n      </mat-select>\n    </mat-form-field>\n    <div [style.height.px]=\"heightBelow\"></div>\n  `\n})\nclass BasicSelect {\n  foods: any[] = [\n    { value: 'steak-0', viewValue: 'Steak' },\n    { value: 'pizza-1', viewValue: 'Pizza' },\n    { value: 'tacos-2', viewValue: 'Tacos', disabled: true },\n    { value: 'sandwich-3', viewValue: 'Sandwich' },\n    { value: 'chips-4', viewValue: 'Chips' },\n    { value: 'eggs-5', viewValue: 'Eggs' },\n    { value: 'pasta-6', viewValue: 'Pasta' },\n    { value: 'sushi-7', viewValue: 'Sushi' },\n  ];\n  control = new FormControl();\n  isRequired: boolean;\n  heightAbove = 0;\n  heightBelow = 0;\n  tabIndexOverride: number;\n  ariaLabel: string;\n  ariaLabelledby: string;\n  panelClass = ['custom-one', 'custom-two'];\n  disableRipple: boolean;\n\n  @ViewChild(MatSelect) select: MatSelect;\n  @ViewChildren(MatOption) options: QueryList<MatOption>;\n}\n\n@Component({\n  selector: 'ng-model-select',\n  template: `\n    <mat-form-field>\n      <mat-select placeholder=\"Food\" ngModel [disabled]=\"isDisabled\">\n        <mat-option *ngFor=\"let food of foods\"\n                    [value]=\"food.value\">{{ food.viewValue }}\n        </mat-option>\n      </mat-select>\n    </mat-form-field>\n  `\n})\nclass NgModelSelect {\n  foods: any[] = [\n    { value: 'steak-0', viewValue: 'Steak' },\n    { value: 'pizza-1', viewValue: 'Pizza' },\n    { value: 'tacos-2', viewValue: 'Tacos' },\n  ];\n  isDisabled: boolean;\n\n  @ViewChild(MatSelect) select: MatSelect;\n  @ViewChildren(MatOption) options: QueryList<MatOption>;\n}\n\n@Component({\n  selector: 'many-selects',\n  template: `\n    <mat-form-field>\n      <mat-select placeholder=\"First\">\n        <mat-option value=\"one\">one</mat-option>\n        <mat-option value=\"two\">two</mat-option>\n      </mat-select>\n    </mat-form-field>\n    <mat-form-field>\n      <mat-select placeholder=\"Second\">\n        <mat-option value=\"three\">three</mat-option>\n        <mat-option value=\"four\">four</mat-option>\n      </mat-select>\n    </mat-form-field>\n  `\n})\nclass ManySelects {}\n\n@Component({\n  selector: 'ng-if-select',\n  template: `\n    <div *ngIf=\"isShowing\">\n      <mat-form-field>\n        <mat-select placeholder=\"Food I want to eat right now\" [formControl]=\"control\">\n          <mat-option *ngFor=\"let food of foods\" [value]=\"food.value\">\n            {{ food.viewValue }}\n          </mat-option>\n        </mat-select>\n      </mat-form-field>\n    </div>\n  `,\n})\nclass NgIfSelect {\n  isShowing = false;\n  foods: any[] = [\n    { value: 'steak-0', viewValue: 'Steak' },\n    { value: 'pizza-1', viewValue: 'Pizza' },\n    { value: 'tacos-2', viewValue: 'Tacos'}\n  ];\n  control = new FormControl('pizza-1');\n\n  @ViewChild(MatSelect) select: MatSelect;\n}\n\n@Component({\n  selector: 'select-with-change-event',\n  template: `\n    <mat-form-field>\n      <mat-select (selectionChange)=\"changeListener($event)\">\n        <mat-option *ngFor=\"let food of foods\" [value]=\"food\">{{ food }}</mat-option>\n      </mat-select>\n    </mat-form-field>\n  `\n})\nclass SelectWithChangeEvent {\n  foods: string[] = [\n    'steak-0',\n    'pizza-1',\n    'tacos-2',\n    'sandwich-3',\n    'chips-4',\n    'eggs-5',\n    'pasta-6',\n    'sushi-7'\n  ];\n\n  changeListener = jasmine.createSpy('MatSelect change listener');\n}\n\n@Component({\n  selector: 'select-init-without-options',\n  template: `\n    <mat-form-field>\n      <mat-select placeholder=\"Food I want to eat right now\" [formControl]=\"control\">\n        <mat-option *ngFor=\"let food of foods\" [value]=\"food.value\">\n          {{ food.viewValue }}\n        </mat-option>\n      </mat-select>\n    </mat-form-field>\n  `\n})\nclass SelectInitWithoutOptions {\n  foods: any[];\n  control = new FormControl('pizza-1');\n\n  @ViewChild(MatSelect) select: MatSelect;\n  @ViewChildren(MatOption) options: QueryList<MatOption>;\n\n  addOptions() {\n    this.foods = [\n      { value: 'steak-0', viewValue: 'Steak' },\n      { value: 'pizza-1', viewValue: 'Pizza' },\n      { value: 'tacos-2', viewValue: 'Tacos'}\n    ];\n  }\n}\n\n@Component({\n  selector: 'custom-select-accessor',\n  template: `<mat-form-field><mat-select></mat-select></mat-form-field>`,\n  providers: [{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: CustomSelectAccessor,\n    multi: true\n  }]\n})\nclass CustomSelectAccessor implements ControlValueAccessor {\n  @ViewChild(MatSelect) select: MatSelect;\n\n  writeValue: (value?: any) => void = () => {};\n  registerOnChange: (changeFn?: (value: any) => void) => void = () => {};\n  registerOnTouched: (touchedFn?: () => void) => void = () => {};\n}\n\n@Component({\n  selector: 'comp-with-custom-select',\n  template: `<custom-select-accessor [formControl]=\"ctrl\"></custom-select-accessor>`,\n  providers: [{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: CustomSelectAccessor,\n    multi: true\n  }]\n})\nclass CompWithCustomSelect {\n  ctrl = new FormControl('initial value');\n  @ViewChild(CustomSelectAccessor) customAccessor: CustomSelectAccessor;\n}\n\n@Component({\n  selector: 'select-infinite-loop',\n  template: `\n    <mat-form-field>\n      <mat-select [(ngModel)]=\"value\"></mat-select>\n    </mat-form-field>\n    <throws-error-on-init></throws-error-on-init>\n  `\n})\nclass SelectWithErrorSibling {\n  value: string;\n}\n\n@Component({\n  selector: 'throws-error-on-init',\n  template: ''\n})\nclass ThrowsErrorOnInit implements OnInit {\n  ngOnInit() {\n    throw Error('Oh no!');\n  }\n}\n\n@Component({\n  selector: 'basic-select-on-push',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: `\n    <mat-form-field>\n      <mat-select placeholder=\"Food\" [formControl]=\"control\">\n        <mat-option *ngFor=\"let food of foods\" [value]=\"food.value\">\n          {{ food.viewValue }}\n        </mat-option>\n      </mat-select>\n    </mat-form-field>\n  `\n})\nclass BasicSelectOnPush {\n  foods: any[] = [\n    { value: 'steak-0', viewValue: 'Steak' },\n    { value: 'pizza-1', viewValue: 'Pizza' },\n    { value: 'tacos-2', viewValue: 'Tacos' },\n  ];\n  control = new FormControl();\n}\n\n@Component({\n  selector: 'basic-select-on-push-preselected',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: `\n    <mat-form-field>\n      <mat-select placeholder=\"Food\" [formControl]=\"control\">\n        <mat-option *ngFor=\"let food of foods\" [value]=\"food.value\">\n          {{ food.viewValue }}\n        </mat-option>\n      </mat-select>\n    </mat-form-field>\n  `\n})\nclass BasicSelectOnPushPreselected {\n  foods: any[] = [\n    { value: 'steak-0', viewValue: 'Steak' },\n    { value: 'pizza-1', viewValue: 'Pizza' },\n    { value: 'tacos-2', viewValue: 'Tacos' },\n  ];\n  control = new FormControl('pizza-1');\n}\n\n@Component({\n  selector: 'floating-label-select',\n  template: `\n    <mat-form-field [floatLabel]=\"floatLabel\">\n      <mat-select placeholder=\"Food I want to eat right now\" [formControl]=\"control\">\n        <mat-option *ngFor=\"let food of foods\" [value]=\"food.value\">\n          {{ food.viewValue }}\n        </mat-option>\n      </mat-select>\n    </mat-form-field>\n    `,\n})\nclass FloatLabelSelect {\n  floatLabel: FloatLabelType | null = 'auto';\n  control = new FormControl();\n  foods: any[] = [\n    { value: 'steak-0', viewValue: 'Steak' },\n    { value: 'pizza-1', viewValue: 'Pizza' },\n    { value: 'tacos-2', viewValue: 'Tacos'}\n  ];\n\n  @ViewChild(MatSelect) select: MatSelect;\n}\n\n@Component({\n  selector: 'multi-select',\n  template: `\n    <mat-form-field>\n      <mat-select multiple placeholder=\"Food\" [formControl]=\"control\"\n        [sortComparator]=\"sortComparator\">\n        <mat-option *ngFor=\"let food of foods\"\n                    [value]=\"food.value\">{{ food.viewValue }}\n        </mat-option>\n      </mat-select>\n    </mat-form-field>\n  `\n})\nclass MultiSelect {\n  foods: any[] = [\n    { value: 'steak-0', viewValue: 'Steak' },\n    { value: 'pizza-1', viewValue: 'Pizza' },\n    { value: 'tacos-2', viewValue: 'Tacos' },\n    { value: 'sandwich-3', viewValue: 'Sandwich' },\n    { value: 'chips-4', viewValue: 'Chips' },\n    { value: 'eggs-5', viewValue: 'Eggs' },\n    { value: 'pasta-6', viewValue: 'Pasta' },\n    { value: 'sushi-7', viewValue: 'Sushi' },\n  ];\n  control = new FormControl();\n\n  @ViewChild(MatSelect) select: MatSelect;\n  @ViewChildren(MatOption) options: QueryList<MatOption>;\n  sortComparator: (a: MatOption, b: MatOption, options: MatOption[]) => number;\n}\n\n@Component({\n  selector: 'select-with-plain-tabindex',\n  template: `<mat-form-field><mat-select tabindex=\"5\"></mat-select></mat-form-field>`\n})\nclass SelectWithPlainTabindex { }\n\n@Component({\n  selector: 'select-early-sibling-access',\n  template: `\n    <mat-form-field>\n      <mat-select #select=\"matSelect\"></mat-select>\n    </mat-form-field>\n    <div *ngIf=\"select.selected\"></div>\n  `\n})\nclass SelectEarlyAccessSibling { }\n\n@Component({\n  selector: 'basic-select-initially-hidden',\n  template: `\n    <mat-form-field>\n      <mat-select [style.display]=\"isVisible ? 'block' : 'none'\">\n        <mat-option value=\"value\">There are no other options</mat-option>\n      </mat-select>\n    </mat-form-field>\n  `\n})\nclass BasicSelectInitiallyHidden {\n  isVisible = false;\n}\n\n@Component({\n  selector: 'basic-select-no-placeholder',\n  template: `\n    <mat-form-field>\n      <mat-select>\n        <mat-option value=\"value\">There are no other options</mat-option>\n      </mat-select>\n    </mat-form-field>\n  `\n})\nclass BasicSelectNoPlaceholder { }\n\n@Component({\n  selector: 'basic-select-with-theming',\n  template: `\n    <mat-form-field [color]=\"theme\">\n      <mat-select placeholder=\"Food\">\n        <mat-option value=\"steak-0\">Steak</mat-option>\n        <mat-option value=\"pizza-1\">Pizza</mat-option>\n      </mat-select>\n    </mat-form-field>\n  `\n})\nclass BasicSelectWithTheming {\n  @ViewChild(MatSelect) select: MatSelect;\n  theme: string;\n}\n\n@Component({\n  selector: 'reset-values-select',\n  template: `\n    <mat-form-field>\n      <mat-select placeholder=\"Food\" [formControl]=\"control\">\n        <mat-option *ngFor=\"let food of foods\" [value]=\"food.value\">\n          {{ food.viewValue }}\n        </mat-option>\n        <mat-option>None</mat-option>\n      </mat-select>\n    </mat-form-field>\n  `\n})\nclass ResetValuesSelect {\n  foods: any[] = [\n    { value: 'steak-0', viewValue: 'Steak' },\n    { value: 'pizza-1', viewValue: 'Pizza' },\n    { value: 'tacos-2', viewValue: 'Tacos' },\n    { value: false, viewValue: 'Falsy' },\n    { viewValue: 'Undefined' },\n    { value: null, viewValue: 'Null' },\n  ];\n  control = new FormControl();\n\n  @ViewChild(MatSelect) select: MatSelect;\n}\n\n@Component({\n  template: `\n    <mat-form-field>\n      <mat-select [formControl]=\"control\">\n        <mat-option *ngFor=\"let food of foods\"\n                    [value]=\"food.value\">{{ food.viewValue }}\n        </mat-option>\n      </mat-select>\n    </mat-form-field>\n  `\n})\nclass FalsyValueSelect {\n  foods: any[] = [\n    { value: 0, viewValue: 'Steak' },\n    { value: 1, viewValue: 'Pizza' },\n  ];\n  control = new FormControl();\n  @ViewChildren(MatOption) options: QueryList<MatOption>;\n}\n\n@Component({\n  selector: 'select-with-groups',\n  template: `\n    <mat-form-field>\n      <mat-select placeholder=\"Pokemon\" [formControl]=\"control\">\n        <mat-optgroup *ngFor=\"let group of pokemonTypes\" [label]=\"group.name\"\n          [disabled]=\"group.disabled\">\n          <mat-option *ngFor=\"let pokemon of group.pokemon\" [value]=\"pokemon.value\">\n            {{ pokemon.viewValue }}\n          </mat-option>\n        </mat-optgroup>\n        <mat-option value=\"mime-11\">Mr. Mime</mat-option>\n      </mat-select>\n    </mat-form-field>\n  `\n})\nclass SelectWithGroups {\n  control = new FormControl();\n  pokemonTypes = [\n    {\n      name: 'Grass',\n      pokemon: [\n        { value: 'bulbasaur-0', viewValue: 'Bulbasaur' },\n        { value: 'oddish-1', viewValue: 'Oddish' },\n        { value: 'bellsprout-2', viewValue: 'Bellsprout' }\n      ]\n    },\n    {\n      name: 'Water',\n      disabled: true,\n      pokemon: [\n        { value: 'squirtle-3', viewValue: 'Squirtle' },\n        { value: 'psyduck-4', viewValue: 'Psyduck' },\n        { value: 'horsea-5', viewValue: 'Horsea' }\n      ]\n    },\n    {\n      name: 'Fire',\n      pokemon: [\n        { value: 'charmander-6', viewValue: 'Charmander' },\n        { value: 'vulpix-7', viewValue: 'Vulpix' },\n        { value: 'flareon-8', viewValue: 'Flareon' }\n      ]\n    },\n    {\n      name: 'Psychic',\n      pokemon: [\n        { value: 'mew-9', viewValue: 'Mew' },\n        { value: 'mewtwo-10', viewValue: 'Mewtwo' },\n      ]\n    }\n  ];\n\n  @ViewChild(MatSelect) select: MatSelect;\n  @ViewChildren(MatOption) options: QueryList<MatOption>;\n}\n\n@Component({\n  selector: 'select-with-groups',\n  template: `\n    <mat-form-field>\n      <mat-select placeholder=\"Pokemon\" [formControl]=\"control\">\n        <mat-optgroup *ngFor=\"let group of pokemonTypes\" [label]=\"group.name\">\n          <ng-container *ngFor=\"let pokemon of group.pokemon\">\n            <mat-option [value]=\"pokemon.value\">{{ pokemon.viewValue }}</mat-option>\n          </ng-container>\n        </mat-optgroup>\n      </mat-select>\n    </mat-form-field>\n  `\n})\nclass SelectWithGroupsAndNgContainer {\n  control = new FormControl();\n  pokemonTypes = [\n    {\n      name: 'Grass',\n      pokemon: [{ value: 'bulbasaur-0', viewValue: 'Bulbasaur' }]\n    }\n  ];\n}\n\n@Component({\n  template: `\n    <form>\n      <mat-form-field>\n        <mat-select [(ngModel)]=\"value\"></mat-select>\n      </mat-form-field>\n    </form>\n  `\n})\nclass InvalidSelectInForm {\n  value: any;\n}\n\n@Component({\n  template: `\n    <form [formGroup]=\"formGroup\">\n      <mat-form-field>\n        <mat-select placeholder=\"Food\" formControlName=\"food\">\n          <mat-option *ngFor=\"let option of options\" [value]=\"option.value\">\n            {{option.viewValue}}\n          </mat-option>\n        </mat-select>\n\n        <mat-error>This field is required</mat-error>\n      </mat-form-field>\n    </form>\n  `\n})\nclass SelectInsideFormGroup {\n  @ViewChild(FormGroupDirective) formGroupDirective: FormGroupDirective;\n  @ViewChild(MatSelect) select: MatSelect;\n  options = [\n    {value: 'steak-0', viewValue: 'Steak'},\n    {value: 'pizza-1', viewValue: 'Pizza'},\n  ];\n  formControl = new FormControl('', Validators.required);\n  formGroup = new FormGroup({\n    food: this.formControl\n  });\n}\n\n@Component({\n  template: `\n    <mat-form-field>\n      <mat-select placeholder=\"Food\" [(value)]=\"selectedFood\">\n        <mat-option *ngFor=\"let food of foods\" [value]=\"food.value\">\n          {{ food.viewValue }}\n        </mat-option>\n      </mat-select>\n    </mat-form-field>\n  `\n})\nclass BasicSelectWithoutForms {\n  selectedFood: string | null;\n  foods: any[] = [\n    { value: 'steak-0', viewValue: 'Steak' },\n    { value: 'pizza-1', viewValue: 'Pizza' },\n    { value: 'sandwich-2', viewValue: 'Sandwich' },\n  ];\n\n  @ViewChild(MatSelect) select: MatSelect;\n}\n\n@Component({\n  template: `\n    <mat-form-field>\n      <mat-select placeholder=\"Food\" [(value)]=\"selectedFood\">\n        <mat-option *ngFor=\"let food of foods\" [value]=\"food.value\">\n          {{ food.viewValue }}\n        </mat-option>\n      </mat-select>\n    </mat-form-field>\n  `\n})\nclass BasicSelectWithoutFormsPreselected {\n  selectedFood = 'pizza-1';\n  foods: any[] = [\n    { value: 'steak-0', viewValue: 'Steak' },\n    { value: 'pizza-1', viewValue: 'Pizza' },\n  ];\n\n  @ViewChild(MatSelect) select: MatSelect;\n}\n\n@Component({\n  template: `\n    <mat-form-field>\n      <mat-select placeholder=\"Food\" [(value)]=\"selectedFoods\" multiple>\n        <mat-option *ngFor=\"let food of foods\" [value]=\"food.value\">\n          {{ food.viewValue }}\n        </mat-option>\n      </mat-select>\n    </mat-form-field>\n  `\n})\nclass BasicSelectWithoutFormsMultiple {\n  selectedFoods: string[];\n  foods: any[] = [\n    { value: 'steak-0', viewValue: 'Steak' },\n    { value: 'pizza-1', viewValue: 'Pizza' },\n    { value: 'sandwich-2', viewValue: 'Sandwich' },\n  ];\n\n  @ViewChild(MatSelect) select: MatSelect;\n}\n\n@Component({\n  selector: 'select-with-custom-trigger',\n  template: `\n    <mat-form-field>\n      <mat-select placeholder=\"Food\" [formControl]=\"control\" #select=\"matSelect\">\n        <mat-select-trigger>\n          {{ select.selected?.viewValue.split('').reverse().join('') }}\n        </mat-select-trigger>\n        <mat-option *ngFor=\"let food of foods\" [value]=\"food.value\">\n          {{ food.viewValue }}\n        </mat-option>\n      </mat-select>\n    </mat-form-field>\n  `\n})\nclass SelectWithCustomTrigger {\n  foods: any[] = [\n    { value: 'steak-0', viewValue: 'Steak' },\n    { value: 'pizza-1', viewValue: 'Pizza' },\n  ];\n  control = new FormControl();\n}\n\n@Component({\n  selector: 'ng-model-compare-with',\n  template: `\n    <mat-form-field>\n      <mat-select [ngModel]=\"selectedFood\" (ngModelChange)=\"setFoodByCopy($event)\"\n                 [compareWith]=\"comparator\">\n        <mat-option *ngFor=\"let food of foods\" [value]=\"food\">{{ food.viewValue }}</mat-option>\n      </mat-select>\n    </mat-form-field>\n  `\n})\nclass NgModelCompareWithSelect {\n  foods: ({value: string, viewValue: string})[] = [\n    { value: 'steak-0', viewValue: 'Steak' },\n    { value: 'pizza-1', viewValue: 'Pizza' },\n    { value: 'tacos-2', viewValue: 'Tacos' },\n  ];\n  selectedFood: {value: string, viewValue: string} = { value: 'pizza-1', viewValue: 'Pizza' };\n  comparator: ((f1: any, f2: any) => boolean)|null = this.compareByValue;\n\n  @ViewChild(MatSelect) select: MatSelect;\n  @ViewChildren(MatOption) options: QueryList<MatOption>;\n\n  useCompareByValue() { this.comparator = this.compareByValue; }\n\n  useCompareByReference() { this.comparator = this.compareByReference; }\n\n  useNullComparator() { this.comparator = null; }\n\n  compareByValue(f1: any, f2: any) { return f1 && f2 && f1.value === f2.value; }\n\n  compareByReference(f1: any, f2: any) { return f1 === f2; }\n\n  setFoodByCopy(newValue: {value: string, viewValue: string}) {\n    this.selectedFood = {...{}, ...newValue};\n  }\n}\n\n@Component({\n  template: `\n    <mat-select placeholder=\"Food\" [formControl]=\"control\" [errorStateMatcher]=\"errorStateMatcher\">\n      <mat-option *ngFor=\"let food of foods\" [value]=\"food.value\">\n        {{ food.viewValue }}\n      </mat-option>\n    </mat-select>\n  `\n})\nclass CustomErrorBehaviorSelect {\n  @ViewChild(MatSelect) select: MatSelect;\n  control = new FormControl();\n  foods: any[] = [\n    { value: 'steak-0', viewValue: 'Steak' },\n    { value: 'pizza-1', viewValue: 'Pizza' },\n  ];\n  errorStateMatcher: ErrorStateMatcher;\n}\n\n@Component({\n  template: `\n    <mat-form-field>\n      <mat-select placeholder=\"Food\" [(ngModel)]=\"selectedFoods\">\n        <mat-option *ngFor=\"let food of foods\"\n                    [value]=\"food.value\">{{ food.viewValue }}\n        </mat-option>\n      </mat-select>\n    </mat-form-field>\n  `\n})\nclass SingleSelectWithPreselectedArrayValues {\n  foods: any[] = [\n    { value: ['steak-0', 'steak-1'], viewValue: 'Steak' },\n    { value: ['pizza-1', 'pizza-2'], viewValue: 'Pizza' },\n    { value: ['tacos-2', 'tacos-3'], viewValue: 'Tacos' },\n  ];\n\n  selectedFoods = this.foods[1].value;\n\n  @ViewChild(MatSelect) select: MatSelect;\n  @ViewChildren(MatOption) options: QueryList<MatOption>;\n}\n\n@Component({\n  selector: 'select-without-option-centering',\n  template: `\n    <mat-form-field>\n      <mat-select placeholder=\"Food\" [formControl]=\"control\" disableOptionCentering>\n        <mat-option *ngFor=\"let food of foods\" [value]=\"food.value\">\n          {{ food.viewValue }}\n        </mat-option>\n      </mat-select>\n    </mat-form-field>\n  `\n})\nclass SelectWithoutOptionCentering {\n  foods: any[] = [\n    { value: 'steak-0', viewValue: 'Steak' },\n    { value: 'pizza-1', viewValue: 'Pizza' },\n    { value: 'tacos-2', viewValue: 'Tacos'},\n    { value: 'sandwich-3', viewValue: 'Sandwich' },\n    { value: 'chips-4', viewValue: 'Chips' },\n    { value: 'eggs-5', viewValue: 'Eggs' },\n    { value: 'pasta-6', viewValue: 'Pasta' },\n    { value: 'sushi-7', viewValue: 'Sushi' },\n  ];\n  control = new FormControl('pizza-1');\n\n  @ViewChild(MatSelect) select: MatSelect;\n  @ViewChildren(MatOption) options: QueryList<MatOption>;\n}\n\n@Component({\n  template: `\n    <mat-form-field>\n      <mat-label>Select a thing</mat-label>\n\n      <mat-select [placeholder]=\"placeholder\">\n        <mat-option value=\"thing\">A thing</mat-option>\n      </mat-select>\n    </mat-form-field>\n  `\n})\nclass SelectWithFormFieldLabel {\n  placeholder: string;\n}\n"]}