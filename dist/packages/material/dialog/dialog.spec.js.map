{"version":3,"file":"dialog.spec.js","sourceRoot":"","sources":["../../../../src/lib/dialog/dialog.spec.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  ComponentFixture,\n  fakeAsync,\n  flushMicrotasks,\n  inject,\n  TestBed,\n  tick,\n  flush,\n} from '@angular/core/testing';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  Directive,\n  Inject,\n  Injector,\n  NgModule,\n  TemplateRef,\n  ViewChild,\n  ViewContainerRef\n} from '@angular/core';\nimport {By} from '@angular/platform-browser';\nimport {NoopAnimationsModule} from '@angular/platform-browser/animations';\nimport {Location} from '@angular/common';\nimport {SpyLocation} from '@angular/common/testing';\nimport {Directionality} from '@angular/cdk/bidi';\nimport {MatDialogContainer} from './dialog-container';\nimport {OverlayContainer, ScrollStrategy, Overlay} from '@angular/cdk/overlay';\nimport {ScrollDispatcher} from '@angular/cdk/scrolling';\nimport {A, ESCAPE} from '@angular/cdk/keycodes';\nimport {dispatchKeyboardEvent} from '@angular/cdk/testing';\nimport {\n  MAT_DIALOG_DATA,\n  MatDialog,\n  MatDialogModule,\n  MatDialogRef,\n  MAT_DIALOG_DEFAULT_OPTIONS\n} from './index';\nimport {Subject} from 'rxjs';\n\n\ndescribe('MatDialog', () => {\n  let dialog: MatDialog;\n  let overlayContainer: OverlayContainer;\n  let overlayContainerElement: HTMLElement;\n  let scrolledSubject = new Subject();\n\n  let testViewContainerRef: ViewContainerRef;\n  let viewContainerFixture: ComponentFixture<ComponentWithChildViewContainer>;\n  let mockLocation: SpyLocation;\n\n  beforeEach(fakeAsync(() => {\n    TestBed.configureTestingModule({\n      imports: [MatDialogModule, DialogTestModule],\n      providers: [\n        {provide: Location, useClass: SpyLocation},\n        {provide: ScrollDispatcher, useFactory: () => ({\n          scrolled: () => scrolledSubject.asObservable()\n        })},\n      ],\n    });\n\n    TestBed.compileComponents();\n  }));\n\n  beforeEach(inject([MatDialog, Location, OverlayContainer],\n    (d: MatDialog, l: Location, oc: OverlayContainer) => {\n      dialog = d;\n      mockLocation = l as SpyLocation;\n      overlayContainer = oc;\n      overlayContainerElement = oc.getContainerElement();\n    }));\n\n  afterEach(() => {\n    overlayContainer.ngOnDestroy();\n  });\n\n  beforeEach(() => {\n    viewContainerFixture = TestBed.createComponent(ComponentWithChildViewContainer);\n\n    viewContainerFixture.detectChanges();\n    testViewContainerRef = viewContainerFixture.componentInstance.childViewContainer;\n  });\n\n  it('should open a dialog with a component', () => {\n    let dialogRef = dialog.open(PizzaMsg, {\n      viewContainerRef: testViewContainerRef\n    });\n\n    viewContainerFixture.detectChanges();\n\n    expect(overlayContainerElement.textContent).toContain('Pizza');\n    expect(dialogRef.componentInstance instanceof PizzaMsg).toBe(true);\n    expect(dialogRef.componentInstance.dialogRef).toBe(dialogRef);\n\n    viewContainerFixture.detectChanges();\n    let dialogContainerElement = overlayContainerElement.querySelector('mat-dialog-container')!;\n    expect(dialogContainerElement.getAttribute('role')).toBe('dialog');\n  });\n\n  it('should open a dialog with a template', () => {\n    const templateRefFixture = TestBed.createComponent(ComponentWithTemplateRef);\n    templateRefFixture.componentInstance.localValue = 'Bees';\n    templateRefFixture.detectChanges();\n\n    const data = {value: 'Knees'};\n\n    let dialogRef = dialog.open(templateRefFixture.componentInstance.templateRef, { data });\n\n    viewContainerFixture.detectChanges();\n\n    expect(overlayContainerElement.textContent).toContain('Cheese Bees Knees');\n    expect(templateRefFixture.componentInstance.dialogRef).toBe(dialogRef);\n\n    viewContainerFixture.detectChanges();\n\n    let dialogContainerElement = overlayContainerElement.querySelector('mat-dialog-container')!;\n    expect(dialogContainerElement.getAttribute('role')).toBe('dialog');\n\n    dialogRef.close();\n  });\n\n  it('should emit when dialog opening animation is complete', fakeAsync(() => {\n    const dialogRef = dialog.open(PizzaMsg, {viewContainerRef: testViewContainerRef});\n    const spy = jasmine.createSpy('afterOpen spy');\n\n    dialogRef.afterOpened().subscribe(spy);\n\n    viewContainerFixture.detectChanges();\n\n    // callback should not be called before animation is complete\n    expect(spy).not.toHaveBeenCalled();\n\n    flushMicrotasks();\n    expect(spy).toHaveBeenCalled();\n  }));\n\n  it('should use injector from viewContainerRef for DialogInjector', () => {\n    let dialogRef = dialog.open(PizzaMsg, {\n      viewContainerRef: testViewContainerRef\n    });\n\n    viewContainerFixture.detectChanges();\n\n    let dialogInjector = dialogRef.componentInstance.dialogInjector;\n\n    expect(dialogRef.componentInstance.dialogRef).toBe(dialogRef);\n    expect(dialogInjector.get<DirectiveWithViewContainer>(DirectiveWithViewContainer)).toBeTruthy(\n      'Expected the dialog component to be created with the injector from the viewContainerRef.'\n    );\n  });\n\n  it('should open a dialog with a component and no ViewContainerRef', () => {\n    let dialogRef = dialog.open(PizzaMsg);\n\n    viewContainerFixture.detectChanges();\n\n    expect(overlayContainerElement.textContent).toContain('Pizza');\n    expect(dialogRef.componentInstance instanceof PizzaMsg).toBe(true);\n    expect(dialogRef.componentInstance.dialogRef).toBe(dialogRef);\n\n    viewContainerFixture.detectChanges();\n    let dialogContainerElement = overlayContainerElement.querySelector('mat-dialog-container')!;\n    expect(dialogContainerElement.getAttribute('role')).toBe('dialog');\n  });\n\n  it('should apply the configured role to the dialog element', () => {\n    dialog.open(PizzaMsg, { role: 'alertdialog' });\n\n    viewContainerFixture.detectChanges();\n\n    let dialogContainerElement = overlayContainerElement.querySelector('mat-dialog-container')!;\n    expect(dialogContainerElement.getAttribute('role')).toBe('alertdialog');\n  });\n\n  it('should apply the specified `aria-describedby`', () => {\n    dialog.open(PizzaMsg, { ariaDescribedBy: 'description-element' });\n\n    viewContainerFixture.detectChanges();\n\n    let dialogContainerElement = overlayContainerElement.querySelector('mat-dialog-container')!;\n    expect(dialogContainerElement.getAttribute('aria-describedby')).toBe('description-element');\n  });\n\n  it('should close a dialog and get back a result', fakeAsync(() => {\n    let dialogRef = dialog.open(PizzaMsg, { viewContainerRef: testViewContainerRef });\n    let afterCloseCallback = jasmine.createSpy('afterClose callback');\n\n    dialogRef.afterClosed().subscribe(afterCloseCallback);\n    dialogRef.close('Charmander');\n    viewContainerFixture.detectChanges();\n    flush();\n\n    expect(afterCloseCallback).toHaveBeenCalledWith('Charmander');\n    expect(overlayContainerElement.querySelector('mat-dialog-container')).toBeNull();\n  }));\n\n  it('should dispatch the beforeClose and afterClose events when the ' +\n    'overlay is detached externally', fakeAsync(inject([Overlay], (overlay: Overlay) => {\n      const dialogRef = dialog.open(PizzaMsg, {\n        viewContainerRef: testViewContainerRef,\n        scrollStrategy: overlay.scrollStrategies.close()\n      });\n      const beforeCloseCallback = jasmine.createSpy('beforeClosed callback');\n      const afterCloseCallback = jasmine.createSpy('afterClosed callback');\n\n      dialogRef.beforeClose().subscribe(beforeCloseCallback);\n      dialogRef.afterClosed().subscribe(afterCloseCallback);\n\n      scrolledSubject.next();\n      viewContainerFixture.detectChanges();\n      flush();\n\n      expect(beforeCloseCallback).toHaveBeenCalledTimes(1);\n      expect(afterCloseCallback).toHaveBeenCalledTimes(1);\n    })));\n\n  it('should close a dialog and get back a result before it is closed', fakeAsync(() => {\n    const dialogRef = dialog.open(PizzaMsg, {viewContainerRef: testViewContainerRef});\n\n    flush();\n    viewContainerFixture.detectChanges();\n\n    // beforeClose should emit before dialog container is destroyed\n    const beforeCloseHandler = jasmine.createSpy('beforeClose callback').and.callFake(() => {\n      expect(overlayContainerElement.querySelector('mat-dialog-container'))\n          .not.toBeNull('dialog container exists when beforeClose is called');\n    });\n\n    dialogRef.beforeClosed().subscribe(beforeCloseHandler);\n    dialogRef.close('Bulbasaur');\n    viewContainerFixture.detectChanges();\n    flush();\n\n    expect(beforeCloseHandler).toHaveBeenCalledWith('Bulbasaur');\n    expect(overlayContainerElement.querySelector('mat-dialog-container')).toBeNull();\n  }));\n\n  it('should close a dialog via the escape key', fakeAsync(() => {\n    dialog.open(PizzaMsg, {\n      viewContainerRef: testViewContainerRef\n    });\n\n    dispatchKeyboardEvent(document.body, 'keydown', ESCAPE);\n    viewContainerFixture.detectChanges();\n    flush();\n\n    expect(overlayContainerElement.querySelector('mat-dialog-container')).toBeNull();\n  }));\n\n  it('should close from a ViewContainerRef with OnPush change detection', fakeAsync(() => {\n    const onPushFixture = TestBed.createComponent(ComponentWithOnPushViewContainer);\n\n    onPushFixture.detectChanges();\n\n    const dialogRef = dialog.open(PizzaMsg, {\n      viewContainerRef: onPushFixture.componentInstance.viewContainerRef\n    });\n\n    flushMicrotasks();\n    onPushFixture.detectChanges();\n    flushMicrotasks();\n\n    expect(overlayContainerElement.querySelectorAll('mat-dialog-container').length)\n        .toBe(1, 'Expected one open dialog.');\n\n    dialogRef.close();\n    flushMicrotasks();\n    onPushFixture.detectChanges();\n    tick(500);\n\n    expect(overlayContainerElement.querySelectorAll('mat-dialog-container').length)\n        .toBe(0, 'Expected no open dialogs.');\n  }));\n\n  it('should close when clicking on the overlay backdrop', fakeAsync(() => {\n    dialog.open(PizzaMsg, {\n      viewContainerRef: testViewContainerRef\n    });\n\n    viewContainerFixture.detectChanges();\n\n    let backdrop = overlayContainerElement.querySelector('.cdk-overlay-backdrop') as HTMLElement;\n\n    backdrop.click();\n    viewContainerFixture.detectChanges();\n    flush();\n\n    expect(overlayContainerElement.querySelector('mat-dialog-container')).toBeFalsy();\n  }));\n\n  it('should emit the backdropClick stream when clicking on the overlay backdrop', fakeAsync(() => {\n    const dialogRef = dialog.open(PizzaMsg, {\n      viewContainerRef: testViewContainerRef\n    });\n\n    const spy = jasmine.createSpy('backdropClick spy');\n    dialogRef.backdropClick().subscribe(spy);\n\n    viewContainerFixture.detectChanges();\n\n    let backdrop = overlayContainerElement.querySelector('.cdk-overlay-backdrop') as HTMLElement;\n\n    backdrop.click();\n    expect(spy).toHaveBeenCalledTimes(1);\n\n    viewContainerFixture.detectChanges();\n    flush();\n\n    // Additional clicks after the dialog has closed should not be emitted\n    backdrop.click();\n    expect(spy).toHaveBeenCalledTimes(1);\n  }));\n\n  it('should emit the keyboardEvent stream when key events target the overlay', fakeAsync(() => {\n    const dialogRef = dialog.open(PizzaMsg, {viewContainerRef: testViewContainerRef});\n\n    const spy = jasmine.createSpy('keyboardEvent spy');\n    dialogRef.keydownEvents().subscribe(spy);\n\n    viewContainerFixture.detectChanges();\n\n    let backdrop = overlayContainerElement.querySelector('.cdk-overlay-backdrop') as HTMLElement;\n    let container = overlayContainerElement.querySelector('mat-dialog-container') as HTMLElement;\n    dispatchKeyboardEvent(document.body, 'keydown', A);\n    dispatchKeyboardEvent(document.body, 'keydown', A, backdrop);\n    dispatchKeyboardEvent(document.body, 'keydown', A, container);\n\n    expect(spy).toHaveBeenCalledTimes(3);\n  }));\n\n  it('should notify the observers if a dialog has been opened', () => {\n    dialog.afterOpened.subscribe(ref => {\n      expect(dialog.open(PizzaMsg, {\n        viewContainerRef: testViewContainerRef\n      })).toBe(ref);\n    });\n  });\n\n  it('should notify the observers if all open dialogs have finished closing', fakeAsync(() => {\n    const ref1 = dialog.open(PizzaMsg, { viewContainerRef: testViewContainerRef });\n    const ref2 = dialog.open(ContentElementDialog, { viewContainerRef: testViewContainerRef });\n    const spy = jasmine.createSpy('afterAllClosed spy');\n\n    dialog.afterAllClosed.subscribe(spy);\n\n    ref1.close();\n    viewContainerFixture.detectChanges();\n    flush();\n\n    expect(spy).not.toHaveBeenCalled();\n\n    ref2.close();\n    viewContainerFixture.detectChanges();\n    flush();\n    expect(spy).toHaveBeenCalled();\n  }));\n\n  it('should emit the afterAllClosed stream on subscribe if there are no open dialogs', () => {\n    const spy = jasmine.createSpy('afterAllClosed spy');\n\n    dialog.afterAllClosed.subscribe(spy);\n\n    expect(spy).toHaveBeenCalled();\n  });\n\n  it('should override the width of the overlay pane', () => {\n    dialog.open(PizzaMsg, {\n      width: '500px'\n    });\n\n    viewContainerFixture.detectChanges();\n\n    let overlayPane = overlayContainerElement.querySelector('.cdk-overlay-pane') as HTMLElement;\n\n    expect(overlayPane.style.width).toBe('500px');\n  });\n\n  it('should override the height of the overlay pane', () => {\n    dialog.open(PizzaMsg, {\n      height: '100px'\n    });\n\n    viewContainerFixture.detectChanges();\n\n    let overlayPane = overlayContainerElement.querySelector('.cdk-overlay-pane') as HTMLElement;\n\n    expect(overlayPane.style.height).toBe('100px');\n  });\n\n  it('should override the min-width of the overlay pane', () => {\n    dialog.open(PizzaMsg, {\n      minWidth: '500px'\n    });\n\n    viewContainerFixture.detectChanges();\n\n    let overlayPane = overlayContainerElement.querySelector('.cdk-overlay-pane') as HTMLElement;\n\n    expect(overlayPane.style.minWidth).toBe('500px');\n  });\n\n  it('should override the max-width of the overlay pane', fakeAsync(() => {\n    let dialogRef = dialog.open(PizzaMsg);\n\n    viewContainerFixture.detectChanges();\n\n    let overlayPane = overlayContainerElement.querySelector('.cdk-overlay-pane') as HTMLElement;\n\n    expect(overlayPane.style.maxWidth).toBe('80vw',\n      'Expected dialog to set a default max-width on overlay pane');\n\n    dialogRef.close();\n\n    tick(500);\n    viewContainerFixture.detectChanges();\n    flushMicrotasks();\n\n    dialogRef = dialog.open(PizzaMsg, {\n      maxWidth: '100px'\n    });\n\n    viewContainerFixture.detectChanges();\n\n    overlayPane = overlayContainerElement.querySelector('.cdk-overlay-pane') as HTMLElement;\n\n    expect(overlayPane.style.maxWidth).toBe('100px');\n  }));\n\n  it('should override the min-height of the overlay pane', () => {\n    dialog.open(PizzaMsg, {\n      minHeight: '300px'\n    });\n\n    viewContainerFixture.detectChanges();\n\n    let overlayPane = overlayContainerElement.querySelector('.cdk-overlay-pane') as HTMLElement;\n\n    expect(overlayPane.style.minHeight).toBe('300px');\n  });\n\n  it('should override the max-height of the overlay pane', () => {\n    dialog.open(PizzaMsg, {\n      maxHeight: '100px'\n    });\n\n    viewContainerFixture.detectChanges();\n\n    let overlayPane = overlayContainerElement.querySelector('.cdk-overlay-pane') as HTMLElement;\n\n    expect(overlayPane.style.maxHeight).toBe('100px');\n  });\n\n  it('should override the top offset of the overlay pane', () => {\n    dialog.open(PizzaMsg, {\n      position: {\n        top: '100px'\n      }\n    });\n\n    viewContainerFixture.detectChanges();\n\n    let overlayPane = overlayContainerElement.querySelector('.cdk-overlay-pane') as HTMLElement;\n\n    expect(overlayPane.style.marginTop).toBe('100px');\n  });\n\n  it('should override the bottom offset of the overlay pane', () => {\n    dialog.open(PizzaMsg, {\n      position: {\n        bottom: '200px'\n      }\n    });\n\n    viewContainerFixture.detectChanges();\n\n    let overlayPane = overlayContainerElement.querySelector('.cdk-overlay-pane') as HTMLElement;\n\n    expect(overlayPane.style.marginBottom).toBe('200px');\n  });\n\n  it('should override the left offset of the overlay pane', () => {\n    dialog.open(PizzaMsg, {\n      position: {\n        left: '250px'\n      }\n    });\n\n    viewContainerFixture.detectChanges();\n\n    let overlayPane = overlayContainerElement.querySelector('.cdk-overlay-pane') as HTMLElement;\n\n    expect(overlayPane.style.marginLeft).toBe('250px');\n  });\n\n  it('should override the right offset of the overlay pane', () => {\n    dialog.open(PizzaMsg, {\n      position: {\n        right: '125px'\n      }\n    });\n\n    viewContainerFixture.detectChanges();\n\n    let overlayPane = overlayContainerElement.querySelector('.cdk-overlay-pane') as HTMLElement;\n\n    expect(overlayPane.style.marginRight).toBe('125px');\n  });\n\n  it('should allow for the position to be updated', () => {\n    let dialogRef = dialog.open(PizzaMsg, {\n      position: {\n        left: '250px'\n      }\n    });\n\n    viewContainerFixture.detectChanges();\n\n    let overlayPane = overlayContainerElement.querySelector('.cdk-overlay-pane') as HTMLElement;\n\n    expect(overlayPane.style.marginLeft).toBe('250px');\n\n    dialogRef.updatePosition({ left: '500px' });\n\n    expect(overlayPane.style.marginLeft).toBe('500px');\n  });\n\n  it('should allow for the dimensions to be updated', () => {\n    let dialogRef = dialog.open(PizzaMsg, { width: '100px' });\n\n    viewContainerFixture.detectChanges();\n\n    let overlayPane = overlayContainerElement.querySelector('.cdk-overlay-pane') as HTMLElement;\n\n    expect(overlayPane.style.width).toBe('100px');\n\n    dialogRef.updateSize('200px');\n\n    expect(overlayPane.style.width).toBe('200px');\n  });\n\n  it('should reset the overlay dimensions to their initial size', () => {\n    let dialogRef = dialog.open(PizzaMsg);\n\n    viewContainerFixture.detectChanges();\n\n    let overlayPane = overlayContainerElement.querySelector('.cdk-overlay-pane') as HTMLElement;\n\n    expect(overlayPane.style.width).toBeFalsy();\n    expect(overlayPane.style.height).toBeFalsy();\n\n    dialogRef.updateSize('200px', '200px');\n\n    expect(overlayPane.style.width).toBe('200px');\n    expect(overlayPane.style.height).toBe('200px');\n\n    dialogRef.updateSize();\n\n    expect(overlayPane.style.width).toBeFalsy();\n    expect(overlayPane.style.height).toBeFalsy();\n  });\n\n  it('should allow setting the layout direction', () => {\n    dialog.open(PizzaMsg, { direction: 'rtl' });\n\n    viewContainerFixture.detectChanges();\n\n    let overlayPane = overlayContainerElement.querySelector('.cdk-global-overlay-wrapper')!;\n\n    expect(overlayPane.getAttribute('dir')).toBe('rtl');\n  });\n\n  it('should inject the correct layout direction in the component instance', () => {\n    const dialogRef = dialog.open(PizzaMsg, { direction: 'rtl' });\n\n    viewContainerFixture.detectChanges();\n\n    expect(dialogRef.componentInstance.directionality.value).toBe('rtl');\n  });\n\n  it('should fall back to injecting the global direction if none is passed by the config', () => {\n    const dialogRef = dialog.open(PizzaMsg, {});\n\n    viewContainerFixture.detectChanges();\n\n    expect(dialogRef.componentInstance.directionality.value).toBe('ltr');\n  });\n\n  it('should close all of the dialogs', fakeAsync(() => {\n    dialog.open(PizzaMsg);\n    dialog.open(PizzaMsg);\n    dialog.open(PizzaMsg);\n\n    expect(overlayContainerElement.querySelectorAll('mat-dialog-container').length).toBe(3);\n\n    dialog.closeAll();\n    viewContainerFixture.detectChanges();\n    flush();\n\n    expect(overlayContainerElement.querySelectorAll('mat-dialog-container').length).toBe(0);\n  }));\n\n  it('should set the proper animation states', () => {\n    let dialogRef = dialog.open(PizzaMsg, { viewContainerRef: testViewContainerRef });\n    let dialogContainer: MatDialogContainer =\n        viewContainerFixture.debugElement.query(By.directive(MatDialogContainer)).componentInstance;\n\n    expect(dialogContainer._state).toBe('enter');\n\n    dialogRef.close();\n\n    expect(dialogContainer._state).toBe('exit');\n  });\n\n  it('should close all dialogs when the user goes forwards/backwards in history', fakeAsync(() => {\n    dialog.open(PizzaMsg);\n    dialog.open(PizzaMsg);\n\n    expect(overlayContainerElement.querySelectorAll('mat-dialog-container').length).toBe(2);\n\n    mockLocation.simulateUrlPop('');\n    viewContainerFixture.detectChanges();\n    flush();\n\n    expect(overlayContainerElement.querySelectorAll('mat-dialog-container').length).toBe(0);\n  }));\n\n  it('should close all open dialogs when the location hash changes', fakeAsync(() => {\n    dialog.open(PizzaMsg);\n    dialog.open(PizzaMsg);\n\n    expect(overlayContainerElement.querySelectorAll('mat-dialog-container').length).toBe(2);\n\n    mockLocation.simulateHashChange('');\n    viewContainerFixture.detectChanges();\n    flush();\n\n    expect(overlayContainerElement.querySelectorAll('mat-dialog-container').length).toBe(0);\n  }));\n\n  it('should close all of the dialogs when the injectable is destroyed', fakeAsync(() => {\n    dialog.open(PizzaMsg);\n    dialog.open(PizzaMsg);\n    dialog.open(PizzaMsg);\n\n    expect(overlayContainerElement.querySelectorAll('mat-dialog-container').length).toBe(3);\n\n    dialog.ngOnDestroy();\n    viewContainerFixture.detectChanges();\n    flush();\n\n    expect(overlayContainerElement.querySelectorAll('mat-dialog-container').length).toBe(0);\n  }));\n\n  it('should complete open and close streams when the injectable is destroyed', fakeAsync(() => {\n    const afterOpenedSpy = jasmine.createSpy('after opened spy');\n    const afterAllClosedSpy = jasmine.createSpy('after all closed spy');\n    const afterOpenedSubscription = dialog.afterOpened.subscribe({complete: afterOpenedSpy});\n    const afterAllClosedSubscription = dialog.afterAllClosed.subscribe({\n      complete: afterAllClosedSpy\n    });\n\n    dialog.ngOnDestroy();\n\n    expect(afterOpenedSpy).toHaveBeenCalled();\n    expect(afterAllClosedSpy).toHaveBeenCalled();\n\n    afterOpenedSubscription.unsubscribe();\n    afterAllClosedSubscription.unsubscribe();\n  }));\n\n  it('should allow the consumer to disable closing a dialog on navigation', fakeAsync(() => {\n    dialog.open(PizzaMsg);\n    dialog.open(PizzaMsg, {closeOnNavigation: false});\n\n    expect(overlayContainerElement.querySelectorAll('mat-dialog-container').length).toBe(2);\n\n    mockLocation.simulateUrlPop('');\n    viewContainerFixture.detectChanges();\n    flush();\n\n    expect(overlayContainerElement.querySelectorAll('mat-dialog-container').length).toBe(1);\n  }));\n\n  it('should have the componentInstance available in the afterClosed callback', fakeAsync(() => {\n    let dialogRef = dialog.open(PizzaMsg);\n    let spy = jasmine.createSpy('afterClosed spy');\n\n    flushMicrotasks();\n    viewContainerFixture.detectChanges();\n    flushMicrotasks();\n\n    dialogRef.afterClosed().subscribe(() => {\n      spy();\n      expect(dialogRef.componentInstance).toBeTruthy('Expected component instance to be defined.');\n    });\n\n    dialogRef.close();\n\n    flushMicrotasks();\n    viewContainerFixture.detectChanges();\n    tick(500);\n\n    // Ensure that the callback actually fires.\n    expect(spy).toHaveBeenCalled();\n  }));\n\n  it('should be able to attach a custom scroll strategy', fakeAsync(() => {\n    const scrollStrategy: ScrollStrategy = {\n      attach: () => {},\n      enable: jasmine.createSpy('scroll strategy enable spy'),\n      disable: () => {}\n    };\n\n    dialog.open(PizzaMsg, {scrollStrategy});\n    expect(scrollStrategy.enable).toHaveBeenCalled();\n  }));\n\n  describe('passing in data', () => {\n    it('should be able to pass in data', () => {\n      let config = {\n        data: {\n          stringParam: 'hello',\n          dateParam: new Date()\n        }\n      };\n\n      let instance = dialog.open(DialogWithInjectedData, config).componentInstance;\n\n      expect(instance.data.stringParam).toBe(config.data.stringParam);\n      expect(instance.data.dateParam).toBe(config.data.dateParam);\n    });\n\n    it('should default to null if no data is passed', () => {\n      expect(() => {\n        let dialogRef = dialog.open(DialogWithInjectedData);\n        expect(dialogRef.componentInstance.data).toBeNull();\n      }).not.toThrow();\n    });\n  });\n\n  it('should not keep a reference to the component after the dialog is closed', fakeAsync(() => {\n    let dialogRef = dialog.open(PizzaMsg);\n\n    expect(dialogRef.componentInstance).toBeTruthy();\n\n    dialogRef.close();\n    viewContainerFixture.detectChanges();\n    flush();\n\n    expect(dialogRef.componentInstance).toBeFalsy('Expected reference to have been cleared.');\n  }));\n\n  it('should assign a unique id to each dialog', () => {\n    const one = dialog.open(PizzaMsg);\n    const two = dialog.open(PizzaMsg);\n\n    expect(one.id).toBeTruthy();\n    expect(two.id).toBeTruthy();\n    expect(one.id).not.toBe(two.id);\n  });\n\n  it('should allow for the id to be overwritten', () => {\n    const dialogRef = dialog.open(PizzaMsg, { id: 'pizza' });\n    expect(dialogRef.id).toBe('pizza');\n  });\n\n  it('should throw when trying to open a dialog with the same id as another dialog', () => {\n    dialog.open(PizzaMsg, { id: 'pizza' });\n    expect(() => dialog.open(PizzaMsg, { id: 'pizza' })).toThrowError(/must be unique/g);\n  });\n\n  it('should be able to find a dialog by id', () => {\n    const dialogRef = dialog.open(PizzaMsg, { id: 'pizza' });\n    expect(dialog.getDialogById('pizza')).toBe(dialogRef);\n  });\n\n  it('should toggle `aria-hidden` on the overlay container siblings', fakeAsync(() => {\n    const sibling = document.createElement('div');\n    overlayContainerElement.parentNode!.appendChild(sibling);\n\n    const dialogRef = dialog.open(PizzaMsg, {viewContainerRef: testViewContainerRef});\n    viewContainerFixture.detectChanges();\n    flush();\n\n    expect(sibling.getAttribute('aria-hidden')).toBe('true', 'Expected sibling to be hidden');\n    expect(overlayContainerElement.hasAttribute('aria-hidden'))\n        .toBe(false, 'Expected overlay container not to be hidden.');\n\n    dialogRef.close();\n    viewContainerFixture.detectChanges();\n    flush();\n\n    expect(sibling.hasAttribute('aria-hidden'))\n        .toBe(false, 'Expected sibling to no longer be hidden.');\n    sibling.parentNode!.removeChild(sibling);\n  }));\n\n  it('should restore `aria-hidden` to the overlay container siblings on close', fakeAsync(() => {\n    const sibling = document.createElement('div');\n\n    sibling.setAttribute('aria-hidden', 'true');\n    overlayContainerElement.parentNode!.appendChild(sibling);\n\n    const dialogRef = dialog.open(PizzaMsg, {viewContainerRef: testViewContainerRef});\n    viewContainerFixture.detectChanges();\n    flush();\n\n    expect(sibling.getAttribute('aria-hidden')).toBe('true', 'Expected sibling to be hidden.');\n\n    dialogRef.close();\n    viewContainerFixture.detectChanges();\n    flush();\n\n    expect(sibling.getAttribute('aria-hidden')).toBe('true', 'Expected sibling to remain hidden.');\n    sibling.parentNode!.removeChild(sibling);\n  }));\n\n  it('should not set `aria-hidden` on `aria-live` elements', fakeAsync(() => {\n    const sibling = document.createElement('div');\n\n    sibling.setAttribute('aria-live', 'polite');\n    overlayContainerElement.parentNode!.appendChild(sibling);\n\n    dialog.open(PizzaMsg, {viewContainerRef: testViewContainerRef});\n    viewContainerFixture.detectChanges();\n    flush();\n\n    expect(sibling.hasAttribute('aria-hidden'))\n        .toBe(false, 'Expected live element not to be hidden.');\n    sibling.parentNode!.removeChild(sibling);\n  }));\n\n  it('should add and remove classes while open', () => {\n    let dialogRef = dialog.open(PizzaMsg, {\n      disableClose: true,\n      viewContainerRef: testViewContainerRef\n    });\n\n    const pane = overlayContainerElement.querySelector('.cdk-overlay-pane') as HTMLElement;\n    expect(pane.classList)\n      .not.toContain('custom-class-one', 'Expected class to be initially missing');\n\n    dialogRef.addPanelClass('custom-class-one');\n    expect(pane.classList).toContain('custom-class-one', 'Expected class to be added');\n\n    dialogRef.removePanelClass('custom-class-one');\n    expect(pane.classList).not.toContain('custom-class-one', 'Expected class to be removed');\n  });\n\n  describe('disableClose option', () => {\n    it('should prevent closing via clicks on the backdrop', fakeAsync(() => {\n      dialog.open(PizzaMsg, {\n        disableClose: true,\n        viewContainerRef: testViewContainerRef\n      });\n\n      viewContainerFixture.detectChanges();\n\n      let backdrop = overlayContainerElement.querySelector('.cdk-overlay-backdrop') as HTMLElement;\n      backdrop.click();\n      viewContainerFixture.detectChanges();\n      flush();\n\n      expect(overlayContainerElement.querySelector('mat-dialog-container')).toBeTruthy();\n    }));\n\n    it('should prevent closing via the escape key', fakeAsync(() => {\n      dialog.open(PizzaMsg, {\n        disableClose: true,\n        viewContainerRef: testViewContainerRef\n      });\n\n      viewContainerFixture.detectChanges();\n      dispatchKeyboardEvent(document.body, 'keydown', ESCAPE);\n      viewContainerFixture.detectChanges();\n      flush();\n\n      expect(overlayContainerElement.querySelector('mat-dialog-container')).toBeTruthy();\n    }));\n\n    it('should allow for the disableClose option to be updated while open', fakeAsync(() => {\n      let dialogRef = dialog.open(PizzaMsg, {\n        disableClose: true,\n        viewContainerRef: testViewContainerRef\n      });\n\n      viewContainerFixture.detectChanges();\n\n      let backdrop = overlayContainerElement.querySelector('.cdk-overlay-backdrop') as HTMLElement;\n      backdrop.click();\n\n      expect(overlayContainerElement.querySelector('mat-dialog-container')).toBeTruthy();\n\n      dialogRef.disableClose = false;\n      backdrop.click();\n      viewContainerFixture.detectChanges();\n      flush();\n\n      expect(overlayContainerElement.querySelector('mat-dialog-container')).toBeFalsy();\n    }));\n  });\n\n  describe('hasBackdrop option', () => {\n    it('should have a backdrop', () => {\n      dialog.open(PizzaMsg, {\n        hasBackdrop: true,\n        viewContainerRef: testViewContainerRef\n      });\n\n      viewContainerFixture.detectChanges();\n\n      expect(overlayContainerElement.querySelector('.cdk-overlay-backdrop')).toBeTruthy();\n    });\n\n    it('should not have a backdrop', () => {\n      dialog.open(PizzaMsg, {\n        hasBackdrop: false,\n        viewContainerRef: testViewContainerRef\n      });\n\n      viewContainerFixture.detectChanges();\n\n      expect(overlayContainerElement.querySelector('.cdk-overlay-backdrop')).toBeFalsy();\n    });\n  });\n\n  describe('panelClass option', () => {\n    it('should have custom panel class', () => {\n      dialog.open(PizzaMsg, {\n        panelClass: 'custom-panel-class',\n        viewContainerRef: testViewContainerRef\n      });\n\n      viewContainerFixture.detectChanges();\n\n      expect(overlayContainerElement.querySelector('.custom-panel-class')).toBeTruthy();\n    });\n  });\n\n  describe('backdropClass option', () => {\n    it('should have default backdrop class', () => {\n      dialog.open(PizzaMsg, {\n        backdropClass: '',\n        viewContainerRef: testViewContainerRef\n      });\n\n      viewContainerFixture.detectChanges();\n\n      expect(overlayContainerElement.querySelector('.cdk-overlay-dark-backdrop')).toBeTruthy();\n    });\n\n    it('should have custom backdrop class', () => {\n      dialog.open(PizzaMsg, {\n        backdropClass: 'custom-backdrop-class',\n        viewContainerRef: testViewContainerRef\n      });\n\n      viewContainerFixture.detectChanges();\n\n      expect(overlayContainerElement.querySelector('.custom-backdrop-class')).toBeTruthy();\n    });\n  });\n\n  describe('focus management', () => {\n    // When testing focus, all of the elements must be in the DOM.\n    beforeEach(() => document.body.appendChild(overlayContainerElement));\n    afterEach(() => document.body.removeChild(overlayContainerElement));\n\n    it('should focus the first tabbable element of the dialog on open', fakeAsync(() => {\n      dialog.open(PizzaMsg, {\n        viewContainerRef: testViewContainerRef\n      });\n\n      viewContainerFixture.detectChanges();\n      flushMicrotasks();\n\n      expect(document.activeElement!.tagName)\n          .toBe('INPUT', 'Expected first tabbable element (input) in the dialog to be focused.');\n    }));\n\n    it('should allow disabling focus of the first tabbable element', fakeAsync(() => {\n      dialog.open(PizzaMsg, {\n        viewContainerRef: testViewContainerRef,\n        autoFocus: false\n      });\n\n      viewContainerFixture.detectChanges();\n      flushMicrotasks();\n\n      expect(document.activeElement!.tagName).not.toBe('INPUT');\n    }));\n\n    it('should re-focus trigger element when dialog closes', fakeAsync(() => {\n      // Create a element that has focus before the dialog is opened.\n      let button = document.createElement('button');\n      button.id = 'dialog-trigger';\n      document.body.appendChild(button);\n      button.focus();\n\n      let dialogRef = dialog.open(PizzaMsg, { viewContainerRef: testViewContainerRef });\n\n      flushMicrotasks();\n      viewContainerFixture.detectChanges();\n      flushMicrotasks();\n\n      expect(document.activeElement!.id)\n          .not.toBe('dialog-trigger', 'Expected the focus to change when dialog was opened.');\n\n      dialogRef.close();\n      expect(document.activeElement!.id).not.toBe('dialog-trigger',\n          'Expcted the focus not to have changed before the animation finishes.');\n\n      flushMicrotasks();\n      viewContainerFixture.detectChanges();\n      tick(500);\n\n      expect(document.activeElement!.id).toBe('dialog-trigger',\n          'Expected that the trigger was refocused after the dialog is closed.');\n\n      document.body.removeChild(button);\n    }));\n\n    it('should allow the consumer to shift focus in afterClosed', fakeAsync(() => {\n      // Create a element that has focus before the dialog is opened.\n      let button = document.createElement('button');\n      let input = document.createElement('input');\n\n      button.id = 'dialog-trigger';\n      input.id = 'input-to-be-focused';\n\n      document.body.appendChild(button);\n      document.body.appendChild(input);\n      button.focus();\n\n      let dialogRef = dialog.open(PizzaMsg, { viewContainerRef: testViewContainerRef });\n\n      tick(500);\n      viewContainerFixture.detectChanges();\n\n      dialogRef.afterClosed().subscribe(() => input.focus());\n      dialogRef.close();\n\n      tick(500);\n      viewContainerFixture.detectChanges();\n      flushMicrotasks();\n\n      expect(document.activeElement!.id).toBe('input-to-be-focused',\n          'Expected that the trigger was refocused after the dialog is closed.');\n\n      document.body.removeChild(button);\n      document.body.removeChild(input);\n    }));\n\n    it('should move focus to the container if there are no focusable elements in the dialog',\n      fakeAsync(() => {\n        dialog.open(DialogWithoutFocusableElements);\n\n        viewContainerFixture.detectChanges();\n        flushMicrotasks();\n\n        expect(document.activeElement!.tagName)\n            .toBe('MAT-DIALOG-CONTAINER', 'Expected dialog container to be focused.');\n      }));\n\n    it('should be able to disable focus restoration', fakeAsync(() => {\n      // Create a element that has focus before the dialog is opened.\n      const button = document.createElement('button');\n      button.id = 'dialog-trigger';\n      document.body.appendChild(button);\n      button.focus();\n\n      const dialogRef = dialog.open(PizzaMsg, {\n        viewContainerRef: testViewContainerRef,\n        restoreFocus: false\n      });\n\n      flushMicrotasks();\n      viewContainerFixture.detectChanges();\n      flushMicrotasks();\n\n      expect(document.activeElement!.id)\n          .not.toBe('dialog-trigger', 'Expected the focus to change when dialog was opened.');\n\n      dialogRef.close();\n      flushMicrotasks();\n      viewContainerFixture.detectChanges();\n      tick(500);\n\n      expect(document.activeElement!.id).not.toBe('dialog-trigger',\n          'Expected focus not to have been restored.');\n\n      document.body.removeChild(button);\n    }));\n\n\n  });\n\n  describe('dialog content elements', () => {\n    let dialogRef: MatDialogRef<any>;\n\n    describe('inside component dialog', () => {\n      beforeEach(fakeAsync(() => {\n        dialogRef = dialog.open(ContentElementDialog, {viewContainerRef: testViewContainerRef});\n        viewContainerFixture.detectChanges();\n        flush();\n      }));\n\n      runContentElementTests();\n    });\n\n    describe('inside template portal', () => {\n      beforeEach(fakeAsync(() => {\n        const fixture = TestBed.createComponent(ComponentWithContentElementTemplateRef);\n        fixture.detectChanges();\n\n        dialogRef = dialog.open(fixture.componentInstance.templateRef, {\n          viewContainerRef: testViewContainerRef\n        });\n\n        viewContainerFixture.detectChanges();\n        flush();\n      }));\n\n      runContentElementTests();\n    });\n\n    function runContentElementTests() {\n      it('should close the dialog when clicking on the close button', fakeAsync(() => {\n        expect(overlayContainerElement.querySelectorAll('.mat-dialog-container').length).toBe(1);\n\n        (overlayContainerElement.querySelector('button[mat-dialog-close]') as HTMLElement).click();\n        viewContainerFixture.detectChanges();\n        flush();\n\n        expect(overlayContainerElement.querySelectorAll('.mat-dialog-container').length).toBe(0);\n      }));\n\n      it('should not close if [mat-dialog-close] is applied on a non-button node', () => {\n        expect(overlayContainerElement.querySelectorAll('.mat-dialog-container').length).toBe(1);\n\n        (overlayContainerElement.querySelector('div[mat-dialog-close]') as HTMLElement).click();\n\n        expect(overlayContainerElement.querySelectorAll('.mat-dialog-container').length).toBe(1);\n      });\n\n      it('should allow for a user-specified aria-label on the close button', fakeAsync(() => {\n        let button = overlayContainerElement.querySelector('.close-with-aria-label')!;\n        expect(button.getAttribute('aria-label')).toBe('Best close button ever');\n      }));\n\n      it('should override the \"type\" attribute of the close button', () => {\n        let button = overlayContainerElement.querySelector('button[mat-dialog-close]')!;\n\n        expect(button.getAttribute('type')).toBe('button');\n      });\n\n      it('should return the [mat-dialog-close] result when clicking the close button',\n        fakeAsync(() => {\n          let afterCloseCallback = jasmine.createSpy('afterClose callback');\n          dialogRef.afterClosed().subscribe(afterCloseCallback);\n\n          (overlayContainerElement.querySelector('button.close-with-true') as HTMLElement).click();\n          viewContainerFixture.detectChanges();\n          flush();\n\n          expect(afterCloseCallback).toHaveBeenCalledWith(true);\n        }));\n\n      it('should set the aria-labelledby attribute to the id of the title', fakeAsync(() => {\n        let title = overlayContainerElement.querySelector('[mat-dialog-title]')!;\n        let container = overlayContainerElement.querySelector('mat-dialog-container')!;\n\n        flush();\n        viewContainerFixture.detectChanges();\n\n        expect(title.id).toBeTruthy('Expected title element to have an id.');\n        expect(container.getAttribute('aria-labelledby'))\n            .toBe(title.id, 'Expected the aria-labelledby to match the title id.');\n      }));\n    }\n  });\n\n  describe('aria-label', () => {\n    it('should be able to set a custom aria-label', () => {\n      dialog.open(PizzaMsg, {\n        ariaLabel: 'Hello there',\n        viewContainerRef: testViewContainerRef\n      });\n      viewContainerFixture.detectChanges();\n\n      const container = overlayContainerElement.querySelector('mat-dialog-container')!;\n      expect(container.getAttribute('aria-label')).toBe('Hello there');\n    });\n\n    it('should not set the aria-labelledby automatically if it has an aria-label', fakeAsync(() => {\n      dialog.open(ContentElementDialog, {\n        ariaLabel: 'Hello there',\n        viewContainerRef: testViewContainerRef\n      });\n      viewContainerFixture.detectChanges();\n      tick();\n      viewContainerFixture.detectChanges();\n\n      const container = overlayContainerElement.querySelector('mat-dialog-container')!;\n      expect(container.hasAttribute('aria-labelledby')).toBe(false);\n    }));\n  });\n\n});\n\ndescribe('MatDialog with a parent MatDialog', () => {\n  let parentDialog: MatDialog;\n  let childDialog: MatDialog;\n  let overlayContainerElement: HTMLElement;\n  let fixture: ComponentFixture<ComponentThatProvidesMatDialog>;\n\n  beforeEach(fakeAsync(() => {\n    TestBed.configureTestingModule({\n      imports: [MatDialogModule, DialogTestModule],\n      declarations: [ComponentThatProvidesMatDialog],\n      providers: [\n        {provide: OverlayContainer, useFactory: () => {\n          overlayContainerElement = document.createElement('div');\n          return {getContainerElement: () => overlayContainerElement};\n        }},\n        {provide: Location, useClass: SpyLocation}\n      ],\n    });\n\n    TestBed.compileComponents();\n  }));\n\n  beforeEach(inject([MatDialog], (d: MatDialog) => {\n    parentDialog = d;\n\n    fixture = TestBed.createComponent(ComponentThatProvidesMatDialog);\n    childDialog = fixture.componentInstance.dialog;\n    fixture.detectChanges();\n  }));\n\n  afterEach(() => {\n    overlayContainerElement.innerHTML = '';\n  });\n\n  it('should close dialogs opened by a parent when calling closeAll on a child MatDialog',\n    fakeAsync(() => {\n      parentDialog.open(PizzaMsg);\n      fixture.detectChanges();\n      flush();\n\n      expect(overlayContainerElement.textContent)\n          .toContain('Pizza', 'Expected a dialog to be opened');\n\n      childDialog.closeAll();\n      fixture.detectChanges();\n      flush();\n\n      expect(overlayContainerElement.textContent!.trim())\n          .toBe('', 'Expected closeAll on child MatDialog to close dialog opened by parent');\n    }));\n\n  it('should close dialogs opened by a child when calling closeAll on a parent MatDialog',\n    fakeAsync(() => {\n      childDialog.open(PizzaMsg);\n      fixture.detectChanges();\n\n      expect(overlayContainerElement.textContent)\n          .toContain('Pizza', 'Expected a dialog to be opened');\n\n      parentDialog.closeAll();\n      fixture.detectChanges();\n      flush();\n\n      expect(overlayContainerElement.textContent!.trim())\n          .toBe('', 'Expected closeAll on parent MatDialog to close dialog opened by child');\n    }));\n\n  it('should close the top dialog via the escape key', fakeAsync(() => {\n    childDialog.open(PizzaMsg);\n\n    dispatchKeyboardEvent(document.body, 'keydown', ESCAPE);\n    fixture.detectChanges();\n    flush();\n\n    expect(overlayContainerElement.querySelector('mat-dialog-container')).toBeNull();\n  }));\n\n  it('should not close the parent dialogs when a child is destroyed', fakeAsync(() => {\n    parentDialog.open(PizzaMsg);\n    fixture.detectChanges();\n    flush();\n\n    expect(overlayContainerElement.textContent)\n        .toContain('Pizza', 'Expected a dialog to be opened');\n\n    childDialog.ngOnDestroy();\n    fixture.detectChanges();\n    flush();\n\n    expect(overlayContainerElement.textContent)\n        .toContain('Pizza', 'Expected a dialog to be opened');\n  }));\n});\n\ndescribe('MatDialog with default options', () => {\n  let dialog: MatDialog;\n  let overlayContainer: OverlayContainer;\n  let overlayContainerElement: HTMLElement;\n\n  let testViewContainerRef: ViewContainerRef;\n  let viewContainerFixture: ComponentFixture<ComponentWithChildViewContainer>;\n\n  beforeEach(fakeAsync(() => {\n    const defaultConfig = {\n      hasBackdrop: false,\n      disableClose: true,\n      width: '100px',\n      height: '100px',\n      minWidth: '50px',\n      minHeight: '50px',\n      maxWidth: '150px',\n      maxHeight: '150px',\n      autoFocus: false,\n    };\n\n    TestBed.configureTestingModule({\n      imports: [MatDialogModule, DialogTestModule],\n      providers: [\n        {provide: MAT_DIALOG_DEFAULT_OPTIONS, useValue: defaultConfig},\n      ],\n    });\n\n    TestBed.compileComponents();\n  }));\n\n  beforeEach(inject([MatDialog, OverlayContainer],\n    (d: MatDialog, oc: OverlayContainer) => {\n      dialog = d;\n      overlayContainer = oc;\n      overlayContainerElement = oc.getContainerElement();\n    }));\n\n  afterEach(() => {\n    overlayContainer.ngOnDestroy();\n  });\n\n  beforeEach(() => {\n    viewContainerFixture = TestBed.createComponent(ComponentWithChildViewContainer);\n\n    viewContainerFixture.detectChanges();\n    testViewContainerRef = viewContainerFixture.componentInstance.childViewContainer;\n  });\n\n  it('should use the provided defaults', () => {\n    dialog.open(PizzaMsg, {viewContainerRef: testViewContainerRef});\n\n    viewContainerFixture.detectChanges();\n\n    expect(overlayContainerElement.querySelector('.cdk-overlay-backdrop')).toBeFalsy();\n\n    dispatchKeyboardEvent(document.body, 'keydown', ESCAPE);\n    expect(overlayContainerElement.querySelector('mat-dialog-container')).toBeTruthy();\n\n    expect(document.activeElement!.tagName).not.toBe('INPUT');\n\n    let overlayPane = overlayContainerElement.querySelector('.cdk-overlay-pane') as HTMLElement;\n    expect(overlayPane.style.width).toBe('100px');\n    expect(overlayPane.style.height).toBe('100px');\n    expect(overlayPane.style.minWidth).toBe('50px');\n    expect(overlayPane.style.minHeight).toBe('50px');\n    expect(overlayPane.style.maxWidth).toBe('150px');\n    expect(overlayPane.style.maxHeight).toBe('150px');\n  });\n\n  it('should be overridable by open() options', fakeAsync(() => {\n    dialog.open(PizzaMsg, {\n      hasBackdrop: true,\n      disableClose: false,\n      viewContainerRef: testViewContainerRef\n    });\n\n    viewContainerFixture.detectChanges();\n\n    expect(overlayContainerElement.querySelector('.cdk-overlay-backdrop')).toBeTruthy();\n\n    dispatchKeyboardEvent(document.body, 'keydown', ESCAPE);\n    viewContainerFixture.detectChanges();\n    flush();\n\n    expect(overlayContainerElement.querySelector('mat-dialog-container')).toBeFalsy();\n  }));\n});\n\n\n@Directive({selector: 'dir-with-view-container'})\nclass DirectiveWithViewContainer {\n  constructor(public viewContainerRef: ViewContainerRef) { }\n}\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: 'hello',\n})\nclass ComponentWithOnPushViewContainer {\n  constructor(public viewContainerRef: ViewContainerRef) { }\n}\n\n@Component({\n  selector: 'arbitrary-component',\n  template: `<dir-with-view-container></dir-with-view-container>`,\n})\nclass ComponentWithChildViewContainer {\n  @ViewChild(DirectiveWithViewContainer) childWithViewContainer: DirectiveWithViewContainer;\n\n  get childViewContainer() {\n    return this.childWithViewContainer.viewContainerRef;\n  }\n}\n\n@Component({\n  selector: 'arbitrary-component-with-template-ref',\n  template: `<ng-template let-data let-dialogRef=\"dialogRef\">\n      Cheese {{localValue}} {{data?.value}}{{setDialogRef(dialogRef)}}</ng-template>`,\n})\nclass ComponentWithTemplateRef {\n  localValue: string;\n  dialogRef: MatDialogRef<any>;\n\n  @ViewChild(TemplateRef) templateRef: TemplateRef<any>;\n\n  setDialogRef(dialogRef: MatDialogRef<any>): string {\n    this.dialogRef = dialogRef;\n    return '';\n  }\n}\n\n/** Simple component for testing ComponentPortal. */\n@Component({template: '<p>Pizza</p> <input> <button>Close</button>'})\nclass PizzaMsg {\n  constructor(public dialogRef: MatDialogRef<PizzaMsg>,\n              public dialogInjector: Injector,\n              public directionality: Directionality) {}\n}\n\n@Component({\n  template: `\n    <h1 mat-dialog-title>This is the title</h1>\n    <mat-dialog-content>Lorem ipsum dolor sit amet.</mat-dialog-content>\n    <mat-dialog-actions>\n      <button mat-dialog-close>Close</button>\n      <button class=\"close-with-true\" [mat-dialog-close]=\"true\">Close and return true</button>\n      <button\n        class=\"close-with-aria-label\"\n        aria-label=\"Best close button ever\"\n        [mat-dialog-close]=\"true\">Close</button>\n      <div mat-dialog-close>Should not close</div>\n    </mat-dialog-actions>\n  `\n})\nclass ContentElementDialog {}\n\n@Component({\n  template: `\n    <ng-template>\n      <h1 mat-dialog-title>This is the title</h1>\n      <mat-dialog-content>Lorem ipsum dolor sit amet.</mat-dialog-content>\n      <mat-dialog-actions>\n        <button mat-dialog-close>Close</button>\n        <button class=\"close-with-true\" [mat-dialog-close]=\"true\">Close and return true</button>\n        <button\n          class=\"close-with-aria-label\"\n          aria-label=\"Best close button ever\"\n          [mat-dialog-close]=\"true\">Close</button>\n        <div mat-dialog-close>Should not close</div>\n      </mat-dialog-actions>\n    </ng-template>\n  `\n})\nclass ComponentWithContentElementTemplateRef {\n  @ViewChild(TemplateRef) templateRef: TemplateRef<any>;\n}\n\n@Component({\n  template: '',\n  providers: [MatDialog]\n})\nclass ComponentThatProvidesMatDialog {\n  constructor(public dialog: MatDialog) {}\n}\n\n/** Simple component for testing ComponentPortal. */\n@Component({template: ''})\nclass DialogWithInjectedData {\n  constructor(@Inject(MAT_DIALOG_DATA) public data: any) { }\n}\n\n@Component({template: '<p>Pasta</p>'})\nclass DialogWithoutFocusableElements {}\n\n// Create a real (non-test) NgModule as a workaround for\n// https://github.com/angular/angular/issues/10760\nconst TEST_DIRECTIVES = [\n  ComponentWithChildViewContainer,\n  ComponentWithTemplateRef,\n  PizzaMsg,\n  DirectiveWithViewContainer,\n  ComponentWithOnPushViewContainer,\n  ContentElementDialog,\n  DialogWithInjectedData,\n  DialogWithoutFocusableElements,\n  ComponentWithContentElementTemplateRef,\n];\n\n@NgModule({\n  imports: [MatDialogModule, NoopAnimationsModule],\n  exports: TEST_DIRECTIVES,\n  declarations: TEST_DIRECTIVES,\n  entryComponents: [\n    ComponentWithChildViewContainer,\n    ComponentWithTemplateRef,\n    PizzaMsg,\n    ContentElementDialog,\n    DialogWithInjectedData,\n    DialogWithoutFocusableElements,\n  ],\n})\nclass DialogTestModule { }\n"]}