{"version":3,"file":"list.spec.js","sourceRoot":"","sources":["../../../../src/lib/list/list.spec.ts"],"names":[],"mappings":"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","sourcesContent":["import {async, TestBed, fakeAsync, tick} from '@angular/core/testing';\nimport {Component, QueryList, ViewChildren} from '@angular/core';\nimport {defaultRippleAnimationConfig} from '@angular/material/core';\nimport {dispatchMouseEvent} from '@angular/cdk/testing';\nimport {By} from '@angular/platform-browser';\nimport {MatListItem, MatListModule} from './index';\n\ndescribe('MatList', () => {\n  // Default ripple durations used for testing.\n  const {enterDuration, exitDuration} = defaultRippleAnimationConfig;\n\n  beforeEach(async(() => {\n    TestBed.configureTestingModule({\n      imports: [MatListModule],\n      declarations: [\n        ListWithOneAnchorItem,\n        ListWithOneItem,\n        ListWithTwoLineItem,\n        ListWithThreeLineItem,\n        ListWithAvatar,\n        ListWithItemWithCssClass,\n        ListWithDynamicNumberOfLines,\n        ListWithMultipleItems,\n        ListWithManyLines,\n        NavListWithOneAnchorItem,\n        ActionListWithoutType,\n        ActionListWithType\n      ],\n    });\n\n    TestBed.compileComponents();\n  }));\n\n  it('should not apply any additional class to a list without lines', () => {\n    const fixture = TestBed.createComponent(ListWithOneItem);\n    const listItem = fixture.debugElement.query(By.css('mat-list-item'));\n    fixture.detectChanges();\n    expect(listItem.nativeElement.className).toBe('mat-list-item');\n  });\n\n  it('should apply mat-2-line class to lists with two lines', () => {\n    const fixture = TestBed.createComponent(ListWithTwoLineItem);\n    fixture.detectChanges();\n\n    const listItems = fixture.debugElement.children[0].queryAll(By.css('mat-list-item'));\n    expect(listItems[0].nativeElement.className).toContain('mat-2-line');\n    expect(listItems[1].nativeElement.className).toContain('mat-2-line');\n  });\n\n  it('should apply mat-3-line class to lists with three lines', () => {\n    const fixture = TestBed.createComponent(ListWithThreeLineItem);\n    fixture.detectChanges();\n\n    const listItems = fixture.debugElement.children[0].queryAll(By.css('mat-list-item'));\n    expect(listItems[0].nativeElement.className).toContain('mat-3-line');\n    expect(listItems[1].nativeElement.className).toContain('mat-3-line');\n  });\n\n  it('should apply mat-multi-line class to lists with more than 3 lines', () => {\n    const fixture = TestBed.createComponent(ListWithManyLines);\n    fixture.detectChanges();\n\n    const listItems = fixture.debugElement.children[0].queryAll(By.css('mat-list-item'));\n    expect(listItems[0].nativeElement.className).toContain('mat-multi-line');\n    expect(listItems[1].nativeElement.className).toContain('mat-multi-line');\n  });\n\n  it('should apply a class to list items with avatars', () => {\n    const fixture = TestBed.createComponent(ListWithAvatar);\n    fixture.detectChanges();\n\n    const listItems = fixture.debugElement.children[0].queryAll(By.css('mat-list-item'));\n    expect(listItems[0].nativeElement.className).toContain('mat-list-item-with-avatar');\n    expect(listItems[1].nativeElement.className).not.toContain('mat-list-item-with-avatar');\n  });\n\n  it('should not clear custom classes provided by user', () => {\n    const fixture = TestBed.createComponent(ListWithItemWithCssClass);\n    fixture.detectChanges();\n\n    const listItems = fixture.debugElement.children[0].queryAll(By.css('mat-list-item'));\n    expect(listItems[0].nativeElement.classList.contains('test-class')).toBe(true);\n  });\n\n  it('should update classes if number of lines change', () => {\n    const fixture = TestBed.createComponent(ListWithDynamicNumberOfLines);\n    fixture.debugElement.componentInstance.showThirdLine = false;\n    fixture.detectChanges();\n\n    const listItem = fixture.debugElement.children[0].query(By.css('mat-list-item'));\n    expect(listItem.nativeElement.classList.length).toBe(2);\n    expect(listItem.nativeElement.classList).toContain('mat-2-line');\n    expect(listItem.nativeElement.classList).toContain('mat-list-item');\n\n    fixture.debugElement.componentInstance.showThirdLine = true;\n    fixture.detectChanges();\n    expect(listItem.nativeElement.className).toContain('mat-3-line');\n  });\n\n  it('should add aria roles properly', () => {\n    const fixture = TestBed.createComponent(ListWithMultipleItems);\n    fixture.detectChanges();\n\n    const list = fixture.debugElement.children[0];\n    const listItem = fixture.debugElement.children[0].query(By.css('mat-list-item'));\n    expect(list.nativeElement.getAttribute('role')).toBeNull('Expect mat-list no role');\n    expect(listItem.nativeElement.getAttribute('role')).toBeNull('Expect mat-list-item no role');\n  });\n\n  it('should not show ripples for non-nav lists', () => {\n    const fixture = TestBed.createComponent(ListWithOneAnchorItem);\n    fixture.detectChanges();\n\n    const items: QueryList<MatListItem> = fixture.debugElement.componentInstance.listItems;\n    expect(items.length).toBeGreaterThan(0);\n    items.forEach(item => expect(item._isRippleDisabled()).toBe(true));\n  });\n\n  it('should allow disabling ripples for specific nav-list items', () => {\n    const fixture = TestBed.createComponent(NavListWithOneAnchorItem);\n    fixture.detectChanges();\n\n    const items = fixture.componentInstance.listItems;\n    expect(items.length).toBeGreaterThan(0);\n\n    // Ripples should be enabled by default, and can be disabled with a binding.\n    items.forEach(item => expect(item._isRippleDisabled()).toBe(false));\n\n    fixture.componentInstance.disableItemRipple = true;\n    fixture.detectChanges();\n\n    items.forEach(item => expect(item._isRippleDisabled()).toBe(true));\n  });\n\n  it('should create an action list', () => {\n    const fixture = TestBed.createComponent(ActionListWithoutType);\n    fixture.detectChanges();\n\n    const items = fixture.componentInstance.listItems;\n    expect(items.length).toBeGreaterThan(0);\n  });\n\n  it('should enable ripples for action lists by default', () => {\n    const fixture = TestBed.createComponent(ActionListWithoutType);\n    fixture.detectChanges();\n\n    const items = fixture.componentInstance.listItems;\n    expect(items.toArray().every(item => !item._isRippleDisabled())).toBe(true);\n  });\n\n  it('should allow disabling ripples for specific action list items', () => {\n    const fixture = TestBed.createComponent(ActionListWithoutType);\n    fixture.detectChanges();\n\n    const items = fixture.componentInstance.listItems.toArray();\n    expect(items.length).toBeGreaterThan(0);\n\n    expect(items.every(item => !item._isRippleDisabled())).toBe(true);\n\n    fixture.componentInstance.disableItemRipple = true;\n    fixture.detectChanges();\n\n    expect(items.every(item => item._isRippleDisabled())).toBe(true);\n  });\n\n  it('should set default type attribute to button for action list', () => {\n    const fixture = TestBed.createComponent(ActionListWithoutType);\n    fixture.detectChanges();\n\n    const listItemEl = fixture.debugElement.query(By.css('.mat-list-item'));\n    expect(listItemEl.nativeElement.getAttribute('type')).toBe('button');\n  });\n\n  it('should not change type attribute if it is already specified', () => {\n    const fixture = TestBed.createComponent(ActionListWithType);\n    fixture.detectChanges();\n\n    const listItemEl = fixture.debugElement.query(By.css('.mat-list-item'));\n    expect(listItemEl.nativeElement.getAttribute('type')).toBe('submit');\n  });\n\n  it('should allow disabling ripples for the whole nav-list', () => {\n    const fixture = TestBed.createComponent(NavListWithOneAnchorItem);\n    fixture.detectChanges();\n\n    const items = fixture.componentInstance.listItems;\n    expect(items.length).toBeGreaterThan(0);\n\n    // Ripples should be enabled by default, and can be disabled with a binding.\n    items.forEach(item => expect(item._isRippleDisabled()).toBe(false));\n\n    fixture.componentInstance.disableListRipple = true;\n    fixture.detectChanges();\n\n    items.forEach(item => expect(item._isRippleDisabled()).toBe(true));\n  });\n\n  it('should allow disabling ripples for the entire action list', () => {\n    const fixture = TestBed.createComponent(ActionListWithoutType);\n    fixture.detectChanges();\n\n    const items = fixture.componentInstance.listItems.toArray();\n    expect(items.length).toBeGreaterThan(0);\n\n    expect(items.every(item => !item._isRippleDisabled())).toBe(true);\n\n    fixture.componentInstance.disableListRipple = true;\n    fixture.detectChanges();\n\n    expect(items.every(item => item._isRippleDisabled())).toBe(true);\n  });\n\n  it('should disable item ripples when list ripples are disabled via the input in nav list',\n    fakeAsync(() => {\n      const fixture = TestBed.createComponent(NavListWithOneAnchorItem);\n      fixture.detectChanges();\n\n      const rippleTarget = fixture.nativeElement.querySelector('.mat-list-item-content');\n\n      dispatchMouseEvent(rippleTarget, 'mousedown');\n      dispatchMouseEvent(rippleTarget, 'mouseup');\n\n      expect(rippleTarget.querySelectorAll('.mat-ripple-element').length)\n          .toBe(1, 'Expected ripples to be enabled by default.');\n\n      // Wait for the ripples to go away.\n      tick(enterDuration + exitDuration);\n      expect(rippleTarget.querySelectorAll('.mat-ripple-element').length)\n          .toBe(0, 'Expected ripples to go away.');\n\n      fixture.componentInstance.disableListRipple = true;\n      fixture.detectChanges();\n\n      dispatchMouseEvent(rippleTarget, 'mousedown');\n      dispatchMouseEvent(rippleTarget, 'mouseup');\n\n      expect(rippleTarget.querySelectorAll('.mat-ripple-element').length)\n          .toBe(0, 'Expected no ripples after list ripples are disabled.');\n    }));\n\n  it('should disable item ripples when list ripples are disabled via the input in an action list',\n    fakeAsync(() => {\n      const fixture = TestBed.createComponent(ActionListWithoutType);\n      fixture.detectChanges();\n\n      const rippleTarget = fixture.nativeElement.querySelector('.mat-list-item-content');\n\n      dispatchMouseEvent(rippleTarget, 'mousedown');\n      dispatchMouseEvent(rippleTarget, 'mouseup');\n\n      expect(rippleTarget.querySelectorAll('.mat-ripple-element').length)\n          .toBe(1, 'Expected ripples to be enabled by default.');\n\n      // Wait for the ripples to go away.\n      tick(enterDuration + exitDuration);\n      expect(rippleTarget.querySelectorAll('.mat-ripple-element').length)\n          .toBe(0, 'Expected ripples to go away.');\n\n      fixture.componentInstance.disableListRipple = true;\n      fixture.detectChanges();\n\n      dispatchMouseEvent(rippleTarget, 'mousedown');\n      dispatchMouseEvent(rippleTarget, 'mouseup');\n\n      expect(rippleTarget.querySelectorAll('.mat-ripple-element').length)\n          .toBe(0, 'Expected no ripples after list ripples are disabled.');\n    }));\n\n});\n\n\nclass BaseTestList {\n  items: any[] = [\n    {'name': 'Paprika', 'description': 'A seasoning'},\n    {'name': 'Pepper', 'description': 'Another seasoning'}\n  ];\n\n  showThirdLine: boolean = false;\n}\n\n@Component({template: `\n  <mat-list>\n    <a mat-list-item>\n      Paprika\n    </a>\n  </mat-list>`})\nclass ListWithOneAnchorItem extends BaseTestList {\n  // This needs to be declared directly on the class; if declared on the BaseTestList superclass,\n  // it doesn't get populated.\n  @ViewChildren(MatListItem) listItems: QueryList<MatListItem>;\n}\n\n@Component({template: `\n  <mat-nav-list [disableRipple]=\"disableListRipple\">\n    <a mat-list-item [disableRipple]=\"disableItemRipple\">\n      Paprika\n    </a>\n  </mat-nav-list>`})\nclass NavListWithOneAnchorItem extends BaseTestList {\n  @ViewChildren(MatListItem) listItems: QueryList<MatListItem>;\n  disableItemRipple: boolean = false;\n  disableListRipple: boolean = false;\n}\n\n@Component({template: `\n  <mat-action-list [disableRipple]=\"disableListRipple\">\n    <button mat-list-item [disableRipple]=\"disableItemRipple\">\n      Paprika\n    </button>\n  </mat-action-list>`})\nclass ActionListWithoutType extends BaseTestList {\n  @ViewChildren(MatListItem) listItems: QueryList<MatListItem>;\n  disableListRipple = false;\n  disableItemRipple = false;\n}\n\n@Component({template: `\n  <mat-action-list>\n    <button mat-list-item type=\"submit\">\n      Paprika\n    </button>\n  </mat-action-list>`})\nclass ActionListWithType extends BaseTestList {\n  @ViewChildren(MatListItem) listItems: QueryList<MatListItem>;\n}\n\n@Component({template: `\n  <mat-list>\n    <mat-list-item>\n      Paprika\n    </mat-list-item>\n  </mat-list>`})\nclass ListWithOneItem extends BaseTestList { }\n\n@Component({template: `\n  <mat-list>\n    <mat-list-item *ngFor=\"let item of items\">\n      <img src=\"\">\n      <h3 mat-line>{{item.name}}</h3>\n      <p mat-line>{{item.description}}</p>\n    </mat-list-item>\n  </mat-list>`})\nclass ListWithTwoLineItem extends BaseTestList { }\n\n@Component({template: `\n  <mat-list>\n    <mat-list-item *ngFor=\"let item of items\">\n      <h3 mat-line>{{item.name}}</h3>\n      <p mat-line>{{item.description}}</p>\n      <p mat-line>Some other text</p>\n    </mat-list-item>\n  </mat-list>`})\nclass ListWithThreeLineItem extends BaseTestList { }\n\n@Component({template: `\n  <mat-list>\n    <mat-list-item *ngFor=\"let item of items\">\n      <h3 mat-line>Line 1</h3>\n      <p mat-line>Line 2</p>\n      <p mat-line>Line 3</p>\n      <p mat-line>Line 4</p>\n    </mat-list-item>\n  </mat-list>`})\nclass ListWithManyLines extends BaseTestList { }\n\n@Component({template: `\n  <mat-list>\n    <mat-list-item>\n      <img src=\"\" mat-list-avatar>\n      Paprika\n    </mat-list-item>\n    <mat-list-item>\n      Pepper\n    </mat-list-item>\n  </mat-list>`})\nclass ListWithAvatar extends BaseTestList { }\n\n@Component({template: `\n  <mat-list>\n    <mat-list-item class=\"test-class\" *ngFor=\"let item of items\">\n      <h3 mat-line>{{item.name}}</h3>\n      <p mat-line>{{item.description}}</p>\n    </mat-list-item>\n  </mat-list>`})\nclass ListWithItemWithCssClass extends BaseTestList { }\n\n@Component({template: `\n  <mat-list>\n    <mat-list-item *ngFor=\"let item of items\">\n      <h3 mat-line>{{item.name}}</h3>\n      <p mat-line>{{item.description}}</p>\n      <p mat-line *ngIf=\"showThirdLine\">Some other text</p>\n    </mat-list-item>\n  </mat-list>`})\nclass ListWithDynamicNumberOfLines extends BaseTestList { }\n\n@Component({template: `\n  <mat-list>\n    <mat-list-item *ngFor=\"let item of items\">\n      {{item.name}}\n    </mat-list-item>\n  </mat-list>`})\nclass ListWithMultipleItems extends BaseTestList { }\n"]}