{"version":3,"file":"slider.spec.js","sourceRoot":"","sources":["../../../../src/lib/slider/slider.spec.ts"],"names":[],"mappings":"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","sourcesContent":["import {BidiModule} from '@angular/cdk/bidi';\nimport {\n  BACKSPACE,\n  DOWN_ARROW,\n  END,\n  HOME,\n  LEFT_ARROW,\n  PAGE_DOWN,\n  PAGE_UP,\n  RIGHT_ARROW,\n  UP_ARROW,\n} from '@angular/cdk/keycodes';\nimport {\n  createMouseEvent,\n  dispatchEvent,\n  dispatchFakeEvent,\n  dispatchKeyboardEvent,\n  dispatchMouseEvent,\n  createKeyboardEvent,\n} from '@angular/cdk/testing';\nimport {Component, DebugElement, Type, ViewChild} from '@angular/core';\nimport {ComponentFixture, fakeAsync, flush, TestBed} from '@angular/core/testing';\nimport {FormControl, FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {TestGestureConfig} from '@angular/material/testing';\nimport {By, HAMMER_GESTURE_CONFIG} from '@angular/platform-browser';\nimport {MatSlider, MatSliderModule} from './index';\n\ndescribe('MatSlider', () => {\n  let gestureConfig: TestGestureConfig;\n\n  function createComponent<T>(component: Type<T>): ComponentFixture<T> {\n    TestBed.configureTestingModule({\n      imports: [MatSliderModule, ReactiveFormsModule, FormsModule, BidiModule],\n      declarations: [component],\n      providers: [\n        {provide: HAMMER_GESTURE_CONFIG, useFactory: () => {\n          gestureConfig = new TestGestureConfig();\n          return gestureConfig;\n        }}\n      ]\n    }).compileComponents();\n\n    return TestBed.createComponent<T>(component);\n  }\n\n  describe('standard slider', () => {\n    let fixture: ComponentFixture<StandardSlider>;\n    let sliderDebugElement: DebugElement;\n    let sliderNativeElement: HTMLElement;\n    let sliderInstance: MatSlider;\n    let trackFillElement: HTMLElement;\n\n    beforeEach(() => {\n      fixture = createComponent(StandardSlider);\n      fixture.detectChanges();\n\n      sliderDebugElement = fixture.debugElement.query(By.directive(MatSlider));\n      sliderNativeElement = sliderDebugElement.nativeElement;\n      sliderInstance = sliderDebugElement.componentInstance;\n\n      trackFillElement = <HTMLElement>sliderNativeElement.querySelector('.mat-slider-track-fill');\n    });\n\n    it('should set the default values', () => {\n      expect(sliderInstance.value).toBe(0);\n      expect(sliderInstance.min).toBe(0);\n      expect(sliderInstance.max).toBe(100);\n    });\n\n    it('should update the value on mousedown', () => {\n      expect(sliderInstance.value).toBe(0);\n\n      dispatchMousedownEventSequence(sliderNativeElement, 0.19);\n\n      expect(sliderInstance.value).toBe(19);\n    });\n\n    it('should not update when pressing the right mouse button', () => {\n      expect(sliderInstance.value).toBe(0);\n\n      dispatchMousedownEventSequence(sliderNativeElement, 0.19, 1);\n\n      expect(sliderInstance.value).toBe(0);\n    });\n\n    it('should update the value on a slide', () => {\n      expect(sliderInstance.value).toBe(0);\n\n      dispatchSlideEventSequence(sliderNativeElement, 0, 0.89, gestureConfig);\n\n      expect(sliderInstance.value).toBe(89);\n    });\n\n    it('should set the value as min when sliding before the track', () => {\n      expect(sliderInstance.value).toBe(0);\n\n      dispatchSlideEventSequence(sliderNativeElement, 0, -1.33, gestureConfig);\n\n      expect(sliderInstance.value).toBe(0);\n    });\n\n    it('should set the value as max when sliding past the track', () => {\n      expect(sliderInstance.value).toBe(0);\n\n      dispatchSlideEventSequence(sliderNativeElement, 0, 1.75, gestureConfig);\n\n      expect(sliderInstance.value).toBe(100);\n    });\n\n    it('should update the track fill on mousedown', () => {\n      expect(trackFillElement.style.transform).toContain('scale3d(0, 1, 1)');\n\n      dispatchMousedownEventSequence(sliderNativeElement, 0.39);\n      fixture.detectChanges();\n\n      expect(trackFillElement.style.transform).toContain('scale3d(0.39, 1, 1)');\n    });\n\n    it('should update the track fill on slide', () => {\n      expect(trackFillElement.style.transform).toContain('scale3d(0, 1, 1)');\n\n      dispatchSlideEventSequence(sliderNativeElement, 0, 0.86, gestureConfig);\n      fixture.detectChanges();\n\n      expect(trackFillElement.style.transform).toContain('scale3d(0.86, 1, 1)');\n    });\n\n    it('should add and remove the mat-slider-sliding class when sliding', () => {\n      expect(sliderNativeElement.classList).not.toContain('mat-slider-sliding');\n\n      dispatchSlideStartEvent(sliderNativeElement, 0, gestureConfig);\n      fixture.detectChanges();\n\n      expect(sliderNativeElement.classList).toContain('mat-slider-sliding');\n\n      dispatchSlideEndEvent(sliderNativeElement, 0.34, gestureConfig);\n      fixture.detectChanges();\n\n      expect(sliderNativeElement.classList).not.toContain('mat-slider-sliding');\n    });\n\n    it('should not change value without emitting a change event', () => {\n      const onChangeSpy = jasmine.createSpy('slider onChange');\n\n      sliderInstance.change.subscribe(onChangeSpy);\n      sliderInstance.value = 50;\n      fixture.detectChanges();\n\n      dispatchSlideStartEvent(sliderNativeElement, 0, gestureConfig);\n      fixture.detectChanges();\n\n      dispatchSlideEvent(sliderNativeElement, 10, gestureConfig);\n      fixture.detectChanges();\n\n      // In some situations, HammerJS will fire a second \"slidestart\" event because the user\n      // holds the thumb and drags it around. This would mean that the `_valueOnSlideStart`\n      // value will be updated to the actual end value. Causing the slider to think that the value\n      // didn't change at all.\n      dispatchSlideStartEvent(sliderNativeElement, 10, gestureConfig);\n      fixture.detectChanges();\n\n      dispatchSlideEndEvent(sliderNativeElement, 10, gestureConfig);\n      fixture.detectChanges();\n\n      expect(sliderNativeElement.classList).not.toContain('mat-slider-sliding');\n      expect(onChangeSpy).toHaveBeenCalledTimes(1);\n    });\n\n    it('should reset active state upon blur', () => {\n      sliderInstance._isActive = true;\n\n      dispatchFakeEvent(sliderNativeElement, 'blur');\n      fixture.detectChanges();\n\n      expect(sliderInstance._isActive).toBe(false);\n    });\n\n    it('should reset thumb gap when blurred on min value', () => {\n      sliderInstance._isActive = true;\n      sliderInstance.value = 0;\n      fixture.detectChanges();\n\n      expect(sliderInstance._thumbGap).toBe(10);\n\n      dispatchFakeEvent(sliderNativeElement, 'blur');\n      fixture.detectChanges();\n\n      expect(sliderInstance._thumbGap).toBe(7);\n    });\n\n    it('should have thumb gap when at min value', () => {\n      expect(trackFillElement.style.transform).toContain('translateX(-7px)');\n    });\n\n    it('should not have thumb gap when not at min value', () => {\n      dispatchMousedownEventSequence(sliderNativeElement, 1);\n      fixture.detectChanges();\n\n      // Some browsers use '0' and some use '0px', so leave off the closing paren.\n      expect(trackFillElement.style.transform).toContain('translateX(0');\n    });\n\n    it('should have aria-orientation horizontal', () => {\n      expect(sliderNativeElement.getAttribute('aria-orientation')).toEqual('horizontal');\n    });\n\n    it('should slide to the max value when the steps do not divide evenly into it', () => {\n      sliderInstance.min = 5;\n      sliderInstance.max = 100;\n      sliderInstance.step = 15;\n\n      dispatchSlideEventSequence(sliderNativeElement, 0, 1, gestureConfig);\n      fixture.detectChanges();\n\n      expect(sliderInstance.value).toBe(100);\n    });\n\n  });\n\n  describe('disabled slider', () => {\n    let fixture: ComponentFixture<StandardSlider>;\n    let sliderDebugElement: DebugElement;\n    let sliderNativeElement: HTMLElement;\n    let sliderInstance: MatSlider;\n    let trackFillElement: HTMLElement;\n\n    beforeEach(() => {\n      fixture = createComponent(DisabledSlider);\n      fixture.detectChanges();\n\n      sliderDebugElement = fixture.debugElement.query(By.directive(MatSlider));\n      sliderNativeElement = sliderDebugElement.nativeElement;\n      sliderInstance = sliderDebugElement.componentInstance;\n      trackFillElement = <HTMLElement>sliderNativeElement.querySelector('.mat-slider-track-fill');\n    });\n\n    it('should be disabled', () => {\n      expect(sliderInstance.disabled).toBeTruthy();\n    });\n\n    it('should not change the value on mousedown when disabled', () => {\n      expect(sliderInstance.value).toBe(0);\n\n      dispatchMousedownEventSequence(sliderNativeElement, 0.63);\n\n      expect(sliderInstance.value).toBe(0);\n    });\n\n    it('should not change the value on slide when disabled', () => {\n      expect(sliderInstance.value).toBe(0);\n\n      dispatchSlideEventSequence(sliderNativeElement, 0, 0.5, gestureConfig);\n\n      expect(sliderInstance.value).toBe(0);\n    });\n\n    it('should not emit change when disabled', () => {\n      const onChangeSpy = jasmine.createSpy('slider onChange');\n      sliderInstance.change.subscribe(onChangeSpy);\n\n      dispatchSlideEventSequence(sliderNativeElement, 0, 0.5, gestureConfig);\n\n      expect(onChangeSpy).toHaveBeenCalledTimes(0);\n    });\n\n    it('should not add the mat-slider-active class on mousedown when disabled', () => {\n      expect(sliderNativeElement.classList).not.toContain('mat-slider-active');\n\n      dispatchMousedownEventSequence(sliderNativeElement, 0.43);\n      fixture.detectChanges();\n\n      expect(sliderNativeElement.classList).not.toContain('mat-slider-active');\n    });\n\n    it('should not add the mat-slider-sliding class on slide when disabled', () => {\n      expect(sliderNativeElement.classList).not.toContain('mat-slider-sliding');\n\n      dispatchSlideStartEvent(sliderNativeElement, 0.46, gestureConfig);\n      fixture.detectChanges();\n\n      expect(sliderNativeElement.classList).not.toContain('mat-slider-sliding');\n    });\n\n    it ('should leave thumb gap', () => {\n      expect(trackFillElement.style.transform).toContain('translateX(-7px)');\n    });\n\n    it('should disable tabbing to the slider', () => {\n      expect(sliderNativeElement.tabIndex).toBe(-1);\n    });\n  });\n\n  describe('slider with set min and max', () => {\n    let fixture: ComponentFixture<SliderWithMinAndMax>;\n    let sliderDebugElement: DebugElement;\n    let sliderNativeElement: HTMLElement;\n    let sliderInstance: MatSlider;\n    let trackFillElement: HTMLElement;\n    let ticksContainerElement: HTMLElement;\n    let ticksElement: HTMLElement;\n    let testComponent: SliderWithMinAndMax;\n\n    beforeEach(() => {\n      fixture = createComponent(SliderWithMinAndMax);\n      fixture.detectChanges();\n\n      sliderDebugElement = fixture.debugElement.query(By.directive(MatSlider));\n      testComponent = fixture.debugElement.componentInstance;\n      sliderNativeElement = sliderDebugElement.nativeElement;\n      sliderInstance = sliderDebugElement.injector.get<MatSlider>(MatSlider);\n      trackFillElement = <HTMLElement>sliderNativeElement.querySelector('.mat-slider-track-fill');\n      ticksContainerElement =\n          <HTMLElement>sliderNativeElement.querySelector('.mat-slider-ticks-container');\n      ticksElement = <HTMLElement>sliderNativeElement.querySelector('.mat-slider-ticks');\n    });\n\n    it('should set the default values from the attributes', () => {\n      expect(sliderInstance.value).toBe(4);\n      expect(sliderInstance.min).toBe(4);\n      expect(sliderInstance.max).toBe(6);\n    });\n\n    it('should set the correct value on mousedown', () => {\n      dispatchMousedownEventSequence(sliderNativeElement, 0.09);\n      fixture.detectChanges();\n\n      // Computed by multiplying the difference between the min and the max by the percentage from\n      // the mousedown and adding that to the minimum.\n      let value = Math.round(4 + (0.09 * (6 - 4)));\n      expect(sliderInstance.value).toBe(value);\n    });\n\n    it('should set the correct value on slide', () => {\n      dispatchSlideEventSequence(sliderNativeElement, 0, 0.62, gestureConfig);\n      fixture.detectChanges();\n\n      // Computed by multiplying the difference between the min and the max by the percentage from\n      // the mousedown and adding that to the minimum.\n      let value = Math.round(4 + (0.62 * (6 - 4)));\n      expect(sliderInstance.value).toBe(value);\n    });\n\n    it('should snap the fill to the nearest value on mousedown', () => {\n      dispatchMousedownEventSequence(sliderNativeElement, 0.68);\n      fixture.detectChanges();\n\n      // The closest snap is halfway on the slider.\n      expect(trackFillElement.style.transform).toContain('scale3d(0.5, 1, 1)');\n    });\n\n    it('should snap the fill to the nearest value on slide', () => {\n      dispatchSlideEventSequence(sliderNativeElement, 0, 0.74, gestureConfig);\n      fixture.detectChanges();\n\n      // The closest snap is at the halfway point on the slider.\n      expect(trackFillElement.style.transform).toContain('scale3d(0.5, 1, 1)');\n    });\n\n    it('should adjust fill and ticks on mouse enter when min changes', () => {\n      testComponent.min = -2;\n      fixture.detectChanges();\n\n      dispatchMouseenterEvent(sliderNativeElement);\n      fixture.detectChanges();\n\n      expect(trackFillElement.style.transform).toContain('scale3d(0.75, 1, 1)');\n      expect(ticksElement.style.backgroundSize).toBe('75% 2px');\n      // Make sure it cuts off the last half tick interval.\n      expect(ticksElement.style.transform).toContain('translateX(37.5%)');\n      expect(ticksContainerElement.style.transform).toBe('translateX(-37.5%)');\n    });\n\n    it('should adjust fill and ticks on mouse enter when max changes', () => {\n      testComponent.min = -2;\n      fixture.detectChanges();\n\n      testComponent.max = 10;\n      fixture.detectChanges();\n\n      dispatchMouseenterEvent(sliderNativeElement);\n      fixture.detectChanges();\n\n      expect(trackFillElement.style.transform).toContain('scale3d(0.5, 1, 1)');\n      expect(ticksElement.style.backgroundSize).toBe('50% 2px');\n      // Make sure it cuts off the last half tick interval.\n      expect(ticksElement.style.transform).toContain('translateX(25%)');\n      expect(ticksContainerElement.style.transform).toBe('translateX(-25%)');\n    });\n  });\n\n  describe('slider with set value', () => {\n    let fixture: ComponentFixture<SliderWithValue>;\n    let sliderDebugElement: DebugElement;\n    let sliderNativeElement: HTMLElement;\n    let sliderInstance: MatSlider;\n\n    beforeEach(() => {\n      fixture = createComponent(SliderWithValue);\n      fixture.detectChanges();\n\n      sliderDebugElement = fixture.debugElement.query(By.directive(MatSlider));\n      sliderNativeElement = sliderDebugElement.nativeElement;\n      sliderInstance = sliderDebugElement.injector.get<MatSlider>(MatSlider);\n    });\n\n    it('should set the default value from the attribute', () => {\n      expect(sliderInstance.value).toBe(26);\n    });\n\n    it('should set the correct value on mousedown', () => {\n      dispatchMousedownEventSequence(sliderNativeElement, 0.92);\n      fixture.detectChanges();\n\n      // On a slider with default max and min the value should be approximately equal to the\n      // percentage clicked. This should be the case regardless of what the original set value was.\n      expect(sliderInstance.value).toBe(92);\n    });\n\n    it('should set the correct value on slide', () => {\n      dispatchSlideEventSequence(sliderNativeElement, 0, 0.32, gestureConfig);\n      fixture.detectChanges();\n\n      expect(sliderInstance.value).toBe(32);\n    });\n  });\n\n  describe('slider with set step', () => {\n    let fixture: ComponentFixture<SliderWithStep>;\n    let sliderDebugElement: DebugElement;\n    let sliderNativeElement: HTMLElement;\n    let sliderInstance: MatSlider;\n    let trackFillElement: HTMLElement;\n\n    beforeEach(() => {\n      fixture = createComponent(SliderWithStep);\n      fixture.detectChanges();\n\n      sliderDebugElement = fixture.debugElement.query(By.directive(MatSlider));\n      sliderNativeElement = sliderDebugElement.nativeElement;\n      sliderInstance = sliderDebugElement.injector.get<MatSlider>(MatSlider);\n      trackFillElement = <HTMLElement>sliderNativeElement.querySelector('.mat-slider-track-fill');\n    });\n\n    it('should set the correct step value on mousedown', () => {\n      expect(sliderInstance.value).toBe(0);\n\n      dispatchMousedownEventSequence(sliderNativeElement, 0.13);\n      fixture.detectChanges();\n\n      expect(sliderInstance.value).toBe(25);\n    });\n\n    it('should snap the fill to a step on mousedown', () => {\n      dispatchMousedownEventSequence(sliderNativeElement, 0.66);\n      fixture.detectChanges();\n\n      // The closest step is at 75% of the slider.\n      expect(trackFillElement.style.transform).toContain('scale3d(0.75, 1, 1)');\n    });\n\n    it('should set the correct step value on slide', () => {\n      dispatchSlideEventSequence(sliderNativeElement, 0, 0.07, gestureConfig);\n      fixture.detectChanges();\n\n      expect(sliderInstance.value).toBe(0);\n    });\n\n    it('should snap the thumb and fill to a step on slide', () => {\n      dispatchSlideEventSequence(sliderNativeElement, 0, 0.88, gestureConfig);\n      fixture.detectChanges();\n\n      // The closest snap is at the end of the slider.\n      expect(trackFillElement.style.transform).toContain('scale3d(1, 1, 1)');\n    });\n\n    it('should round the value inside the label based on the provided step', () => {\n      let testStep = (step: number, expected: string) => {\n        fixture.componentInstance.step = step;\n        fixture.detectChanges();\n        dispatchSlideEventSequence(sliderNativeElement, 0, 0.333333, gestureConfig);\n        expect(sliderDebugElement.componentInstance.displayValue.toString()).toBe(expected);\n      };\n\n      testStep(1, '33');\n      testStep(0.1, '33.3');\n      testStep(0.01, '33.33');\n      testStep(0.001, '33.333');\n    });\n\n    it('should not add decimals to the value if it is a whole number', () => {\n      fixture.componentInstance.step = 0.1;\n      fixture.detectChanges();\n\n      dispatchSlideEventSequence(sliderNativeElement, 0, 1, gestureConfig);\n\n      expect(sliderDebugElement.componentInstance.displayValue).toBe(100);\n    });\n\n    it('should truncate long decimal values when using a decimal step', () => {\n      fixture.componentInstance.step = 0.1;\n      fixture.detectChanges();\n\n      dispatchSlideEventSequence(sliderNativeElement, 0, 0.333333, gestureConfig);\n\n      expect(sliderInstance.value).toBe(33.3);\n    });\n\n    it('should truncate long decimal values when using a decimal step and the arrow keys', () => {\n      fixture.componentInstance.step = 0.1;\n      fixture.detectChanges();\n\n      for (let i = 0; i < 3; i++) {\n        dispatchKeyboardEvent(sliderNativeElement, 'keydown', UP_ARROW);\n      }\n\n      expect(sliderInstance.value).toBe(0.3);\n    });\n\n  });\n\n  describe('slider with auto ticks', () => {\n    let fixture: ComponentFixture<SliderWithAutoTickInterval>;\n    let sliderDebugElement: DebugElement;\n    let sliderNativeElement: HTMLElement;\n    let ticksContainerElement: HTMLElement;\n    let ticksElement: HTMLElement;\n\n    beforeEach(() => {\n      fixture = createComponent(SliderWithAutoTickInterval);\n      fixture.detectChanges();\n\n      sliderDebugElement = fixture.debugElement.query(By.directive(MatSlider));\n      sliderNativeElement = sliderDebugElement.nativeElement;\n      ticksContainerElement =\n          <HTMLElement>sliderNativeElement.querySelector('.mat-slider-ticks-container');\n      ticksElement = <HTMLElement>sliderNativeElement.querySelector('.mat-slider-ticks');\n    });\n\n    it('should set the correct tick separation on mouse enter', () => {\n      dispatchMouseenterEvent(sliderNativeElement);\n      fixture.detectChanges();\n\n      // Ticks should be 30px apart (therefore 30% for a 100px long slider).\n      expect(ticksElement.style.backgroundSize).toBe('30% 2px');\n      // Make sure it cuts off the last half tick interval.\n      expect(ticksElement.style.transform).toContain('translateX(15%)');\n      expect(ticksContainerElement.style.transform).toBe('translateX(-15%)');\n    });\n  });\n\n  describe('slider with set tick interval', () => {\n    let fixture: ComponentFixture<SliderWithSetTickInterval>;\n    let sliderDebugElement: DebugElement;\n    let sliderNativeElement: HTMLElement;\n    let ticksContainerElement: HTMLElement;\n    let ticksElement: HTMLElement;\n\n    beforeEach(() => {\n      fixture = createComponent(SliderWithSetTickInterval);\n      fixture.detectChanges();\n\n      sliderDebugElement = fixture.debugElement.query(By.directive(MatSlider));\n      sliderNativeElement = sliderDebugElement.nativeElement;\n      ticksContainerElement =\n          <HTMLElement>sliderNativeElement.querySelector('.mat-slider-ticks-container');\n      ticksElement = <HTMLElement>sliderNativeElement.querySelector('.mat-slider-ticks');\n    });\n\n    it('should set the correct tick separation on mouse enter', () => {\n      dispatchMouseenterEvent(sliderNativeElement);\n      fixture.detectChanges();\n\n      // Ticks should be every 18 values (tickInterval of 6 * step size of 3). On a slider 100px\n      // long with 100 values, this is 18%.\n      expect(ticksElement.style.backgroundSize).toBe('18% 2px');\n      // Make sure it cuts off the last half tick interval.\n      expect(ticksElement.style.transform).toContain('translateX(9%)');\n      expect(ticksContainerElement.style.transform).toBe('translateX(-9%)');\n    });\n\n    it('should be able to reset the tick interval after it has been set', () => {\n      expect(sliderNativeElement.classList)\n          .toContain('mat-slider-has-ticks', 'Expected element to have ticks initially.');\n\n      fixture.componentInstance.tickInterval = 0;\n      fixture.detectChanges();\n\n      expect(sliderNativeElement.classList)\n          .not.toContain('mat-slider-has-ticks', 'Expected element not to have ticks after reset.');\n    });\n  });\n\n  describe('slider with thumb label', () => {\n    let fixture: ComponentFixture<SliderWithThumbLabel>;\n    let sliderDebugElement: DebugElement;\n    let sliderNativeElement: HTMLElement;\n    let sliderInstance: MatSlider;\n    let thumbLabelTextElement: Element;\n\n    beforeEach(() => {\n      fixture = createComponent(SliderWithThumbLabel);\n      fixture.detectChanges();\n\n      sliderDebugElement = fixture.debugElement.query(By.directive(MatSlider));\n      sliderNativeElement = sliderDebugElement.nativeElement;\n      sliderInstance = sliderDebugElement.componentInstance;\n      thumbLabelTextElement = sliderNativeElement.querySelector('.mat-slider-thumb-label-text')!;\n    });\n\n    it('should add the thumb label class to the slider container', () => {\n      expect(sliderNativeElement.classList).toContain('mat-slider-thumb-label-showing');\n    });\n\n    it('should update the thumb label text on mousedown', () => {\n      expect(thumbLabelTextElement.textContent).toBe('0');\n\n      dispatchMousedownEventSequence(sliderNativeElement, 0.13);\n      fixture.detectChanges();\n\n      // The thumb label text is set to the slider's value. These should always be the same.\n      expect(thumbLabelTextElement.textContent).toBe('13');\n    });\n\n    it('should update the thumb label text on slide', () => {\n      expect(thumbLabelTextElement.textContent).toBe('0');\n\n      dispatchSlideEventSequence(sliderNativeElement, 0, 0.56, gestureConfig);\n      fixture.detectChanges();\n\n      // The thumb label text is set to the slider's value. These should always be the same.\n      expect(thumbLabelTextElement.textContent).toBe(`${sliderInstance.value}`);\n    });\n  });\n\n  describe('slider with custom thumb label formatting', () => {\n    let fixture: ComponentFixture<SliderWithCustomThumbLabelFormatting>;\n    let sliderInstance: MatSlider;\n    let thumbLabelTextElement: Element;\n\n    beforeEach(() => {\n      fixture = createComponent(SliderWithCustomThumbLabelFormatting);\n      fixture.detectChanges();\n\n      const sliderDebugElement = fixture.debugElement.query(By.directive(MatSlider));\n      const sliderNativeElement = sliderDebugElement.nativeElement;\n      sliderInstance = sliderDebugElement.componentInstance;\n      thumbLabelTextElement = sliderNativeElement.querySelector('.mat-slider-thumb-label-text')!;\n    });\n\n    it('should invoke the passed-in `displayWith` function with the value', () => {\n      spyOn(fixture.componentInstance, 'displayWith').and.callThrough();\n\n      sliderInstance.value = 1337;\n      fixture.detectChanges();\n\n      expect(fixture.componentInstance.displayWith).toHaveBeenCalledWith(1337);\n    });\n\n    it('should format the thumb label based on the passed-in `displayWith` function', () => {\n      sliderInstance.value = 200000;\n      fixture.detectChanges();\n\n      expect(thumbLabelTextElement.textContent).toBe('200k');\n    });\n  });\n\n  describe('slider with value property binding', () => {\n    let fixture: ComponentFixture<SliderWithOneWayBinding>;\n    let sliderDebugElement: DebugElement;\n    let sliderNativeElement: HTMLElement;\n    let sliderInstance: MatSlider;\n    let testComponent: SliderWithOneWayBinding;\n    let trackFillElement: HTMLElement;\n\n    beforeEach(() => {\n      fixture = createComponent(SliderWithOneWayBinding);\n      fixture.detectChanges();\n\n      testComponent = fixture.debugElement.componentInstance;\n\n      sliderDebugElement = fixture.debugElement.query(By.directive(MatSlider));\n      sliderNativeElement = sliderDebugElement.nativeElement;\n      sliderInstance = sliderDebugElement.injector.get<MatSlider>(MatSlider);\n      trackFillElement = <HTMLElement>sliderNativeElement.querySelector('.mat-slider-track-fill');\n    });\n\n    it('should initialize based on bound value', () => {\n      expect(sliderInstance.value).toBe(50);\n      expect(trackFillElement.style.transform).toContain('scale3d(0.5, 1, 1)');\n    });\n\n    it('should update when bound value changes', () => {\n      testComponent.val = 75;\n      fixture.detectChanges();\n\n      expect(sliderInstance.value).toBe(75);\n      expect(trackFillElement.style.transform).toContain('scale3d(0.75, 1, 1)');\n    });\n  });\n\n  describe('slider with set min and max and a value smaller than min', () => {\n    let fixture: ComponentFixture<SliderWithValueSmallerThanMin>;\n    let sliderDebugElement: DebugElement;\n    let sliderNativeElement: HTMLElement;\n    let sliderInstance: MatSlider;\n    let trackFillElement: HTMLElement;\n\n    beforeEach(() => {\n      fixture = createComponent(SliderWithValueSmallerThanMin);\n      fixture.detectChanges();\n\n      sliderDebugElement = fixture.debugElement.query(By.directive(MatSlider));\n      sliderNativeElement = sliderDebugElement.nativeElement;\n      sliderInstance = sliderDebugElement.componentInstance;\n      trackFillElement = <HTMLElement>sliderNativeElement.querySelector('.mat-slider-track-fill');\n    });\n\n    it('should set the value smaller than the min value', () => {\n      expect(sliderInstance.value).toBe(3);\n      expect(sliderInstance.min).toBe(4);\n      expect(sliderInstance.max).toBe(6);\n    });\n\n    it('should set the fill to the min value', () => {\n      expect(trackFillElement.style.transform).toContain('scale3d(0, 1, 1)');\n    });\n  });\n\n  describe('slider with set min and max and a value greater than max', () => {\n    let fixture: ComponentFixture<SliderWithValueSmallerThanMin>;\n    let sliderDebugElement: DebugElement;\n    let sliderNativeElement: HTMLElement;\n    let sliderInstance: MatSlider;\n    let trackFillElement: HTMLElement;\n\n    beforeEach(() => {\n      fixture = createComponent(SliderWithValueGreaterThanMax);\n      fixture.detectChanges();\n\n      sliderDebugElement = fixture.debugElement.query(By.directive(MatSlider));\n      sliderNativeElement = sliderDebugElement.nativeElement;\n      sliderInstance = sliderDebugElement.componentInstance;\n      trackFillElement = <HTMLElement>sliderNativeElement.querySelector('.mat-slider-track-fill');\n    });\n\n    it('should set the value greater than the max value', () => {\n      expect(sliderInstance.value).toBe(7);\n      expect(sliderInstance.min).toBe(4);\n      expect(sliderInstance.max).toBe(6);\n    });\n\n    it('should set the fill to the max value', () => {\n      expect(trackFillElement.style.transform).toContain('scale3d(1, 1, 1)');\n    });\n  });\n\n  describe('slider with change handler', () => {\n    let fixture: ComponentFixture<SliderWithChangeHandler>;\n    let sliderDebugElement: DebugElement;\n    let sliderNativeElement: HTMLElement;\n    let testComponent: SliderWithChangeHandler;\n\n    beforeEach(() => {\n      fixture = createComponent(SliderWithChangeHandler);\n      fixture.detectChanges();\n\n      testComponent = fixture.debugElement.componentInstance;\n      spyOn(testComponent, 'onChange');\n      spyOn(testComponent, 'onInput');\n\n      sliderDebugElement = fixture.debugElement.query(By.directive(MatSlider));\n      sliderNativeElement = sliderDebugElement.nativeElement;\n    });\n\n    it('should emit change on mousedown', () => {\n      expect(testComponent.onChange).not.toHaveBeenCalled();\n\n      dispatchMousedownEventSequence(sliderNativeElement, 0.2);\n      fixture.detectChanges();\n\n      expect(testComponent.onChange).toHaveBeenCalledTimes(1);\n    });\n\n    it('should emit change on slide', () => {\n      expect(testComponent.onChange).not.toHaveBeenCalled();\n\n      dispatchSlideEventSequence(sliderNativeElement, 0, 0.4, gestureConfig);\n      fixture.detectChanges();\n\n      expect(testComponent.onChange).toHaveBeenCalledTimes(1);\n    });\n\n    it('should not emit multiple changes for same value', () => {\n      expect(testComponent.onChange).not.toHaveBeenCalled();\n\n      dispatchMousedownEventSequence(sliderNativeElement, 0.6);\n      dispatchSlideEventSequence(sliderNativeElement, 0.6, 0.6, gestureConfig);\n      fixture.detectChanges();\n\n      expect(testComponent.onChange).toHaveBeenCalledTimes(1);\n    });\n\n    it('should dispatch events when changing back to previously emitted value after ' +\n        'programmatically setting value', () => {\n      expect(testComponent.onChange).not.toHaveBeenCalled();\n      expect(testComponent.onInput).not.toHaveBeenCalled();\n\n      dispatchMousedownEventSequence(sliderNativeElement, 0.2);\n      fixture.detectChanges();\n\n      expect(testComponent.onChange).toHaveBeenCalledTimes(1);\n      expect(testComponent.onInput).toHaveBeenCalledTimes(1);\n\n      testComponent.slider.value = 0;\n      fixture.detectChanges();\n\n      expect(testComponent.onChange).toHaveBeenCalledTimes(1);\n      expect(testComponent.onInput).toHaveBeenCalledTimes(1);\n\n      dispatchMousedownEventSequence(sliderNativeElement, 0.2);\n      fixture.detectChanges();\n\n      expect(testComponent.onChange).toHaveBeenCalledTimes(2);\n      expect(testComponent.onInput).toHaveBeenCalledTimes(2);\n    });\n  });\n\n  describe('slider with input event', () => {\n    let fixture: ComponentFixture<SliderWithChangeHandler>;\n    let sliderDebugElement: DebugElement;\n    let sliderNativeElement: HTMLElement;\n    let testComponent: SliderWithChangeHandler;\n\n    beforeEach(() => {\n      fixture = createComponent(SliderWithChangeHandler);\n      fixture.detectChanges();\n\n      testComponent = fixture.debugElement.componentInstance;\n      spyOn(testComponent, 'onInput');\n      spyOn(testComponent, 'onChange');\n\n      sliderDebugElement = fixture.debugElement.query(By.directive(MatSlider));\n      sliderNativeElement = sliderDebugElement.nativeElement;\n    });\n\n    it('should emit an input event while sliding', () => {\n      expect(testComponent.onChange).not.toHaveBeenCalled();\n\n      dispatchMouseenterEvent(sliderNativeElement);\n      dispatchSlideEvent(sliderNativeElement, 0.5, gestureConfig);\n      dispatchSlideEvent(sliderNativeElement, 1, gestureConfig);\n      dispatchSlideEndEvent(sliderNativeElement, 1, gestureConfig);\n\n      fixture.detectChanges();\n\n      // The input event should fire twice, because the slider changed two times.\n      expect(testComponent.onInput).toHaveBeenCalledTimes(2);\n      expect(testComponent.onChange).toHaveBeenCalledTimes(1);\n    });\n\n    it('should emit an input event when clicking', () => {\n      expect(testComponent.onChange).not.toHaveBeenCalled();\n\n      dispatchMousedownEventSequence(sliderNativeElement, 0.75);\n\n      fixture.detectChanges();\n\n      // The `onInput` event should be emitted once due to a single click.\n      expect(testComponent.onInput).toHaveBeenCalledTimes(1);\n      expect(testComponent.onChange).toHaveBeenCalledTimes(1);\n    });\n\n  });\n\n  describe('keyboard support', () => {\n    let fixture: ComponentFixture<SliderWithChangeHandler>;\n    let sliderDebugElement: DebugElement;\n    let sliderNativeElement: HTMLElement;\n    let testComponent: SliderWithChangeHandler;\n    let sliderInstance: MatSlider;\n\n    beforeEach(() => {\n      fixture = createComponent(SliderWithChangeHandler);\n      fixture.detectChanges();\n\n      testComponent = fixture.debugElement.componentInstance;\n      spyOn(testComponent, 'onInput');\n      spyOn(testComponent, 'onChange');\n\n      sliderDebugElement = fixture.debugElement.query(By.directive(MatSlider));\n      sliderNativeElement = sliderDebugElement.nativeElement;\n      sliderInstance = sliderDebugElement.injector.get<MatSlider>(MatSlider);\n    });\n\n    it('should increment slider by 1 on up arrow pressed', () => {\n      expect(testComponent.onChange).not.toHaveBeenCalled();\n\n      dispatchKeyboardEvent(sliderNativeElement, 'keydown', UP_ARROW);\n      fixture.detectChanges();\n\n      // The `onInput` event should be emitted once due to a single keyboard press.\n      expect(testComponent.onInput).toHaveBeenCalledTimes(1);\n      expect(testComponent.onChange).toHaveBeenCalledTimes(1);\n      expect(sliderInstance.value).toBe(1);\n    });\n\n    it('should increment slider by 1 on right arrow pressed', () => {\n      expect(testComponent.onChange).not.toHaveBeenCalled();\n\n      dispatchKeyboardEvent(sliderNativeElement, 'keydown', RIGHT_ARROW);\n      fixture.detectChanges();\n\n      // The `onInput` event should be emitted once due to a single keyboard press.\n      expect(testComponent.onInput).toHaveBeenCalledTimes(1);\n      expect(testComponent.onChange).toHaveBeenCalledTimes(1);\n      expect(sliderInstance.value).toBe(1);\n    });\n\n    it('should decrement slider by 1 on down arrow pressed', () => {\n      sliderInstance.value = 100;\n\n      expect(testComponent.onChange).not.toHaveBeenCalled();\n\n      dispatchKeyboardEvent(sliderNativeElement, 'keydown', DOWN_ARROW);\n      fixture.detectChanges();\n\n      // The `onInput` event should be emitted once due to a single keyboard press.\n      expect(testComponent.onInput).toHaveBeenCalledTimes(1);\n      expect(testComponent.onChange).toHaveBeenCalledTimes(1);\n      expect(sliderInstance.value).toBe(99);\n    });\n\n    it('should decrement slider by 1 on left arrow pressed', () => {\n      sliderInstance.value = 100;\n\n      expect(testComponent.onChange).not.toHaveBeenCalled();\n\n      dispatchKeyboardEvent(sliderNativeElement, 'keydown', LEFT_ARROW);\n      fixture.detectChanges();\n\n      // The `onInput` event should be emitted once due to a single keyboard press.\n      expect(testComponent.onInput).toHaveBeenCalledTimes(1);\n      expect(testComponent.onChange).toHaveBeenCalledTimes(1);\n      expect(sliderInstance.value).toBe(99);\n    });\n\n    it('should increment slider by 10 on page up pressed', () => {\n      expect(testComponent.onChange).not.toHaveBeenCalled();\n\n      dispatchKeyboardEvent(sliderNativeElement, 'keydown', PAGE_UP);\n      fixture.detectChanges();\n\n      // The `onInput` event should be emitted once due to a single keyboard press.\n      expect(testComponent.onInput).toHaveBeenCalledTimes(1);\n      expect(testComponent.onChange).toHaveBeenCalledTimes(1);\n      expect(sliderInstance.value).toBe(10);\n    });\n\n    it('should decrement slider by 10 on page down pressed', () => {\n      sliderInstance.value = 100;\n\n      expect(testComponent.onChange).not.toHaveBeenCalled();\n\n      dispatchKeyboardEvent(sliderNativeElement, 'keydown', PAGE_DOWN);\n      fixture.detectChanges();\n\n      // The `onInput` event should be emitted once due to a single keyboard press.\n      expect(testComponent.onInput).toHaveBeenCalledTimes(1);\n      expect(testComponent.onChange).toHaveBeenCalledTimes(1);\n      expect(sliderInstance.value).toBe(90);\n    });\n\n    it('should set slider to max on end pressed', () => {\n      expect(testComponent.onChange).not.toHaveBeenCalled();\n\n      dispatchKeyboardEvent(sliderNativeElement, 'keydown', END);\n      fixture.detectChanges();\n\n      // The `onInput` event should be emitted once due to a single keyboard press.\n      expect(testComponent.onInput).toHaveBeenCalledTimes(1);\n      expect(testComponent.onChange).toHaveBeenCalledTimes(1);\n      expect(sliderInstance.value).toBe(100);\n    });\n\n    it('should set slider to min on home pressed', () => {\n      sliderInstance.value = 100;\n\n      expect(testComponent.onChange).not.toHaveBeenCalled();\n\n      dispatchKeyboardEvent(sliderNativeElement, 'keydown', HOME);\n      fixture.detectChanges();\n\n      // The `onInput` event should be emitted once due to a single keyboard press.\n      expect(testComponent.onInput).toHaveBeenCalledTimes(1);\n      expect(testComponent.onChange).toHaveBeenCalledTimes(1);\n      expect(sliderInstance.value).toBe(0);\n    });\n\n    it(`should take no action for presses of keys it doesn't care about`, () => {\n      sliderInstance.value = 50;\n\n      expect(testComponent.onChange).not.toHaveBeenCalled();\n\n      dispatchKeyboardEvent(sliderNativeElement, 'keydown', BACKSPACE);\n      fixture.detectChanges();\n\n      // The `onInput` event should be emitted once due to a single keyboard press.\n      expect(testComponent.onInput).not.toHaveBeenCalled();\n      expect(testComponent.onChange).not.toHaveBeenCalled();\n      expect(sliderInstance.value).toBe(50);\n    });\n\n    it('should ignore events modifier keys', () => {\n      sliderInstance.value = 0;\n\n      [\n        UP_ARROW, DOWN_ARROW, RIGHT_ARROW,\n        LEFT_ARROW, PAGE_DOWN, PAGE_UP, HOME, END\n      ].forEach(key => {\n        const event = createKeyboardEvent('keydown', key);\n        Object.defineProperty(event, 'altKey', {get: () => true});\n        dispatchEvent(sliderNativeElement, event);\n        fixture.detectChanges();\n        expect(event.defaultPrevented).toBe(false);\n      });\n\n      expect(testComponent.onInput).not.toHaveBeenCalled();\n      expect(testComponent.onChange).not.toHaveBeenCalled();\n      expect(sliderInstance.value).toBe(0);\n    });\n\n  });\n\n  describe('slider with direction and invert', () => {\n    let fixture: ComponentFixture<SliderWithDirAndInvert>;\n    let sliderDebugElement: DebugElement;\n    let sliderNativeElement: HTMLElement;\n    let sliderInstance: MatSlider;\n    let testComponent: SliderWithDirAndInvert;\n\n    beforeEach(() => {\n      fixture = createComponent(SliderWithDirAndInvert);\n      fixture.detectChanges();\n\n      testComponent = fixture.debugElement.componentInstance;\n      sliderDebugElement = fixture.debugElement.query(By.directive(MatSlider));\n      sliderInstance = sliderDebugElement.injector.get<MatSlider>(MatSlider);\n      sliderNativeElement = sliderDebugElement.nativeElement;\n    });\n\n    it('works in inverted mode', () => {\n      testComponent.invert = true;\n      fixture.detectChanges();\n\n      dispatchMousedownEventSequence(sliderNativeElement, 0.3);\n      fixture.detectChanges();\n\n      expect(sliderInstance.value).toBe(70);\n    });\n\n    it('works in RTL languages', () => {\n      testComponent.dir = 'rtl';\n      fixture.detectChanges();\n\n      dispatchMousedownEventSequence(sliderNativeElement, 0.3);\n      fixture.detectChanges();\n\n      expect(sliderInstance.value).toBe(70);\n    });\n\n    it('works in RTL languages in inverted mode', () => {\n      testComponent.dir = 'rtl';\n      testComponent.invert = true;\n      fixture.detectChanges();\n\n      dispatchMousedownEventSequence(sliderNativeElement, 0.3);\n      fixture.detectChanges();\n\n      expect(sliderInstance.value).toBe(30);\n    });\n\n    it('should re-render slider with updated style upon directionality change', () => {\n      testComponent.dir = 'rtl';\n      fixture.detectChanges();\n\n      let initialTrackFillStyles = sliderInstance._trackFillStyles;\n      let initialTicksContainerStyles = sliderInstance._ticksContainerStyles;\n      let initialTicksStyles = sliderInstance._ticksStyles;\n      let initialThumbContainerStyles = sliderInstance._thumbContainerStyles;\n\n      testComponent.dir = 'ltr';\n      fixture.detectChanges();\n\n      expect(initialTrackFillStyles).not.toEqual(sliderInstance._trackFillStyles);\n      expect(initialTicksContainerStyles).not.toEqual(sliderInstance._ticksContainerStyles);\n      expect(initialTicksStyles).not.toEqual(sliderInstance._ticksStyles);\n      expect(initialThumbContainerStyles).not.toEqual(sliderInstance._thumbContainerStyles);\n    });\n\n    it('should increment inverted slider by 1 on right arrow pressed', () => {\n      testComponent.invert = true;\n      fixture.detectChanges();\n\n      dispatchKeyboardEvent(sliderNativeElement, 'keydown', RIGHT_ARROW);\n      fixture.detectChanges();\n\n      expect(sliderInstance.value).toBe(1);\n    });\n\n    it('should decrement inverted slider by 1 on left arrow pressed', () => {\n      testComponent.invert = true;\n      sliderInstance.value = 100;\n      fixture.detectChanges();\n\n      dispatchKeyboardEvent(sliderNativeElement, 'keydown', LEFT_ARROW);\n      fixture.detectChanges();\n\n      expect(sliderInstance.value).toBe(99);\n    });\n\n    it('should decrement RTL slider by 1 on right arrow pressed', () => {\n      testComponent.dir = 'rtl';\n      sliderInstance.value = 100;\n      fixture.detectChanges();\n\n      dispatchKeyboardEvent(sliderNativeElement, 'keydown', RIGHT_ARROW);\n      fixture.detectChanges();\n\n      expect(sliderInstance.value).toBe(99);\n    });\n\n    it('should increment RTL slider by 1 on left arrow pressed', () => {\n      testComponent.dir = 'rtl';\n      fixture.detectChanges();\n\n      dispatchKeyboardEvent(sliderNativeElement, 'keydown', LEFT_ARROW);\n      fixture.detectChanges();\n\n      expect(sliderInstance.value).toBe(1);\n    });\n\n    it('should decrement inverted RTL slider by 1 on right arrow pressed', () => {\n      testComponent.dir = 'rtl';\n      testComponent.invert = true;\n      sliderInstance.value = 100;\n      fixture.detectChanges();\n\n      dispatchKeyboardEvent(sliderNativeElement, 'keydown', RIGHT_ARROW);\n      fixture.detectChanges();\n\n      expect(sliderInstance.value).toBe(99);\n    });\n\n    it('should increment inverted RTL slider by 1 on left arrow pressed', () => {\n      testComponent.dir = 'rtl';\n      testComponent.invert = true;\n      fixture.detectChanges();\n\n      dispatchKeyboardEvent(sliderNativeElement, 'keydown', LEFT_ARROW);\n      fixture.detectChanges();\n\n      expect(sliderInstance.value).toBe(1);\n    });\n\n    it('should hide last tick when inverted and at min value', () => {\n      testComponent.invert = true;\n      fixture.detectChanges();\n\n      expect(sliderNativeElement.classList.contains('mat-slider-hide-last-tick'))\n          .toBe(true, 'last tick should be hidden');\n    });\n  });\n\n  describe('vertical slider', () => {\n    let fixture: ComponentFixture<VerticalSlider>;\n    let sliderDebugElement: DebugElement;\n    let sliderNativeElement: HTMLElement;\n    let trackFillElement: HTMLElement;\n    let sliderInstance: MatSlider;\n    let testComponent: VerticalSlider;\n\n    beforeEach(() => {\n      fixture = createComponent(VerticalSlider);\n      fixture.detectChanges();\n\n      testComponent = fixture.debugElement.componentInstance;\n      sliderDebugElement = fixture.debugElement.query(By.directive(MatSlider));\n      sliderInstance = sliderDebugElement.injector.get<MatSlider>(MatSlider);\n      sliderNativeElement = sliderDebugElement.nativeElement;\n      trackFillElement = <HTMLElement>sliderNativeElement.querySelector('.mat-slider-track-fill');\n    });\n\n    it('updates value on mousedown', () => {\n      dispatchMousedownEventSequence(sliderNativeElement, 0.3);\n      fixture.detectChanges();\n\n      expect(sliderInstance.value).toBe(70);\n    });\n\n    it('updates value on mousedown in inverted mode', () => {\n      testComponent.invert = true;\n      fixture.detectChanges();\n\n      dispatchMousedownEventSequence(sliderNativeElement, 0.3);\n      fixture.detectChanges();\n\n      expect(sliderInstance.value).toBe(30);\n    });\n\n    it('should update the track fill on mousedown', () => {\n      expect(trackFillElement.style.transform).toContain('scale3d(1, 0, 1)');\n\n      dispatchMousedownEventSequence(sliderNativeElement, 0.39);\n      fixture.detectChanges();\n\n      expect(trackFillElement.style.transform).toContain('scale3d(1, 0.61, 1)');\n    });\n\n    it('should update the track fill on mousedown in inverted mode', () => {\n      testComponent.invert = true;\n      fixture.detectChanges();\n\n      expect(trackFillElement.style.transform).toContain('scale3d(1, 0, 1)');\n\n      dispatchMousedownEventSequence(sliderNativeElement, 0.39);\n      fixture.detectChanges();\n\n      expect(trackFillElement.style.transform).toContain('scale3d(1, 0.39, 1)');\n    });\n\n    it('should have aria-orientation vertical', () => {\n      expect(sliderNativeElement.getAttribute('aria-orientation')).toEqual('vertical');\n    });\n  });\n\n  describe('tabindex', () => {\n\n    it('should allow setting the tabIndex through binding', () => {\n      const fixture = createComponent(SliderWithTabIndexBinding);\n      fixture.detectChanges();\n\n      const slider = fixture.debugElement.query(By.directive(MatSlider)).componentInstance;\n\n      expect(slider.tabIndex).toBe(0, 'Expected the tabIndex to be set to 0 by default.');\n\n      fixture.componentInstance.tabIndex = 3;\n      fixture.detectChanges();\n\n      expect(slider.tabIndex).toBe(3, 'Expected the tabIndex to have been changed.');\n    });\n\n    it('should detect the native tabindex attribute', () => {\n      const fixture = createComponent(SliderWithNativeTabindexAttr);\n      fixture.detectChanges();\n\n      const slider = fixture.debugElement.query(By.directive(MatSlider)).componentInstance;\n\n      expect(slider.tabIndex)\n        .toBe(5, 'Expected the tabIndex to be set to the value of the native attribute.');\n    });\n  });\n\n  describe('slider with ngModel', () => {\n    let fixture: ComponentFixture<SliderWithNgModel>;\n    let sliderDebugElement: DebugElement;\n    let sliderNativeElement: HTMLElement;\n    let testComponent: SliderWithNgModel;\n\n    beforeEach(() => {\n      fixture = createComponent(SliderWithNgModel);\n      fixture.detectChanges();\n\n      testComponent = fixture.debugElement.componentInstance;\n\n      sliderDebugElement = fixture.debugElement.query(By.directive(MatSlider));\n      sliderNativeElement = sliderDebugElement.nativeElement;\n    });\n\n    it('should update the model on mousedown', () => {\n      expect(testComponent.val).toBe(0);\n\n      dispatchMousedownEventSequence(sliderNativeElement, 0.76);\n      fixture.detectChanges();\n\n      expect(testComponent.val).toBe(76);\n    });\n\n    it('should update the model on slide', () => {\n      expect(testComponent.val).toBe(0);\n\n      dispatchSlideEventSequence(sliderNativeElement, 0, 0.19, gestureConfig);\n      fixture.detectChanges();\n\n      expect(testComponent.val).toBe(19);\n    });\n\n    it('should update the model on keydown', () => {\n      expect(testComponent.val).toBe(0);\n\n      dispatchKeyboardEvent(sliderNativeElement, 'keydown', UP_ARROW);\n      fixture.detectChanges();\n\n      expect(testComponent.val).toBe(1);\n    });\n\n    it('should be able to reset a slider by setting the model back to undefined', fakeAsync(() => {\n      expect(testComponent.slider.value).toBe(0);\n\n      testComponent.val = 5;\n      fixture.detectChanges();\n      flush();\n\n      expect(testComponent.slider.value).toBe(5);\n\n      testComponent.val = undefined;\n      fixture.detectChanges();\n      flush();\n\n      expect(testComponent.slider.value).toBe(0);\n    }));\n\n  });\n\n  describe('slider as a custom form control', () => {\n    let fixture: ComponentFixture<SliderWithFormControl>;\n    let sliderDebugElement: DebugElement;\n    let sliderNativeElement: HTMLElement;\n    let sliderInstance: MatSlider;\n    let testComponent: SliderWithFormControl;\n\n    beforeEach(() => {\n      fixture = createComponent(SliderWithFormControl);\n      fixture.detectChanges();\n\n      testComponent = fixture.debugElement.componentInstance;\n\n      sliderDebugElement = fixture.debugElement.query(By.directive(MatSlider));\n      sliderNativeElement = sliderDebugElement.nativeElement;\n      sliderInstance = sliderDebugElement.injector.get<MatSlider>(MatSlider);\n    });\n\n    it('should not update the control when the value is updated', () => {\n      expect(testComponent.control.value).toBe(0);\n\n      sliderInstance.value = 11;\n      fixture.detectChanges();\n\n      expect(testComponent.control.value).toBe(0);\n    });\n\n    it('should update the control on mousedown', () => {\n      expect(testComponent.control.value).toBe(0);\n\n      dispatchMousedownEventSequence(sliderNativeElement, 0.76);\n      fixture.detectChanges();\n\n      expect(testComponent.control.value).toBe(76);\n    });\n\n    it('should update the control on slide', () => {\n      expect(testComponent.control.value).toBe(0);\n\n      dispatchSlideEventSequence(sliderNativeElement, 0, 0.19, gestureConfig);\n      fixture.detectChanges();\n\n      expect(testComponent.control.value).toBe(19);\n    });\n\n    it('should update the value when the control is set', () => {\n      expect(sliderInstance.value).toBe(0);\n\n      testComponent.control.setValue(7);\n      fixture.detectChanges();\n\n      expect(sliderInstance.value).toBe(7);\n    });\n\n    it('should update the disabled state when control is disabled', () => {\n      expect(sliderInstance.disabled).toBe(false);\n\n      testComponent.control.disable();\n      fixture.detectChanges();\n\n      expect(sliderInstance.disabled).toBe(true);\n    });\n\n    it('should update the disabled state when the control is enabled', () => {\n      sliderInstance.disabled = true;\n\n      testComponent.control.enable();\n      fixture.detectChanges();\n\n      expect(sliderInstance.disabled).toBe(false);\n    });\n\n    it('should have the correct control state initially and after interaction', () => {\n      let sliderControl = testComponent.control;\n\n      // The control should start off valid, pristine, and untouched.\n      expect(sliderControl.valid).toBe(true);\n      expect(sliderControl.pristine).toBe(true);\n      expect(sliderControl.touched).toBe(false);\n\n      // After changing the value, the control should become dirty (not pristine),\n      // but remain untouched.\n      dispatchMousedownEventSequence(sliderNativeElement, 0.5);\n      fixture.detectChanges();\n\n      expect(sliderControl.valid).toBe(true);\n      expect(sliderControl.pristine).toBe(false);\n      expect(sliderControl.touched).toBe(false);\n\n      // If the control has been visited due to interaction, the control should remain\n      // dirty and now also be touched.\n      sliderInstance._onBlur();\n      fixture.detectChanges();\n\n      expect(sliderControl.valid).toBe(true);\n      expect(sliderControl.pristine).toBe(false);\n      expect(sliderControl.touched).toBe(true);\n    });\n  });\n\n  describe('slider with a two-way binding', () => {\n    let fixture: ComponentFixture<SliderWithTwoWayBinding>;\n    let testComponent: SliderWithTwoWayBinding;\n    let sliderNativeElement: HTMLElement;\n\n    beforeEach(() => {\n      fixture = createComponent(SliderWithTwoWayBinding);\n      fixture.detectChanges();\n\n      testComponent = fixture.componentInstance;\n      let sliderDebugElement = fixture.debugElement.query(By.directive(MatSlider));\n      sliderNativeElement = sliderDebugElement.nativeElement;\n    });\n\n    it('should sync the value binding in both directions', () => {\n      expect(testComponent.value).toBe(0);\n      expect(testComponent.slider.value).toBe(0);\n\n      dispatchMousedownEventSequence(sliderNativeElement, 0.1);\n      fixture.detectChanges();\n\n      expect(testComponent.value).toBe(10);\n      expect(testComponent.slider.value).toBe(10);\n\n      testComponent.value = 20;\n      fixture.detectChanges();\n\n      expect(testComponent.value).toBe(20);\n      expect(testComponent.slider.value).toBe(20);\n    });\n  });\n\n});\n\n// Disable animations and make the slider an even 100px (+ 8px padding on either side)\n// so we get nice round values in tests.\nconst styles = `\n  .mat-slider-horizontal { min-width: 116px !important; }\n  .mat-slider-vertical { min-height: 116px !important; }\n  .mat-slider-track-fill { transition: none !important; }\n`;\n\n@Component({\n  template: `<mat-slider></mat-slider>`,\n  styles: [styles],\n})\nclass StandardSlider { }\n\n@Component({\n  template: `<mat-slider disabled></mat-slider>`,\n  styles: [styles],\n})\nclass DisabledSlider { }\n\n@Component({\n  template: `<mat-slider [min]=\"min\" [max]=\"max\" tickInterval=\"6\"></mat-slider>`,\n  styles: [styles],\n})\nclass SliderWithMinAndMax {\n  min = 4;\n  max = 6;\n}\n\n@Component({\n  template: `<mat-slider value=\"26\"></mat-slider>`,\n  styles: [styles],\n})\nclass SliderWithValue { }\n\n@Component({\n  template: `<mat-slider [step]=\"step\"></mat-slider>`,\n  styles: [styles],\n})\nclass SliderWithStep {\n  step = 25;\n}\n\n@Component({\n  template: `<mat-slider step=\"5\" tickInterval=\"auto\"></mat-slider>`,\n  styles: [styles],\n})\nclass SliderWithAutoTickInterval { }\n\n@Component({\n  template: `<mat-slider step=\"3\" [tickInterval]=\"tickInterval\"></mat-slider>`,\n  styles: [styles],\n})\nclass SliderWithSetTickInterval {\n  tickInterval = 6;\n}\n\n@Component({\n  template: `<mat-slider thumbLabel></mat-slider>`,\n  styles: [styles],\n})\nclass SliderWithThumbLabel { }\n\n\n@Component({\n  template: `<mat-slider min=\"1\" max=\"100000\" [displayWith]=\"displayWith\" thumbLabel></mat-slider>`,\n  styles: [styles],\n})\nclass SliderWithCustomThumbLabelFormatting {\n  displayWith(value: number | null) {\n    if (!value) {\n      return 0;\n    }\n\n    if (value >= 1000) {\n      return (value / 1000) + 'k';\n    }\n\n    return value;\n  }\n}\n\n\n@Component({\n  template: `<mat-slider [value]=\"val\"></mat-slider>`,\n  styles: [styles],\n})\nclass SliderWithOneWayBinding {\n  val = 50;\n}\n\n@Component({\n  template: `<mat-slider [formControl]=\"control\"></mat-slider>`,\n  styles: [styles],\n})\nclass SliderWithFormControl {\n  control = new FormControl(0);\n}\n\n@Component({\n  template: `<mat-slider [(ngModel)]=\"val\"></mat-slider>`,\n  styles: [styles],\n})\nclass SliderWithNgModel {\n  @ViewChild(MatSlider) slider: MatSlider;\n  val: number | undefined = 0;\n}\n\n@Component({\n  template: `<mat-slider value=\"3\" min=\"4\" max=\"6\"></mat-slider>`,\n  styles: [styles],\n})\nclass SliderWithValueSmallerThanMin { }\n\n@Component({\n  template: `<mat-slider value=\"7\" min=\"4\" max=\"6\"></mat-slider>`,\n  styles: [styles],\n})\nclass SliderWithValueGreaterThanMax { }\n\n@Component({\n  template: `<mat-slider (change)=\"onChange($event)\" (input)=\"onInput($event)\"></mat-slider>`,\n  styles: [styles],\n})\nclass SliderWithChangeHandler {\n  onChange() { }\n  onInput() { }\n\n  @ViewChild(MatSlider) slider: MatSlider;\n}\n\n@Component({\n  template: `<div [dir]=\"dir\"><mat-slider [invert]=\"invert\" tickInterval=\"5\"></mat-slider></div>`,\n  styles: [styles],\n})\nclass SliderWithDirAndInvert {\n  dir = 'ltr';\n  invert = false;\n}\n\n@Component({\n  template: `<mat-slider vertical [invert]=\"invert\"></mat-slider>`,\n  styles: [styles],\n})\nclass VerticalSlider {\n  invert = false;\n}\n\n@Component({\n  template: `<mat-slider [tabIndex]=\"tabIndex\"></mat-slider>`,\n  styles: [styles],\n})\nclass SliderWithTabIndexBinding {\n  tabIndex: number;\n}\n\n@Component({\n  template: `<mat-slider tabindex=\"5\"></mat-slider>`,\n  styles: [styles],\n})\nclass SliderWithNativeTabindexAttr {\n  tabIndex: number;\n}\n\n@Component({\n  template: '<mat-slider [(value)]=\"value\"></mat-slider>',\n  styles: [styles],\n})\nclass SliderWithTwoWayBinding {\n  @ViewChild(MatSlider) slider: MatSlider;\n  value = 0;\n}\n\n/**\n * Dispatches a mousedown event sequence (consisting of moueseenter, mousedown) from an element.\n * Note: The mouse event truncates the position for the event.\n * @param sliderElement The mat-slider element from which the event will be dispatched.\n * @param percentage The percentage of the slider where the event should occur. Used to find the\n * physical location of the pointer.\n * @param button Button that should be held down when starting to drag the slider.\n */\nfunction dispatchMousedownEventSequence(sliderElement: HTMLElement, percentage: number,\n                                        button = 0): void {\n  const trackElement = sliderElement.querySelector('.mat-slider-wrapper')!;\n  const dimensions = trackElement.getBoundingClientRect();\n  const x = dimensions.left + (dimensions.width * percentage);\n  const y = dimensions.top + (dimensions.height * percentage);\n\n  dispatchMouseenterEvent(sliderElement);\n  dispatchEvent(sliderElement, createMouseEvent('mousedown', x, y, button));\n}\n\n/**\n * Dispatches a slide event sequence (consisting of slidestart, slide, slideend) from an element.\n * @param sliderElement The mat-slider element from which the event will be dispatched.\n * @param startPercent The percentage of the slider where the slide will begin.\n * @param endPercent The percentage of the slider where the slide will end.\n * @param gestureConfig The gesture config for the test to handle emitting the slide events.\n */\nfunction dispatchSlideEventSequence(sliderElement: HTMLElement, startPercent: number,\n                                    endPercent: number, gestureConfig: TestGestureConfig): void {\n  dispatchMouseenterEvent(sliderElement);\n  dispatchSlideStartEvent(sliderElement, startPercent, gestureConfig);\n  dispatchSlideEvent(sliderElement, startPercent, gestureConfig);\n  dispatchSlideEvent(sliderElement, endPercent, gestureConfig);\n  dispatchSlideEndEvent(sliderElement, endPercent, gestureConfig);\n}\n\n/**\n * Dispatches a slide event from an element.\n * @param sliderElement The mat-slider element from which the event will be dispatched.\n * @param percent The percentage of the slider where the slide will happen.\n * @param gestureConfig The gesture config for the test to handle emitting the slide events.\n */\nfunction dispatchSlideEvent(sliderElement: HTMLElement, percent: number,\n                            gestureConfig: TestGestureConfig): void {\n  let trackElement = sliderElement.querySelector('.mat-slider-wrapper')!;\n  let dimensions = trackElement.getBoundingClientRect();\n  let x = dimensions.left + (dimensions.width * percent);\n  let y = dimensions.top + (dimensions.height * percent);\n\n  gestureConfig.emitEventForElement('slide', sliderElement, {\n    center: { x: x, y: y },\n    srcEvent: { preventDefault: jasmine.createSpy('preventDefault') }\n  });\n}\n\n/**\n * Dispatches a slidestart event from an element.\n * @param sliderElement The mat-slider element from which the event will be dispatched.\n * @param percent The percentage of the slider where the slide will begin.\n * @param gestureConfig The gesture config for the test to handle emitting the slide events.\n */\nfunction dispatchSlideStartEvent(sliderElement: HTMLElement, percent: number,\n                                 gestureConfig: TestGestureConfig): void {\n  let trackElement = sliderElement.querySelector('.mat-slider-wrapper')!;\n  let dimensions = trackElement.getBoundingClientRect();\n  let x = dimensions.left + (dimensions.width * percent);\n  let y = dimensions.top + (dimensions.height * percent);\n\n  dispatchMouseenterEvent(sliderElement);\n\n  gestureConfig.emitEventForElement('slidestart', sliderElement, {\n    center: { x: x, y: y },\n    srcEvent: { preventDefault: jasmine.createSpy('preventDefault') }\n  });\n}\n\n/**\n * Dispatches a slideend event from an element.\n * @param sliderElement The mat-slider element from which the event will be dispatched.\n * @param percent The percentage of the slider where the slide will end.\n * @param gestureConfig The gesture config for the test to handle emitting the slide events.\n */\nfunction dispatchSlideEndEvent(sliderElement: HTMLElement, percent: number,\n                               gestureConfig: TestGestureConfig): void {\n  let trackElement = sliderElement.querySelector('.mat-slider-wrapper')!;\n  let dimensions = trackElement.getBoundingClientRect();\n  let x = dimensions.left + (dimensions.width * percent);\n  let y = dimensions.top + (dimensions.height * percent);\n\n  gestureConfig.emitEventForElement('slideend', sliderElement, {\n    center: { x: x, y: y },\n    srcEvent: { preventDefault: jasmine.createSpy('preventDefault') }\n  });\n}\n\n/**\n * Dispatches a mouseenter event from an element.\n * Note: The mouse event truncates the position for the event.\n * @param element The element from which the event will be dispatched.\n */\nfunction dispatchMouseenterEvent(element: HTMLElement): void {\n  let dimensions = element.getBoundingClientRect();\n  let y = dimensions.top;\n  let x = dimensions.left;\n\n  dispatchMouseEvent(element, 'mouseenter', x, y);\n}\n"]}