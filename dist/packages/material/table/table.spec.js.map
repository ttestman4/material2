{"version":3,"file":"table.spec.js","sourceRoot":"","sources":["../../../../src/lib/table/table.spec.ts"],"names":[],"mappings":"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","sourcesContent":["import {DataSource} from '@angular/cdk/collections';\nimport {Component, OnInit, ViewChild, AfterViewInit} from '@angular/core';\nimport {\n  async,\n  ComponentFixture,\n  fakeAsync,\n  flushMicrotasks,\n  TestBed,\n  tick,\n} from '@angular/core/testing';\nimport {NoopAnimationsModule} from '@angular/platform-browser/animations';\nimport {BehaviorSubject, Observable} from 'rxjs';\nimport {MatPaginator, MatPaginatorModule} from '../paginator/index';\nimport {MatSort, MatSortHeader, MatSortModule} from '../sort/index';\nimport {MatTableModule} from './index';\nimport {MatTable} from './table';\nimport {MatTableDataSource} from './table-data-source';\n\n\ndescribe('MatTable', () => {\n  beforeEach(async(() => {\n    TestBed.configureTestingModule({\n      imports: [MatTableModule, MatPaginatorModule, MatSortModule, NoopAnimationsModule],\n      declarations: [\n        MatTableApp,\n        MatTableWithWhenRowApp,\n        ArrayDataSourceMatTableApp,\n        NativeHtmlTableApp,\n        MatTableWithSortApp,\n        MatTableWithPaginatorApp,\n        StickyTableApp,\n        TableWithNgContainerRow,\n      ],\n    }).compileComponents();\n  }));\n\n  describe('with basic data source', () => {\n    it('should be able to create a table with the right content and without when row', () => {\n      let fixture = TestBed.createComponent(MatTableApp);\n      fixture.detectChanges();\n\n      const tableElement = fixture.nativeElement.querySelector('.mat-table')!;\n      const data = fixture.componentInstance.dataSource!.data;\n      expectTableToMatchContent(tableElement, [\n        ['Column A', 'Column B', 'Column C'],\n        [data[0].a, data[0].b, data[0].c],\n        [data[1].a, data[1].b, data[1].c],\n        [data[2].a, data[2].b, data[2].c],\n        ['fourth_row'],\n        ['Footer A', 'Footer B', 'Footer C'],\n      ]);\n    });\n\n    it('should create a table with special when row', () => {\n      let fixture = TestBed.createComponent(MatTableWithWhenRowApp);\n      fixture.detectChanges();\n\n      const tableElement = fixture.nativeElement.querySelector('.mat-table');\n      expectTableToMatchContent(tableElement, [\n        ['Column A'],\n        ['a_1'],\n        ['a_2'],\n        ['a_3'],\n        ['fourth_row'],\n        ['Footer A'],\n      ]);\n    });\n\n    it('should create a table with multiTemplateDataRows true', () => {\n      let fixture = TestBed.createComponent(MatTableWithWhenRowApp);\n      fixture.componentInstance.multiTemplateDataRows = true;\n      fixture.detectChanges();\n\n      const tableElement = fixture.nativeElement.querySelector('.mat-table');\n      expectTableToMatchContent(tableElement, [\n        ['Column A'],\n        ['a_1'],\n        ['a_2'],\n        ['a_3'],\n        ['a_4'], // With multiple rows, this row shows up along with the special 'when' fourth_row\n        ['fourth_row'],\n        ['Footer A'],\n      ]);\n    });\n  });\n\n  it('should be able to render a table correctly with native elements', () => {\n    let fixture = TestBed.createComponent(NativeHtmlTableApp);\n    fixture.detectChanges();\n\n    const tableElement = fixture.nativeElement.querySelector('table');\n    const data = fixture.componentInstance.dataSource!.data;\n    expectTableToMatchContent(tableElement, [\n      ['Column A', 'Column B', 'Column C'],\n      [data[0].a, data[0].b, data[0].c],\n      [data[1].a, data[1].b, data[1].c],\n      [data[2].a, data[2].b, data[2].c],\n      [data[3].a, data[3].b, data[3].c],\n    ]);\n  });\n\n  it('should render with MatTableDataSource and sort', () => {\n    let fixture = TestBed.createComponent(MatTableWithSortApp);\n    fixture.detectChanges();\n\n    const tableElement = fixture.nativeElement.querySelector('.mat-table')!;\n    const data = fixture.componentInstance.dataSource!.data;\n    expectTableToMatchContent(tableElement, [\n      ['Column A', 'Column B', 'Column C'],\n      [data[0].a, data[0].b, data[0].c],\n      [data[1].a, data[1].b, data[1].c],\n      [data[2].a, data[2].b, data[2].c],\n    ]);\n  });\n\n  it('should render with MatTableDataSource and pagination', () => {\n    let fixture = TestBed.createComponent(MatTableWithPaginatorApp);\n    fixture.detectChanges();\n\n    const tableElement = fixture.nativeElement.querySelector('.mat-table')!;\n    const data = fixture.componentInstance.dataSource!.data;\n    expectTableToMatchContent(tableElement, [\n      ['Column A', 'Column B', 'Column C'],\n      [data[0].a, data[0].b, data[0].c],\n      [data[1].a, data[1].b, data[1].c],\n      [data[2].a, data[2].b, data[2].c],\n    ]);\n  });\n\n  it('should apply custom sticky CSS class to sticky cells', () => {\n    let fixture = TestBed.createComponent(StickyTableApp);\n    fixture.detectChanges();\n\n    const stuckCellElement = fixture.nativeElement.querySelector('.mat-table th')!;\n    expect(stuckCellElement.classList).toContain('mat-table-sticky');\n  });\n\n  // Note: needs to be fakeAsync so it catches the error.\n  it('should not throw when a row definition is on an ng-container', fakeAsync(() => {\n    const fixture = TestBed.createComponent(TableWithNgContainerRow);\n\n    expect(() => {\n      fixture.detectChanges();\n      tick();\n    }).not.toThrow();\n  }));\n\n  describe('with MatTableDataSource and sort/pagination/filter', () => {\n    let tableElement: HTMLElement;\n    let fixture: ComponentFixture<ArrayDataSourceMatTableApp>;\n    let dataSource: MatTableDataSource<TestData>;\n    let component: ArrayDataSourceMatTableApp;\n\n    beforeEach(fakeAsync(() => {\n      fixture = TestBed.createComponent(ArrayDataSourceMatTableApp);\n      fixture.detectChanges();\n\n      tableElement = fixture.nativeElement.querySelector('.mat-table');\n      component = fixture.componentInstance;\n      dataSource = fixture.componentInstance.dataSource;\n    }));\n\n    it('should create table and display data source contents', () => {\n      expectTableToMatchContent(tableElement, [\n        ['Column A', 'Column B', 'Column C'],\n        ['a_1', 'b_1', 'c_1'],\n        ['a_2', 'b_2', 'c_2'],\n        ['a_3', 'b_3', 'c_3'],\n        ['Footer A', 'Footer B', 'Footer C'],\n      ]);\n    });\n\n    it('changing data should update the table contents', () => {\n      // Add data\n      component.underlyingDataSource.addData();\n      fixture.detectChanges();\n      expectTableToMatchContent(tableElement, [\n        ['Column A', 'Column B', 'Column C'],\n        ['a_1', 'b_1', 'c_1'],\n        ['a_2', 'b_2', 'c_2'],\n        ['a_3', 'b_3', 'c_3'],\n        ['a_4', 'b_4', 'c_4'],\n        ['Footer A', 'Footer B', 'Footer C'],\n      ]);\n\n      // Remove data\n      const modifiedData = dataSource.data.slice();\n      modifiedData.shift();\n      dataSource.data = modifiedData;\n      fixture.detectChanges();\n      expectTableToMatchContent(tableElement, [\n        ['Column A', 'Column B', 'Column C'],\n        ['a_2', 'b_2', 'c_2'],\n        ['a_3', 'b_3', 'c_3'],\n        ['a_4', 'b_4', 'c_4'],\n        ['Footer A', 'Footer B', 'Footer C'],\n      ]);\n    });\n\n    it('should update the page index when switching to a smaller data set from a page',\n      fakeAsync(() => {\n        // Add 20 rows so we can switch pages.\n        for (let i = 0; i < 20; i++) {\n          component.underlyingDataSource.addData();\n          fixture.detectChanges();\n          tick();\n          fixture.detectChanges();\n        }\n\n        // Go to the last page.\n        fixture.componentInstance.paginator.lastPage();\n        fixture.detectChanges();\n\n        // Switch to a smaller data set.\n        dataSource.data = [{a: 'a_0', b: 'b_0', c: 'c_0'}];\n        fixture.detectChanges();\n        tick();\n        fixture.detectChanges();\n\n        expectTableToMatchContent(tableElement, [\n          ['Column A', 'Column B', 'Column C'],\n          ['a_0', 'b_0', 'c_0'],\n          ['Footer A', 'Footer B', 'Footer C'],\n        ]);\n      }));\n\n    it('should be able to filter the table contents', fakeAsync(() => {\n      // Change filter to a_1, should match one row\n      dataSource.filter = 'a_1';\n      fixture.detectChanges();\n      expect(dataSource.filteredData.length).toBe(1);\n      expect(dataSource.filteredData[0]).toBe(dataSource.data[0]);\n      expectTableToMatchContent(tableElement, [\n        ['Column A', 'Column B', 'Column C'],\n        ['a_1', 'b_1', 'c_1'],\n        ['Footer A', 'Footer B', 'Footer C'],\n      ]);\n\n      flushMicrotasks();  // Resolve promise that updates paginator's length\n      expect(dataSource.paginator!.length).toBe(1);\n\n      // Change filter to '  A_2  ', should match one row (ignores case and whitespace)\n      dataSource.filter = '  A_2  ';\n      fixture.detectChanges();\n      expect(dataSource.filteredData.length).toBe(1);\n      expect(dataSource.filteredData[0]).toBe(dataSource.data[1]);\n      expectTableToMatchContent(tableElement, [\n        ['Column A', 'Column B', 'Column C'],\n        ['a_2', 'b_2', 'c_2'],\n        ['Footer A', 'Footer B', 'Footer C'],\n      ]);\n\n      // Change filter to empty string, should match all rows\n      dataSource.filter = '';\n      fixture.detectChanges();\n      expect(dataSource.filteredData.length).toBe(3);\n      expect(dataSource.filteredData[0]).toBe(dataSource.data[0]);\n      expect(dataSource.filteredData[1]).toBe(dataSource.data[1]);\n      expect(dataSource.filteredData[2]).toBe(dataSource.data[2]);\n      expectTableToMatchContent(tableElement, [\n        ['Column A', 'Column B', 'Column C'],\n        ['a_1', 'b_1', 'c_1'],\n        ['a_2', 'b_2', 'c_2'],\n        ['a_3', 'b_3', 'c_3'],\n        ['Footer A', 'Footer B', 'Footer C'],\n      ]);\n\n      // Change filter function and filter, should match to rows with zebra.\n      dataSource.filterPredicate = (data, filter) => {\n        let dataStr;\n        switch (data.a) {\n          case 'a_1': dataStr = 'elephant'; break;\n          case 'a_2': dataStr = 'zebra'; break;\n          case 'a_3': dataStr = 'monkey'; break;\n          default: dataStr = '';\n        }\n\n        return dataStr.indexOf(filter) != -1;\n      };\n      dataSource.filter = 'zebra';\n      fixture.detectChanges();\n      expectTableToMatchContent(tableElement, [\n        ['Column A', 'Column B', 'Column C'],\n        ['a_2', 'b_2', 'c_2'],\n        ['Footer A', 'Footer B', 'Footer C'],\n      ]);\n    }));\n\n    it('should not match concatenated words', fakeAsync(() => {\n      // Set the value to the last character of the first\n      // column plus the first character of the second column.\n      dataSource.filter = '1b';\n      fixture.detectChanges();\n      expect(dataSource.filteredData.length).toBe(0);\n      expectTableToMatchContent(tableElement, [\n        ['Column A', 'Column B', 'Column C'],\n        ['Footer A', 'Footer B', 'Footer C'],\n      ]);\n    }));\n\n    it('should be able to sort the table contents', () => {\n      // Activate column A sort\n      component.sort.sort(component.sortHeader);\n      fixture.detectChanges();\n      expectTableToMatchContent(tableElement, [\n        ['Column A', 'Column B', 'Column C'],\n        ['a_1', 'b_1', 'c_1'],\n        ['a_2', 'b_2', 'c_2'],\n        ['a_3', 'b_3', 'c_3'],\n        ['Footer A', 'Footer B', 'Footer C'],\n      ]);\n\n      // Activate column A sort again (reverse direction)\n      component.sort.sort(component.sortHeader);\n      fixture.detectChanges();\n      expectTableToMatchContent(tableElement, [\n        ['Column A', 'Column B', 'Column C'],\n        ['a_3', 'b_3', 'c_3'],\n        ['a_2', 'b_2', 'c_2'],\n        ['a_1', 'b_1', 'c_1'],\n        ['Footer A', 'Footer B', 'Footer C'],\n      ]);\n\n      // Change sort function to customize how it sorts - first column 1, then 3, then 2\n      dataSource.sortingDataAccessor = data => {\n        switch (data.a) {\n          case 'a_1': return 'elephant';\n          case 'a_2': return 'zebra';\n          case 'a_3': return 'monkey';\n          default: return '';\n        }\n      };\n      component.sort.direction = '';\n      component.sort.sort(component.sortHeader);\n      expectTableToMatchContent(tableElement, [\n        ['Column A', 'Column B', 'Column C'],\n        ['a_1', 'b_1', 'c_1'],\n        ['a_3', 'b_3', 'c_3'],\n        ['a_2', 'b_2', 'c_2'],\n        ['Footer A', 'Footer B', 'Footer C'],\n      ]);\n    });\n\n    it('should by default correctly sort an empty string', () => {\n      // Activate column A sort\n      dataSource.data[0].a = ' ';\n      component.sort.sort(component.sortHeader);\n      fixture.detectChanges();\n\n      // Expect that empty string row comes before the other values\n      expectTableToMatchContent(tableElement, [\n        ['Column A', 'Column B', 'Column C'],\n        ['', 'b_1', 'c_1'],\n        ['a_2', 'b_2', 'c_2'],\n        ['a_3', 'b_3', 'c_3'],\n        ['Footer A', 'Footer B', 'Footer C'],\n      ]);\n\n      // Expect that empty string row comes before the other values\n      component.sort.sort(component.sortHeader);\n      fixture.detectChanges();\n      expectTableToMatchContent(tableElement, [\n        ['Column A', 'Column B', 'Column C'],\n        ['a_3', 'b_3', 'c_3'],\n        ['a_2', 'b_2', 'c_2'],\n        ['', 'b_1', 'c_1'],\n        ['Footer A', 'Footer B', 'Footer C'],\n      ]);\n    });\n\n    it('should by default correctly sort undefined values', () => {\n      // Activate column A sort\n      dataSource.data[0].a = undefined;\n\n      // Expect that undefined row comes before the other values\n      component.sort.sort(component.sortHeader);\n      fixture.detectChanges();\n      expectTableToMatchContent(tableElement, [\n        ['Column A', 'Column B', 'Column C'],\n        ['', 'b_1', 'c_1'],\n        ['a_2', 'b_2', 'c_2'],\n        ['a_3', 'b_3', 'c_3'],\n        ['Footer A', 'Footer B', 'Footer C'],\n      ]);\n\n\n      // Expect that undefined row comes after the other values\n      component.sort.sort(component.sortHeader);\n      fixture.detectChanges();\n      expectTableToMatchContent(tableElement, [\n        ['Column A', 'Column B', 'Column C'],\n        ['a_3', 'b_3', 'c_3'],\n        ['a_2', 'b_2', 'c_2'],\n        ['', 'b_1', 'c_1'],\n        ['Footer A', 'Footer B', 'Footer C'],\n      ]);\n    });\n\n    it('should sort zero correctly', () => {\n      // Activate column A sort\n      dataSource.data[0].a = 1;\n      dataSource.data[1].a = 0;\n      dataSource.data[2].a = -1;\n\n      // Expect that zero comes after the negative numbers and before the positive ones.\n      component.sort.sort(component.sortHeader);\n      fixture.detectChanges();\n      expectTableToMatchContent(tableElement, [\n        ['Column A', 'Column B', 'Column C'],\n        ['-1', 'b_3', 'c_3'],\n        ['0', 'b_2', 'c_2'],\n        ['1', 'b_1', 'c_1'],\n        ['Footer A', 'Footer B', 'Footer C'],\n      ]);\n\n\n      // Expect that zero comes after the negative numbers and before\n      // the positive ones when switching the sorting direction.\n      component.sort.sort(component.sortHeader);\n      fixture.detectChanges();\n      expectTableToMatchContent(tableElement, [\n        ['Column A', 'Column B', 'Column C'],\n        ['1', 'b_1', 'c_1'],\n        ['0', 'b_2', 'c_2'],\n        ['-1', 'b_3', 'c_3'],\n        ['Footer A', 'Footer B', 'Footer C'],\n      ]);\n    });\n\n    it('should be able to page the table contents', fakeAsync(() => {\n      // Add 100 rows, should only display first 5 since page length is 5\n      for (let i = 0; i < 100; i++) {\n        component.underlyingDataSource.addData();\n      }\n      fixture.detectChanges();\n      flushMicrotasks();  // Resolve promise that updates paginator's length\n      expectTableToMatchContent(tableElement, [\n        ['Column A', 'Column B', 'Column C'],\n        ['a_1', 'b_1', 'c_1'],\n        ['a_2', 'b_2', 'c_2'],\n        ['a_3', 'b_3', 'c_3'],\n        ['a_4', 'b_4', 'c_4'],\n        ['a_5', 'b_5', 'c_5'],\n        ['Footer A', 'Footer B', 'Footer C'],\n      ]);\n\n      // Navigate to the next page\n      component.paginator.nextPage();\n      fixture.detectChanges();\n      expectTableToMatchContent(tableElement, [\n        ['Column A', 'Column B', 'Column C'],\n        ['a_6', 'b_6', 'c_6'],\n        ['a_7', 'b_7', 'c_7'],\n        ['a_8', 'b_8', 'c_8'],\n        ['a_9', 'b_9', 'c_9'],\n        ['a_10', 'b_10', 'c_10'],\n        ['Footer A', 'Footer B', 'Footer C'],\n      ]);\n    }));\n\n    it('should sort strings with numbers larger than MAX_SAFE_INTEGER correctly', () => {\n      const large = '9563256840123535';\n      const larger = '9563256840123536';\n      const largest = '9563256840123537';\n\n      dataSource.data[0].a = largest;\n      dataSource.data[1].a = larger;\n      dataSource.data[2].a = large;\n\n      component.sort.sort(component.sortHeader);\n      fixture.detectChanges();\n      expectTableToMatchContent(tableElement, [\n        ['Column A', 'Column B', 'Column C'],\n        [large, 'b_3', 'c_3'],\n        [larger, 'b_2', 'c_2'],\n        [largest, 'b_1', 'c_1'],\n        ['Footer A', 'Footer B', 'Footer C'],\n      ]);\n\n\n      component.sort.sort(component.sortHeader);\n      fixture.detectChanges();\n      expectTableToMatchContent(tableElement, [\n        ['Column A', 'Column B', 'Column C'],\n        [largest, 'b_1', 'c_1'],\n        [larger, 'b_2', 'c_2'],\n        [large, 'b_3', 'c_3'],\n        ['Footer A', 'Footer B', 'Footer C'],\n      ]);\n    });\n\n  });\n});\n\ninterface TestData {\n  a: string|number|undefined;\n  b: string|number|undefined;\n  c: string|number|undefined;\n}\n\nclass FakeDataSource extends DataSource<TestData> {\n  _dataChange = new BehaviorSubject<TestData[]>([]);\n  get data() { return this._dataChange.getValue(); }\n  set data(data: TestData[]) { this._dataChange.next(data); }\n\n  constructor() {\n    super();\n    for (let i = 0; i < 4; i++) { this.addData(); }\n  }\n\n  connect(): Observable<TestData[]> {\n    return this._dataChange;\n  }\n\n  disconnect() {}\n\n  addData() {\n    const nextIndex = this.data.length + 1;\n\n    let copiedData = this.data.slice();\n    copiedData.push({\n      a: `a_${nextIndex}`,\n      b: `b_${nextIndex}`,\n      c: `c_${nextIndex}`\n    });\n\n    this.data = copiedData;\n  }\n}\n\n@Component({\n  template: `\n    <mat-table [dataSource]=\"dataSource\">\n      <ng-container matColumnDef=\"column_a\">\n        <mat-header-cell *matHeaderCellDef> Column A</mat-header-cell>\n        <mat-cell *matCellDef=\"let row\"> {{row.a}}</mat-cell>\n        <mat-footer-cell *matFooterCellDef> Footer A</mat-footer-cell>\n      </ng-container>\n\n      <ng-container matColumnDef=\"column_b\">\n        <mat-header-cell *matHeaderCellDef> Column B</mat-header-cell>\n        <mat-cell *matCellDef=\"let row\"> {{row.b}}</mat-cell>\n        <mat-footer-cell *matFooterCellDef> Footer B</mat-footer-cell>\n      </ng-container>\n\n      <ng-container matColumnDef=\"column_c\">\n        <mat-header-cell *matHeaderCellDef> Column C</mat-header-cell>\n        <mat-cell *matCellDef=\"let row\"> {{row.c}}</mat-cell>\n        <mat-footer-cell *matFooterCellDef> Footer C</mat-footer-cell>\n      </ng-container>\n\n      <ng-container matColumnDef=\"special_column\">\n        <mat-cell *matCellDef=\"let row\"> fourth_row </mat-cell>\n      </ng-container>\n\n      <mat-header-row *matHeaderRowDef=\"columnsToRender\"></mat-header-row>\n      <mat-row *matRowDef=\"let row; columns: columnsToRender\"></mat-row>\n      <mat-row *matRowDef=\"let row; columns: ['special_column']; when: isFourthRow\"></mat-row>\n      <mat-footer-row *matFooterRowDef=\"columnsToRender\"></mat-footer-row>\n    </mat-table>\n  `\n})\nclass MatTableApp {\n  dataSource: FakeDataSource | null = new FakeDataSource();\n  columnsToRender = ['column_a', 'column_b', 'column_c'];\n  isFourthRow = (i: number, _rowData: TestData) => i == 3;\n\n  @ViewChild(MatTable) table: MatTable<TestData>;\n}\n\n@Component({\n  template: `\n    <table mat-table [dataSource]=\"dataSource\">\n      <ng-container matColumnDef=\"column_a\">\n        <th mat-header-cell *matHeaderCellDef> Column A</th>\n        <td mat-cell *matCellDef=\"let row\"> {{row.a}}</td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"column_b\">\n        <th mat-header-cell *matHeaderCellDef> Column B</th>\n        <td mat-cell *matCellDef=\"let row\"> {{row.b}}</td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"column_c\">\n        <th mat-header-cell *matHeaderCellDef> Column C</th>\n        <td mat-cell *matCellDef=\"let row\"> {{row.c}}</td>\n      </ng-container>\n\n      <tr mat-header-row *matHeaderRowDef=\"columnsToRender\"></tr>\n      <tr mat-row *matRowDef=\"let row; columns: columnsToRender\"></tr>\n    </table>\n  `\n})\nclass NativeHtmlTableApp {\n  dataSource: FakeDataSource | null = new FakeDataSource();\n  columnsToRender = ['column_a', 'column_b', 'column_c'];\n\n  @ViewChild(MatTable) table: MatTable<TestData>;\n}\n\n@Component({\n  template: `\n    <table mat-table [dataSource]=\"dataSource\">\n      <ng-container matColumnDef=\"column_a\">\n        <th mat-header-cell *matHeaderCellDef> Column A </th>\n        <td mat-cell *matCellDef=\"let row\"> {{row.a}} </td>\n      </ng-container>\n\n      <tr mat-header-row *matHeaderRowDef=\"columnsToRender; sticky: true\"></tr>\n      <tr mat-row *matRowDef=\"let row; columns: columnsToRender\"></tr>\n    </table>\n  `\n})\nclass StickyTableApp {\n  dataSource = new FakeDataSource();\n  columnsToRender = ['column_a'];\n\n  @ViewChild(MatTable) table: MatTable<TestData>;\n}\n\n\n@Component({\n  template: `\n    <mat-table [dataSource]=\"dataSource\" [multiTemplateDataRows]=\"multiTemplateDataRows\">\n      <ng-container matColumnDef=\"column_a\">\n        <mat-header-cell *matHeaderCellDef> Column A</mat-header-cell>\n        <mat-cell *matCellDef=\"let row\"> {{row.a}}</mat-cell>\n        <mat-footer-cell *matFooterCellDef> Footer A</mat-footer-cell>\n      </ng-container>\n\n      <ng-container matColumnDef=\"special_column\">\n        <mat-cell *matCellDef=\"let row\"> fourth_row </mat-cell>\n      </ng-container>\n\n      <mat-header-row *matHeaderRowDef=\"['column_a']\"></mat-header-row>\n      <mat-row *matRowDef=\"let row; columns: ['column_a']\"></mat-row>\n      <mat-row *matRowDef=\"let row; columns: ['special_column']; when: isFourthRow\"></mat-row>\n      <mat-footer-row *matFooterRowDef=\"['column_a']\"></mat-footer-row>\n    </mat-table>\n  `\n})\nclass MatTableWithWhenRowApp {\n  multiTemplateDataRows = false;\n  dataSource: FakeDataSource | null = new FakeDataSource();\n  isFourthRow = (i: number, _rowData: TestData) => i == 3;\n\n  @ViewChild(MatTable) table: MatTable<TestData>;\n}\n\n\n@Component({\n  template: `\n    <mat-table [dataSource]=\"dataSource\" matSort>\n      <ng-container matColumnDef=\"column_a\">\n        <mat-header-cell *matHeaderCellDef mat-sort-header=\"a\"> Column A</mat-header-cell>\n        <mat-cell *matCellDef=\"let row\"> {{row.a}}</mat-cell>\n        <mat-footer-cell *matFooterCellDef> Footer A</mat-footer-cell>\n      </ng-container>\n\n      <ng-container matColumnDef=\"column_b\">\n        <mat-header-cell *matHeaderCellDef> Column B</mat-header-cell>\n        <mat-cell *matCellDef=\"let row\"> {{row.b}}</mat-cell>\n        <mat-footer-cell *matFooterCellDef> Footer B</mat-footer-cell>\n      </ng-container>\n\n      <ng-container matColumnDef=\"column_c\">\n        <mat-header-cell *matHeaderCellDef> Column C</mat-header-cell>\n        <mat-cell *matCellDef=\"let row\"> {{row.c}}</mat-cell>\n        <mat-footer-cell *matFooterCellDef> Footer C</mat-footer-cell>\n      </ng-container>\n\n      <mat-header-row *matHeaderRowDef=\"columnsToRender\"></mat-header-row>\n      <mat-row *matRowDef=\"let row; columns: columnsToRender\"></mat-row>\n      <mat-footer-row *matFooterRowDef=\"columnsToRender\"></mat-footer-row>\n    </mat-table>\n\n    <mat-paginator [pageSize]=\"5\"></mat-paginator>\n  `\n})\nclass ArrayDataSourceMatTableApp implements AfterViewInit {\n  underlyingDataSource = new FakeDataSource();\n  dataSource = new MatTableDataSource<TestData>();\n  columnsToRender = ['column_a', 'column_b', 'column_c'];\n\n  @ViewChild(MatTable) table: MatTable<TestData>;\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n  @ViewChild(MatSortHeader) sortHeader: MatSortHeader;\n\n  constructor() {\n    this.underlyingDataSource.data = [];\n\n    // Add three rows of data\n    this.underlyingDataSource.addData();\n    this.underlyingDataSource.addData();\n    this.underlyingDataSource.addData();\n\n    this.underlyingDataSource.connect().subscribe(data => {\n      this.dataSource.data = data;\n    });\n  }\n\n  ngAfterViewInit() {\n    this.dataSource.sort = this.sort;\n    this.dataSource.paginator = this.paginator;\n  }\n}\n\n\n@Component({\n  template: `\n    <mat-table [dataSource]=\"dataSource\" matSort>\n      <ng-container matColumnDef=\"column_a\">\n        <mat-header-cell *matHeaderCellDef mat-sort-header=\"a\"> Column A</mat-header-cell>\n        <mat-cell *matCellDef=\"let row\"> {{row.a}}</mat-cell>\n      </ng-container>\n\n      <ng-container matColumnDef=\"column_b\">\n        <mat-header-cell *matHeaderCellDef> Column B</mat-header-cell>\n        <mat-cell *matCellDef=\"let row\"> {{row.b}}</mat-cell>\n      </ng-container>\n\n      <ng-container matColumnDef=\"column_c\">\n        <mat-header-cell *matHeaderCellDef> Column C</mat-header-cell>\n        <mat-cell *matCellDef=\"let row\"> {{row.c}}</mat-cell>\n      </ng-container>\n\n      <mat-header-row *matHeaderRowDef=\"columnsToRender\"></mat-header-row>\n      <mat-row *matRowDef=\"let row; columns: columnsToRender\"></mat-row>\n    </mat-table>\n  `\n})\nclass MatTableWithSortApp implements OnInit {\n  underlyingDataSource = new FakeDataSource();\n  dataSource = new MatTableDataSource<TestData>();\n  columnsToRender = ['column_a', 'column_b', 'column_c'];\n\n  @ViewChild(MatTable) table: MatTable<TestData>;\n  @ViewChild(MatSort) sort: MatSort;\n\n  constructor() {\n    this.underlyingDataSource.data = [];\n\n    // Add three rows of data\n    this.underlyingDataSource.addData();\n    this.underlyingDataSource.addData();\n    this.underlyingDataSource.addData();\n\n    this.underlyingDataSource.connect().subscribe(data => {\n      this.dataSource.data = data;\n    });\n  }\n\n  ngOnInit() {\n    this.dataSource!.sort = this.sort;\n  }\n}\n\n@Component({\n  template: `\n    <mat-table [dataSource]=\"dataSource\">\n      <ng-container matColumnDef=\"column_a\">\n        <mat-header-cell *matHeaderCellDef> Column A</mat-header-cell>\n        <mat-cell *matCellDef=\"let row\"> {{row.a}}</mat-cell>\n      </ng-container>\n\n      <ng-container matColumnDef=\"column_b\">\n        <mat-header-cell *matHeaderCellDef> Column B</mat-header-cell>\n        <mat-cell *matCellDef=\"let row\"> {{row.b}}</mat-cell>\n      </ng-container>\n\n      <ng-container matColumnDef=\"column_c\">\n        <mat-header-cell *matHeaderCellDef> Column C</mat-header-cell>\n        <mat-cell *matCellDef=\"let row\"> {{row.c}}</mat-cell>\n      </ng-container>\n\n      <mat-header-row *matHeaderRowDef=\"columnsToRender\"></mat-header-row>\n      <mat-row *matRowDef=\"let row; columns: columnsToRender\"></mat-row>\n    </mat-table>\n\n    <mat-paginator [pageSize]=\"5\"></mat-paginator>\n  `\n})\nclass MatTableWithPaginatorApp implements OnInit {\n  underlyingDataSource = new FakeDataSource();\n  dataSource = new MatTableDataSource<TestData>();\n  columnsToRender = ['column_a', 'column_b', 'column_c'];\n\n  @ViewChild(MatTable) table: MatTable<TestData>;\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n\n  constructor() {\n    this.underlyingDataSource.data = [];\n\n    // Add three rows of data\n    this.underlyingDataSource.addData();\n    this.underlyingDataSource.addData();\n    this.underlyingDataSource.addData();\n\n    this.underlyingDataSource.connect().subscribe(data => {\n      this.dataSource.data = data;\n    });\n  }\n\n  ngOnInit() {\n    this.dataSource!.paginator = this.paginator;\n  }\n}\n\n@Component({\n  template: `\n    <mat-table [dataSource]=\"dataSource\">\n      <ng-container matColumnDef=\"column_a\">\n        <mat-header-cell *matHeaderCellDef>Column A</mat-header-cell>\n        <mat-cell *matCellDef=\"let row\">{{row.a}}</mat-cell>\n      </ng-container>\n\n      <mat-header-row *matHeaderRowDef=\"columnsToRender\"></mat-header-row>\n      <ng-container *matRowDef=\"let row; columns: columnsToRender\">\n        <mat-row></mat-row>\n      </ng-container>\n    </mat-table>\n  `\n})\nclass TableWithNgContainerRow {\n  dataSource: FakeDataSource | null = new FakeDataSource();\n  columnsToRender = ['column_a'];\n}\n\n\nfunction getElements(element: Element, query: string): Element[] {\n  return [].slice.call(element.querySelectorAll(query));\n}\n\nfunction getHeaderRows(tableElement: Element): Element[] {\n  return [].slice.call(tableElement.querySelectorAll('.mat-header-row'))!;\n}\n\nfunction getFooterRows(tableElement: Element): Element[] {\n  return [].slice.call(tableElement.querySelectorAll('.mat-footer-row'))!;\n}\n\nfunction getRows(tableElement: Element): Element[] {\n  return getElements(tableElement, '.mat-row');\n}\n\nfunction getCells(row: Element): Element[] {\n  if (!row) {\n    return [];\n  }\n\n  let cells = getElements(row, 'mat-cell');\n  if (!cells.length) {\n    cells = getElements(row, 'td');\n  }\n\n  return cells;\n}\n\nfunction getHeaderCells(headerRow: Element): Element[] {\n  let cells = getElements(headerRow, 'mat-header-cell');\n  if (!cells.length) {\n    cells = getElements(headerRow, 'th');\n  }\n\n  return cells;\n}\n\nfunction getFooterCells(footerRow: Element): Element[] {\n  let cells = getElements(footerRow, 'mat-footer-cell');\n  if (!cells.length) {\n    cells = getElements(footerRow, 'td');\n  }\n\n  return cells;\n}\n\nfunction getActualTableContent(tableElement: Element): string[][] {\n  let actualTableContent: Element[][] = [];\n  getHeaderRows(tableElement).forEach(row => {\n    actualTableContent.push(getHeaderCells(row));\n  });\n\n  // Check data row cells\n  const rows = getRows(tableElement).map(row => getCells(row));\n  actualTableContent = actualTableContent.concat(rows);\n\n  getFooterRows(tableElement).forEach(row => {\n    actualTableContent.push(getFooterCells(row));\n  });\n\n  // Convert the nodes into their text content;\n  return actualTableContent.map(row => row.map(cell => cell.textContent!.trim()));\n}\n\nfunction expectTableToMatchContent(tableElement: Element, expected: any[]) {\n  const missedExpectations: string[] = [];\n  function checkCellContent(actualCell: string, expectedCell: string) {\n    if (actualCell !== expectedCell) {\n      missedExpectations.push(`Expected cell contents to be ${expectedCell} but was ${actualCell}`);\n    }\n  }\n\n  const actual = getActualTableContent(tableElement);\n\n  // Make sure the number of rows match\n  if (actual.length !== expected.length) {\n    missedExpectations.push(`Expected ${expected.length} total rows but got ${actual.length}`);\n    fail(missedExpectations.join('\\n'));\n  }\n\n  actual.forEach((row, rowIndex) => {\n    const expectedRow = expected[rowIndex];\n\n    // Make sure the number of cells match\n    if (row.length !== expectedRow.length) {\n      missedExpectations.push(`Expected ${expectedRow.length} cells in row but got ${row.length}`);\n      fail(missedExpectations.join('\\n'));\n    }\n\n    row.forEach((actualCell, cellIndex) => {\n      const expectedCell = expectedRow ? expectedRow[cellIndex] : null;\n      checkCellContent(actualCell, expectedCell);\n    });\n  });\n\n  if (missedExpectations.length) {\n    fail(missedExpectations.join('\\n'));\n  }\n}\n"]}