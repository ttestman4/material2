{"version":3,"file":"tab-group.spec.js","sourceRoot":"","sources":["../../../../src/lib/tabs/tab-group.spec.ts"],"names":[],"mappings":"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","sourcesContent":["import {LEFT_ARROW} from '@angular/cdk/keycodes';\nimport {dispatchFakeEvent, dispatchKeyboardEvent} from '@angular/cdk/testing';\nimport {Component, OnInit, QueryList, ViewChild, ViewChildren} from '@angular/core';\nimport {async, ComponentFixture, fakeAsync, TestBed, tick} from '@angular/core/testing';\nimport {By} from '@angular/platform-browser';\nimport {BrowserAnimationsModule, NoopAnimationsModule} from '@angular/platform-browser/animations';\nimport {CommonModule} from '@angular/common';\nimport {Observable} from 'rxjs';\nimport {MatTab, MatTabGroup, MatTabHeaderPosition, MatTabsModule} from './index';\n\n\ndescribe('MatTabGroup', () => {\n  beforeEach(fakeAsync(() => {\n    TestBed.configureTestingModule({\n      imports: [MatTabsModule, CommonModule, NoopAnimationsModule],\n      declarations: [\n        SimpleTabsTestApp,\n        SimpleDynamicTabsTestApp,\n        BindedTabsTestApp,\n        AsyncTabsTestApp,\n        DisabledTabsTestApp,\n        TabGroupWithSimpleApi,\n        TemplateTabs,\n        TabGroupWithAriaInputs,\n        TabGroupWithIsActiveBinding,\n      ],\n    });\n\n    TestBed.compileComponents();\n  }));\n\n  describe('basic behavior', () => {\n    let fixture: ComponentFixture<SimpleTabsTestApp>;\n    let element: HTMLElement;\n\n    beforeEach(() => {\n      fixture = TestBed.createComponent(SimpleTabsTestApp);\n      element = fixture.nativeElement;\n    });\n\n    it('should default to the first tab', () => {\n      checkSelectedIndex(1, fixture);\n    });\n\n    it('will properly load content on first change detection pass', () => {\n      fixture.detectChanges();\n      expect(element.querySelectorAll('.mat-tab-body')[1].querySelectorAll('span').length).toBe(3);\n    });\n\n    it('should change selected index on click', () => {\n      let component = fixture.debugElement.componentInstance;\n      component.selectedIndex = 0;\n      checkSelectedIndex(0, fixture);\n\n      // select the second tab\n      let tabLabel = fixture.debugElement.queryAll(By.css('.mat-tab-label'))[1];\n      tabLabel.nativeElement.click();\n      checkSelectedIndex(1, fixture);\n\n      // select the third tab\n      tabLabel = fixture.debugElement.queryAll(By.css('.mat-tab-label'))[2];\n      tabLabel.nativeElement.click();\n      checkSelectedIndex(2, fixture);\n    });\n\n    it('should support two-way binding for selectedIndex', fakeAsync(() => {\n      let component = fixture.componentInstance;\n      component.selectedIndex = 0;\n\n      fixture.detectChanges();\n\n      let tabLabel = fixture.debugElement.queryAll(By.css('.mat-tab-label'))[1];\n      tabLabel.nativeElement.click();\n      fixture.detectChanges();\n      tick();\n\n      expect(component.selectedIndex).toBe(1);\n    }));\n\n    // Note: needs to be `async` in order to fail when we expect it to.\n    it('should set to correct tab on fast change', async(() => {\n      let component = fixture.componentInstance;\n      component.selectedIndex = 0;\n      fixture.detectChanges();\n\n      setTimeout(() => {\n        component.selectedIndex = 1;\n        fixture.detectChanges();\n\n        setTimeout(() => {\n          component.selectedIndex = 0;\n          fixture.detectChanges();\n          fixture.whenStable().then(() => {\n            expect(component.selectedIndex).toBe(0);\n          });\n        }, 1);\n      }, 1);\n    }));\n\n    it('should change tabs based on selectedIndex', fakeAsync(() => {\n      let component = fixture.componentInstance;\n      let tabComponent = fixture.debugElement.query(By.css('mat-tab-group')).componentInstance;\n\n      spyOn(component, 'handleSelection').and.callThrough();\n\n      checkSelectedIndex(1, fixture);\n\n      tabComponent.selectedIndex = 2;\n\n      checkSelectedIndex(2, fixture);\n      tick();\n\n      expect(component.handleSelection).toHaveBeenCalledTimes(1);\n      expect(component.selectEvent.index).toBe(2);\n    }));\n\n    it('should update tab positions when selected index is changed', () => {\n      fixture.detectChanges();\n      const component: MatTabGroup =\n          fixture.debugElement.query(By.css('mat-tab-group')).componentInstance;\n      const tabs: MatTab[] = component._tabs.toArray();\n\n      expect(tabs[0].position).toBeLessThan(0);\n      expect(tabs[1].position).toBe(0);\n      expect(tabs[2].position).toBeGreaterThan(0);\n\n      // Move to third tab\n      component.selectedIndex = 2;\n      fixture.detectChanges();\n      expect(tabs[0].position).toBeLessThan(0);\n      expect(tabs[1].position).toBeLessThan(0);\n      expect(tabs[2].position).toBe(0);\n\n      // Move to the first tab\n      component.selectedIndex = 0;\n      fixture.detectChanges();\n      expect(tabs[0].position).toBe(0);\n      expect(tabs[1].position).toBeGreaterThan(0);\n      expect(tabs[2].position).toBeGreaterThan(0);\n    });\n\n    it('should clamp the selected index to the size of the number of tabs', () => {\n      fixture.detectChanges();\n      const component: MatTabGroup =\n          fixture.debugElement.query(By.css('mat-tab-group')).componentInstance;\n\n      // Set the index to be negative, expect first tab selected\n      fixture.componentInstance.selectedIndex = -1;\n      fixture.detectChanges();\n      expect(component.selectedIndex).toBe(0);\n\n      // Set the index beyond the size of the tabs, expect last tab selected\n      fixture.componentInstance.selectedIndex = 3;\n      fixture.detectChanges();\n      expect(component.selectedIndex).toBe(2);\n    });\n\n    it('should not crash when setting the selected index to NaN', () => {\n      let component = fixture.debugElement.componentInstance;\n\n      expect(() => {\n        component.selectedIndex = NaN;\n        fixture.detectChanges();\n      }).not.toThrow();\n    });\n\n    it('should show ripples for tab-group labels', () => {\n      fixture.detectChanges();\n\n      const testElement = fixture.nativeElement;\n      const tabLabel = fixture.debugElement.queryAll(By.css('.mat-tab-label'))[1];\n\n      expect(testElement.querySelectorAll('.mat-ripple-element').length)\n        .toBe(0, 'Expected no ripples to show up initially.');\n\n      dispatchFakeEvent(tabLabel.nativeElement, 'mousedown');\n      dispatchFakeEvent(tabLabel.nativeElement, 'mouseup');\n\n      expect(testElement.querySelectorAll('.mat-ripple-element').length)\n        .toBe(1, 'Expected one ripple to show up on label mousedown.');\n    });\n\n    it('should allow disabling ripples for tab-group labels', () => {\n      fixture.componentInstance.disableRipple = true;\n      fixture.detectChanges();\n\n      const testElement = fixture.nativeElement;\n      const tabLabel = fixture.debugElement.queryAll(By.css('.mat-tab-label'))[1];\n\n      expect(testElement.querySelectorAll('.mat-ripple-element').length)\n        .toBe(0, 'Expected no ripples to show up initially.');\n\n      dispatchFakeEvent(tabLabel.nativeElement, 'mousedown');\n      dispatchFakeEvent(tabLabel.nativeElement, 'mouseup');\n\n      expect(testElement.querySelectorAll('.mat-ripple-element').length)\n        .toBe(0, 'Expected no ripple to show up on label mousedown.');\n    });\n\n    it('should set the isActive flag on each of the tabs', fakeAsync(() => {\n      fixture.detectChanges();\n      tick();\n\n      const tabs = fixture.componentInstance.tabs.toArray();\n\n      expect(tabs[0].isActive).toBe(false);\n      expect(tabs[1].isActive).toBe(true);\n      expect(tabs[2].isActive).toBe(false);\n\n      fixture.componentInstance.selectedIndex = 2;\n      fixture.detectChanges();\n      tick();\n\n      expect(tabs[0].isActive).toBe(false);\n      expect(tabs[1].isActive).toBe(false);\n      expect(tabs[2].isActive).toBe(true);\n    }));\n\n    it('should fire animation done event', fakeAsync(() => {\n      fixture.detectChanges();\n\n      spyOn(fixture.componentInstance, 'animationDone');\n      let tabLabel = fixture.debugElement.queryAll(By.css('.mat-tab-label'))[1];\n      tabLabel.nativeElement.click();\n      fixture.detectChanges();\n      tick();\n\n      expect(fixture.componentInstance.animationDone).toHaveBeenCalledTimes(1);\n    }));\n\n    it('should add the proper `aria-setsize` and `aria-posinset`', () => {\n      fixture.detectChanges();\n\n      const labels = Array.from(element.querySelectorAll('.mat-tab-label'));\n\n      expect(labels.map(label => label.getAttribute('aria-posinset'))).toEqual(['1', '2', '3']);\n      expect(labels.every(label => label.getAttribute('aria-setsize') === '3')).toBe(true);\n    });\n\n    it('should emit focusChange event on click', () => {\n      spyOn(fixture.componentInstance, 'handleFocus');\n      fixture.detectChanges();\n\n      const tabLabels = fixture.debugElement.queryAll(By.css('.mat-tab-label'));\n\n      expect(fixture.componentInstance.handleFocus).toHaveBeenCalledTimes(0);\n\n      tabLabels[1].nativeElement.click();\n      fixture.detectChanges();\n\n      expect(fixture.componentInstance.handleFocus).toHaveBeenCalledTimes(1);\n      expect(fixture.componentInstance.handleFocus)\n        .toHaveBeenCalledWith(jasmine.objectContaining({index: 1}));\n    });\n\n    it('should emit focusChange on arrow key navigation', () => {\n      spyOn(fixture.componentInstance, 'handleFocus');\n      fixture.detectChanges();\n\n      const tabLabels = fixture.debugElement.queryAll(By.css('.mat-tab-label'));\n      const tabLabelContainer = fixture.debugElement\n        .query(By.css('.mat-tab-label-container')).nativeElement as HTMLElement;\n\n      expect(fixture.componentInstance.handleFocus).toHaveBeenCalledTimes(0);\n\n      // In order to verify that the `focusChange` event also fires with the correct\n      // index, we focus the second tab before testing the keyboard navigation.\n      tabLabels[1].nativeElement.click();\n      fixture.detectChanges();\n\n      expect(fixture.componentInstance.handleFocus).toHaveBeenCalledTimes(1);\n\n      dispatchKeyboardEvent(tabLabelContainer, 'keydown', LEFT_ARROW);\n\n      expect(fixture.componentInstance.handleFocus).toHaveBeenCalledTimes(2);\n      expect(fixture.componentInstance.handleFocus)\n        .toHaveBeenCalledWith(jasmine.objectContaining({index: 0}));\n    });\n\n  });\n\n  describe('aria labelling', () => {\n    let fixture: ComponentFixture<TabGroupWithAriaInputs>;\n    let tab: HTMLElement;\n\n    beforeEach(fakeAsync(() => {\n      fixture = TestBed.createComponent(TabGroupWithAriaInputs);\n      fixture.detectChanges();\n      tick();\n      tab = fixture.nativeElement.querySelector('.mat-tab-label');\n    }));\n\n    it('should not set aria-label or aria-labelledby attributes if they are not passed in', () => {\n      expect(tab.hasAttribute('aria-label')).toBe(false);\n      expect(tab.hasAttribute('aria-labelledby')).toBe(false);\n    });\n\n    it('should set the aria-label attribute', () => {\n      fixture.componentInstance.ariaLabel = 'Fruit';\n      fixture.detectChanges();\n\n      expect(tab.getAttribute('aria-label')).toBe('Fruit');\n    });\n\n    it('should set the aria-labelledby attribute', () => {\n      fixture.componentInstance.ariaLabelledby = 'fruit-label';\n      fixture.detectChanges();\n\n      expect(tab.getAttribute('aria-labelledby')).toBe('fruit-label');\n    });\n\n    it('should not be able to set both an aria-label and aria-labelledby', () => {\n      fixture.componentInstance.ariaLabel = 'Fruit';\n      fixture.componentInstance.ariaLabelledby = 'fruit-label';\n      fixture.detectChanges();\n\n      expect(tab.getAttribute('aria-label')).toBe('Fruit');\n      expect(tab.hasAttribute('aria-labelledby')).toBe(false);\n    });\n  });\n\n  describe('disable tabs', () => {\n    let fixture: ComponentFixture<DisabledTabsTestApp>;\n    beforeEach(() => {\n      fixture = TestBed.createComponent(DisabledTabsTestApp);\n    });\n\n    it('should have one disabled tab', () => {\n      fixture.detectChanges();\n      const labels = fixture.debugElement.queryAll(By.css('.mat-tab-disabled'));\n      expect(labels.length).toBe(1);\n      expect(labels[0].nativeElement.getAttribute('aria-disabled')).toBe('true');\n    });\n\n    it('should set the disabled flag on tab', () => {\n      fixture.detectChanges();\n\n      const tabs = fixture.componentInstance.tabs.toArray();\n      let labels = fixture.debugElement.queryAll(By.css('.mat-tab-disabled'));\n      expect(tabs[2].disabled).toBe(false);\n      expect(labels.length).toBe(1);\n      expect(labels[0].nativeElement.getAttribute('aria-disabled')).toBe('true');\n\n      fixture.componentInstance.isDisabled = true;\n      fixture.detectChanges();\n\n      expect(tabs[2].disabled).toBe(true);\n      labels = fixture.debugElement.queryAll(By.css('.mat-tab-disabled'));\n      expect(labels.length).toBe(2);\n      expect(labels.every(label => label.nativeElement.getAttribute('aria-disabled') === 'true'))\n          .toBe(true);\n    });\n  });\n\n  describe('dynamic binding tabs', () => {\n    let fixture: ComponentFixture<SimpleDynamicTabsTestApp>;\n\n    beforeEach(fakeAsync(() => {\n      fixture = TestBed.createComponent(SimpleDynamicTabsTestApp);\n      fixture.detectChanges();\n      tick();\n      fixture.detectChanges();\n    }));\n\n    it('should be able to add a new tab, select it, and have correct origin position',\n      fakeAsync(() => {\n        const component: MatTabGroup =\n            fixture.debugElement.query(By.css('mat-tab-group')).componentInstance;\n\n        let tabs: MatTab[] = component._tabs.toArray();\n        expect(tabs[0].origin).toBe(null);\n        expect(tabs[1].origin).toBe(0);\n        expect(tabs[2].origin).toBe(null);\n\n        // Add a new tab on the right and select it, expect an origin >= than 0 (animate right)\n        fixture.componentInstance.tabs.push({label: 'New tab', content: 'to right of index'});\n        fixture.componentInstance.selectedIndex = 4;\n        fixture.detectChanges();\n        tick();\n\n        tabs = component._tabs.toArray();\n        expect(tabs[3].origin).toBeGreaterThanOrEqual(0);\n\n        // Add a new tab in the beginning and select it, expect an origin < than 0 (animate left)\n        fixture.componentInstance.selectedIndex = 0;\n        fixture.detectChanges();\n        tick();\n\n        fixture.componentInstance.tabs.push({label: 'New tab', content: 'to left of index'});\n        fixture.detectChanges();\n        tick();\n\n        tabs = component._tabs.toArray();\n        expect(tabs[0].origin).toBeLessThan(0);\n    }));\n\n\n    it('should update selected index if the last tab removed while selected', fakeAsync(() => {\n      const component: MatTabGroup =\n          fixture.debugElement.query(By.css('mat-tab-group')).componentInstance;\n\n      const numberOfTabs = component._tabs.length;\n      fixture.componentInstance.selectedIndex = numberOfTabs - 1;\n      fixture.detectChanges();\n      tick();\n\n      // Remove last tab while last tab is selected, expect next tab over to be selected\n      fixture.componentInstance.tabs.pop();\n      fixture.detectChanges();\n      tick();\n\n      expect(component.selectedIndex).toBe(numberOfTabs - 2);\n    }));\n\n\n    it('should maintain the selected tab if a new tab is added', () => {\n      fixture.detectChanges();\n      const component: MatTabGroup =\n          fixture.debugElement.query(By.css('mat-tab-group')).componentInstance;\n\n      fixture.componentInstance.selectedIndex = 1;\n      fixture.detectChanges();\n\n      // Add a new tab at the beginning.\n      fixture.componentInstance.tabs.unshift({label: 'New tab', content: 'at the start'});\n      fixture.detectChanges();\n\n      expect(component.selectedIndex).toBe(2);\n      expect(component._tabs.toArray()[2].isActive).toBe(true);\n    });\n\n\n    it('should maintain the selected tab if a tab is removed', () => {\n      // Select the second tab.\n      fixture.componentInstance.selectedIndex = 1;\n      fixture.detectChanges();\n\n      const component: MatTabGroup =\n          fixture.debugElement.query(By.css('mat-tab-group')).componentInstance;\n\n      // Remove the first tab that is right before the selected one.\n      fixture.componentInstance.tabs.splice(0, 1);\n      fixture.detectChanges();\n\n      // Since the first tab has been removed and the second one was selected before, the selected\n      // tab moved one position to the right. Meaning that the tab is now the first tab.\n      expect(component.selectedIndex).toBe(0);\n      expect(component._tabs.toArray()[0].isActive).toBe(true);\n    });\n\n    it('should be able to select a new tab after creation', fakeAsync(() => {\n      fixture.detectChanges();\n      const component: MatTabGroup =\n        fixture.debugElement.query(By.css('mat-tab-group')).componentInstance;\n\n      fixture.componentInstance.tabs.push({label: 'Last tab', content: 'at the end'});\n      fixture.componentInstance.selectedIndex = 3;\n\n      fixture.detectChanges();\n      tick();\n\n      expect(component.selectedIndex).toBe(3);\n      expect(component._tabs.toArray()[3].isActive).toBe(true);\n    }));\n\n    it('should not fire `selectedTabChange` when the amount of tabs changes', fakeAsync(() => {\n      fixture.detectChanges();\n      fixture.componentInstance.selectedIndex = 1;\n      fixture.detectChanges();\n\n      // Add a new tab at the beginning.\n      spyOn(fixture.componentInstance, 'handleSelection');\n      fixture.componentInstance.tabs.unshift({label: 'New tab', content: 'at the start'});\n      fixture.detectChanges();\n      tick();\n      fixture.detectChanges();\n\n      expect(fixture.componentInstance.handleSelection).not.toHaveBeenCalled();\n    }));\n\n  });\n\n  describe('async tabs', () => {\n    let fixture: ComponentFixture<AsyncTabsTestApp>;\n\n    it('should show tabs when they are available', fakeAsync(() => {\n      fixture = TestBed.createComponent(AsyncTabsTestApp);\n\n      expect(fixture.debugElement.queryAll(By.css('.mat-tab-label')).length).toBe(0);\n\n      fixture.detectChanges();\n      tick();\n      fixture.detectChanges();\n      tick();\n\n      expect(fixture.debugElement.queryAll(By.css('.mat-tab-label')).length).toBe(2);\n    }));\n  });\n\n  describe('with simple api', () => {\n    let fixture: ComponentFixture<TabGroupWithSimpleApi>;\n    let tabGroup: MatTabGroup;\n\n    beforeEach(fakeAsync(() => {\n      fixture = TestBed.createComponent(TabGroupWithSimpleApi);\n      fixture.detectChanges();\n      tick();\n\n      tabGroup =\n          fixture.debugElement.query(By.directive(MatTabGroup)).componentInstance as MatTabGroup;\n    }));\n\n    it('should support a tab-group with the simple api', fakeAsync(() => {\n      expect(getSelectedLabel(fixture).textContent).toMatch('Junk food');\n      expect(getSelectedContent(fixture).textContent).toMatch('Pizza, fries');\n\n      tabGroup.selectedIndex = 2;\n      fixture.detectChanges();\n      tick();\n\n      expect(getSelectedLabel(fixture).textContent).toMatch('Fruit');\n      expect(getSelectedContent(fixture).textContent).toMatch('Apples, grapes');\n\n      fixture.componentInstance.otherLabel = 'Chips';\n      fixture.componentInstance.otherContent = 'Salt, vinegar';\n      fixture.detectChanges();\n\n      expect(getSelectedLabel(fixture).textContent).toMatch('Chips');\n      expect(getSelectedContent(fixture).textContent).toMatch('Salt, vinegar');\n    }));\n\n    it('should support @ViewChild in the tab content', () => {\n      expect(fixture.componentInstance.legumes).toBeTruthy();\n    });\n\n    it('should only have the active tab in the DOM', fakeAsync(() => {\n      expect(fixture.nativeElement.textContent).toContain('Pizza, fries');\n      expect(fixture.nativeElement.textContent).not.toContain('Peanuts');\n\n      tabGroup.selectedIndex = 3;\n      fixture.detectChanges();\n      tick();\n\n      expect(fixture.nativeElement.textContent).not.toContain('Pizza, fries');\n      expect(fixture.nativeElement.textContent).toContain('Peanuts');\n    }));\n\n    it('should support setting the header position', () => {\n      let tabGroupNode = fixture.debugElement.query(By.css('mat-tab-group')).nativeElement;\n\n      expect(tabGroupNode.classList).not.toContain('mat-tab-group-inverted-header');\n\n      tabGroup.headerPosition = 'below';\n      fixture.detectChanges();\n\n      expect(tabGroupNode.classList).toContain('mat-tab-group-inverted-header');\n    });\n  });\n\n  describe('lazy loaded tabs', () => {\n    it('should lazy load the second tab', fakeAsync(() => {\n      const fixture = TestBed.createComponent(TemplateTabs);\n      fixture.detectChanges();\n      tick();\n\n      const secondLabel = fixture.debugElement.queryAll(By.css('.mat-tab-label'))[1];\n      secondLabel.nativeElement.click();\n      fixture.detectChanges();\n      tick();\n      fixture.detectChanges();\n\n      const child = fixture.debugElement.query(By.css('.child'));\n      expect(child.nativeElement).toBeDefined();\n    }));\n  });\n\n  describe('special cases', () => {\n    it('should not throw an error when binding isActive to the view', fakeAsync(() => {\n      const fixture = TestBed.createComponent(TabGroupWithIsActiveBinding);\n\n      expect(() => {\n        fixture.detectChanges();\n        tick();\n        fixture.detectChanges();\n      }).not.toThrow();\n\n      expect(fixture.nativeElement.textContent).toContain('pizza is active');\n    }));\n  });\n\n  /**\n   * Checks that the `selectedIndex` has been updated; checks that the label and body have their\n   * respective `active` classes\n   */\n  function checkSelectedIndex(expectedIndex: number, fixture: ComponentFixture<any>) {\n    fixture.detectChanges();\n\n    let tabComponent: MatTabGroup = fixture.debugElement\n        .query(By.css('mat-tab-group')).componentInstance;\n    expect(tabComponent.selectedIndex).toBe(expectedIndex);\n\n    let tabLabelElement = fixture.debugElement\n        .query(By.css(`.mat-tab-label:nth-of-type(${expectedIndex + 1})`)).nativeElement;\n    expect(tabLabelElement.classList.contains('mat-tab-label-active')).toBe(true);\n\n    let tabContentElement = fixture.debugElement\n        .query(By.css(`mat-tab-body:nth-of-type(${expectedIndex + 1})`)).nativeElement;\n    expect(tabContentElement.classList.contains('mat-tab-body-active')).toBe(true);\n  }\n\n  function getSelectedLabel(fixture: ComponentFixture<any>): HTMLElement {\n    return fixture.nativeElement.querySelector('.mat-tab-label-active');\n  }\n\n  function getSelectedContent(fixture: ComponentFixture<any>): HTMLElement {\n    return fixture.nativeElement.querySelector('.mat-tab-body-active');\n  }\n});\n\n\ndescribe('nested MatTabGroup with enabled animations', () => {\n  beforeEach(fakeAsync(() => {\n    TestBed.configureTestingModule({\n      imports: [MatTabsModule, BrowserAnimationsModule],\n      declarations: [NestedTabs, TabsWithCustomAnimationDuration]\n    });\n\n    TestBed.compileComponents();\n  }));\n\n  it('should not throw when creating a component with nested tab groups', fakeAsync(() => {\n    expect(() => {\n      let fixture = TestBed.createComponent(NestedTabs);\n      fixture.detectChanges();\n      tick();\n    }).not.toThrow();\n  }));\n\n  it('should not throw when setting an animationDuration without units', fakeAsync(() => {\n    expect(() => {\n      let fixture = TestBed.createComponent(TabsWithCustomAnimationDuration);\n      fixture.detectChanges();\n      tick();\n    }).not.toThrow();\n  }));\n});\n\n\n@Component({\n  template: `\n    <mat-tab-group class=\"tab-group\"\n        [(selectedIndex)]=\"selectedIndex\"\n        [headerPosition]=\"headerPosition\"\n        [disableRipple]=\"disableRipple\"\n        (animationDone)=\"animationDone()\"\n        (focusChange)=\"handleFocus($event)\"\n        (selectedTabChange)=\"handleSelection($event)\">\n      <mat-tab>\n        <ng-template mat-tab-label>Tab One</ng-template>\n        Tab one content\n      </mat-tab>\n      <mat-tab>\n        <ng-template mat-tab-label>Tab Two</ng-template>\n        <span>Tab </span><span>two</span><span>content</span>\n      </mat-tab>\n      <mat-tab>\n        <ng-template mat-tab-label>Tab Three</ng-template>\n        Tab three content\n      </mat-tab>\n    </mat-tab-group>\n  `\n})\nclass SimpleTabsTestApp {\n  @ViewChildren(MatTab) tabs: QueryList<MatTab>;\n  selectedIndex: number = 1;\n  focusEvent: any;\n  selectEvent: any;\n  disableRipple: boolean = false;\n  headerPosition: MatTabHeaderPosition = 'above';\n  handleFocus(event: any) {\n    this.focusEvent = event;\n  }\n  handleSelection(event: any) {\n    this.selectEvent = event;\n  }\n  animationDone() { }\n}\n\n@Component({\n  template: `\n    <mat-tab-group class=\"tab-group\"\n        [(selectedIndex)]=\"selectedIndex\"\n        (focusChange)=\"handleFocus($event)\"\n        (selectedTabChange)=\"handleSelection($event)\">\n      <mat-tab *ngFor=\"let tab of tabs\">\n        <ng-template mat-tab-label>{{tab.label}}</ng-template>\n        {{tab.content}}\n      </mat-tab>\n    </mat-tab-group>\n  `\n})\nclass SimpleDynamicTabsTestApp {\n  tabs = [\n    {label: 'Label 1', content: 'Content 1'},\n    {label: 'Label 2', content: 'Content 2'},\n    {label: 'Label 3', content: 'Content 3'},\n  ];\n  selectedIndex: number = 1;\n  focusEvent: any;\n  selectEvent: any;\n  handleFocus(event: any) {\n    this.focusEvent = event;\n  }\n  handleSelection(event: any) {\n    this.selectEvent = event;\n  }\n}\n\n@Component({\n  template: `\n    <mat-tab-group class=\"tab-group\" [(selectedIndex)]=\"selectedIndex\">\n      <mat-tab *ngFor=\"let tab of tabs\" label=\"{{tab.label}}\">\n        {{tab.content}}\n      </mat-tab>\n    </mat-tab-group>\n  `\n})\nclass BindedTabsTestApp {\n  tabs = [\n    { label: 'one', content: 'one' },\n    { label: 'two', content: 'two' }\n  ];\n  selectedIndex = 0;\n\n  addNewActiveTab(): void {\n    this.tabs.push({\n      label: 'new tab',\n      content: 'new content'\n    });\n    this.selectedIndex = this.tabs.length - 1;\n  }\n}\n\n@Component({\n  selector: 'test-app',\n  template: `\n    <mat-tab-group class=\"tab-group\">\n      <mat-tab>\n        <ng-template mat-tab-label>Tab One</ng-template>\n        Tab one content\n      </mat-tab>\n      <mat-tab disabled>\n        <ng-template mat-tab-label>Tab Two</ng-template>\n        Tab two content\n      </mat-tab>\n      <mat-tab [disabled]=\"isDisabled\">\n        <ng-template mat-tab-label>Tab Three</ng-template>\n        Tab three content\n      </mat-tab>\n    </mat-tab-group>\n  `,\n})\nclass DisabledTabsTestApp {\n  @ViewChildren(MatTab) tabs: QueryList<MatTab>;\n  isDisabled = false;\n}\n\n@Component({\n  template: `\n    <mat-tab-group class=\"tab-group\">\n      <mat-tab *ngFor=\"let tab of tabs | async\">\n        <ng-template mat-tab-label>{{ tab.label }}</ng-template>\n        {{ tab.content }}\n      </mat-tab>\n   </mat-tab-group>\n  `\n})\nclass AsyncTabsTestApp implements OnInit {\n  private _tabs = [\n    { label: 'one', content: 'one' },\n    { label: 'two', content: 'two' }\n  ];\n\n  tabs: Observable<any>;\n\n  ngOnInit() {\n    // Use ngOnInit because there is some issue with scheduling the async task in the constructor.\n    this.tabs = new Observable((observer: any) => {\n      setTimeout(() => observer.next(this._tabs));\n    });\n  }\n}\n\n\n@Component({\n  template: `\n  <mat-tab-group>\n    <mat-tab label=\"Junk food\"> Pizza, fries </mat-tab>\n    <mat-tab label=\"Vegetables\"> Broccoli, spinach </mat-tab>\n    <mat-tab [label]=\"otherLabel\"> {{otherContent}} </mat-tab>\n    <mat-tab label=\"Legumes\"> <p #legumes>Peanuts</p> </mat-tab>\n  </mat-tab-group>\n  `\n})\nclass TabGroupWithSimpleApi {\n  otherLabel = 'Fruit';\n  otherContent = 'Apples, grapes';\n  @ViewChild('legumes') legumes: any;\n}\n\n\n@Component({\n  selector: 'nested-tabs',\n  template: `\n    <mat-tab-group>\n      <mat-tab label=\"One\">Tab one content</mat-tab>\n      <mat-tab label=\"Two\">\n        Tab two content\n         <mat-tab-group [dynamicHeight]=\"true\">\n          <mat-tab label=\"Inner tab one\">Inner content one</mat-tab>\n          <mat-tab label=\"Inner tab two\">Inner content two</mat-tab>\n        </mat-tab-group>\n      </mat-tab>\n    </mat-tab-group>\n  `,\n})\nclass NestedTabs {}\n\n@Component({\n  selector: 'template-tabs',\n  template: `\n    <mat-tab-group>\n      <mat-tab label=\"One\">\n        Eager\n      </mat-tab>\n      <mat-tab label=\"Two\">\n        <ng-template matTabContent>\n          <div class=\"child\">Hi</div>\n        </ng-template>\n      </mat-tab>\n    </mat-tab-group>\n  `,\n })\n class TemplateTabs {}\n\n\n @Component({\n  template: `\n  <mat-tab-group>\n    <mat-tab [aria-label]=\"ariaLabel\" [aria-labelledby]=\"ariaLabelledby\"></mat-tab>\n  </mat-tab-group>\n  `\n})\nclass TabGroupWithAriaInputs {\n  ariaLabel: string;\n  ariaLabelledby: string;\n}\n\n\n@Component({\n  template: `\n    <mat-tab-group>\n      <mat-tab label=\"Junk food\" #pizza> Pizza, fries </mat-tab>\n      <mat-tab label=\"Vegetables\"> Broccoli, spinach </mat-tab>\n    </mat-tab-group>\n\n    <div *ngIf=\"pizza.isActive\">pizza is active</div>\n  `\n})\nclass TabGroupWithIsActiveBinding {\n}\n\n\n@Component({\n  template: `\n    <mat-tab-group animationDuration=\"500\">\n      <mat-tab label=\"One\">Tab one content</mat-tab>\n      <mat-tab label=\"Two\">Tab two content</mat-tab>\n    </mat-tab-group>\n  `,\n})\nclass TabsWithCustomAnimationDuration {}\n"]}