{"version":3,"file":"tab-nav-bar.spec.js","sourceRoot":"","sources":["../../../../../src/lib/tabs/tab-nav-bar/tab-nav-bar.spec.ts"],"names":[],"mappings":"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","sourcesContent":["import {async, ComponentFixture, fakeAsync, TestBed, tick} from '@angular/core/testing';\nimport {Component, ViewChild, ViewChildren, QueryList} from '@angular/core';\nimport {MAT_RIPPLE_GLOBAL_OPTIONS, RippleGlobalOptions} from '@angular/material/core';\nimport {By} from '@angular/platform-browser';\nimport {dispatchFakeEvent, dispatchMouseEvent} from '@angular/cdk/testing';\nimport {Direction, Directionality} from '@angular/cdk/bidi';\nimport {Subject} from 'rxjs';\nimport {MatTabLink, MatTabNav, MatTabsModule} from '../index';\n\n\ndescribe('MatTabNavBar', () => {\n  let dir: Direction = 'ltr';\n  let dirChange = new Subject();\n  let globalRippleOptions: RippleGlobalOptions;\n\n  beforeEach(async(() => {\n    globalRippleOptions = {};\n\n    TestBed.configureTestingModule({\n      imports: [MatTabsModule],\n      declarations: [\n        SimpleTabNavBarTestApp,\n        TabLinkWithNgIf,\n        TabLinkWithTabIndexBinding,\n        TabLinkWithNativeTabindexAttr,\n      ],\n      providers: [\n        {provide: MAT_RIPPLE_GLOBAL_OPTIONS, useFactory: () => globalRippleOptions},\n        {provide: Directionality, useFactory: () =>\n            ({value: dir, change: dirChange.asObservable()})},\n      ]\n    });\n\n    TestBed.compileComponents();\n  }));\n\n  describe('basic behavior', () => {\n    let fixture: ComponentFixture<SimpleTabNavBarTestApp>;\n\n    beforeEach(() => {\n      fixture = TestBed.createComponent(SimpleTabNavBarTestApp);\n      fixture.detectChanges();\n    });\n\n    it('should change active index on click', () => {\n      // select the second link\n      let tabLink = fixture.debugElement.queryAll(By.css('a'))[1];\n      tabLink.nativeElement.click();\n      expect(fixture.componentInstance.activeIndex).toBe(1);\n\n      // select the third link\n      tabLink = fixture.debugElement.queryAll(By.css('a'))[2];\n      tabLink.nativeElement.click();\n      expect(fixture.componentInstance.activeIndex).toBe(2);\n    });\n\n    it('should add the active class if active', () => {\n      let tabLink1 = fixture.debugElement.queryAll(By.css('a'))[0];\n      let tabLink2 = fixture.debugElement.queryAll(By.css('a'))[1];\n      const tabLinkElements = fixture.debugElement.queryAll(By.css('a'))\n        .map(tabLinkDebugEl => tabLinkDebugEl.nativeElement);\n\n      tabLink1.nativeElement.click();\n      fixture.detectChanges();\n      expect(tabLinkElements[0].classList.contains('mat-tab-label-active')).toBeTruthy();\n      expect(tabLinkElements[1].classList.contains('mat-tab-label-active')).toBeFalsy();\n\n      tabLink2.nativeElement.click();\n      fixture.detectChanges();\n      expect(tabLinkElements[0].classList.contains('mat-tab-label-active')).toBeFalsy();\n      expect(tabLinkElements[1].classList.contains('mat-tab-label-active')).toBeTruthy();\n    });\n\n    it('should toggle aria-current based on active state', () => {\n      let tabLink1 = fixture.debugElement.queryAll(By.css('a'))[0];\n      let tabLink2 = fixture.debugElement.queryAll(By.css('a'))[1];\n      const tabLinkElements = fixture.debugElement.queryAll(By.css('a'))\n        .map(tabLinkDebugEl => tabLinkDebugEl.nativeElement);\n\n      tabLink1.nativeElement.click();\n      fixture.detectChanges();\n      expect(tabLinkElements[0].getAttribute('aria-current')).toEqual('true');\n      expect(tabLinkElements[1].getAttribute('aria-current')).toEqual('false');\n\n      tabLink2.nativeElement.click();\n      fixture.detectChanges();\n      expect(tabLinkElements[0].getAttribute('aria-current')).toEqual('false');\n      expect(tabLinkElements[1].getAttribute('aria-current')).toEqual('true');\n    });\n\n    it('should add the disabled class if disabled', () => {\n      const tabLinkElements = fixture.debugElement.queryAll(By.css('a'))\n        .map(tabLinkDebugEl => tabLinkDebugEl.nativeElement);\n\n      expect(tabLinkElements.every(tabLinkEl => !tabLinkEl.classList.contains('mat-tab-disabled')))\n        .toBe(true, 'Expected every tab link to not have the disabled class initially');\n\n      fixture.componentInstance.disabled = true;\n      fixture.detectChanges();\n\n      expect(tabLinkElements.every(tabLinkEl => tabLinkEl.classList.contains('mat-tab-disabled')))\n        .toBe(true, 'Expected every tab link to have the disabled class if set through binding');\n    });\n\n    it('should update aria-disabled if disabled', () => {\n      const tabLinkElements = fixture.debugElement.queryAll(By.css('a'))\n        .map(tabLinkDebugEl => tabLinkDebugEl.nativeElement);\n\n      expect(tabLinkElements.every(tabLink => tabLink.getAttribute('aria-disabled') === 'false'))\n        .toBe(true, 'Expected aria-disabled to be set to \"false\" by default.');\n\n      fixture.componentInstance.disabled = true;\n      fixture.detectChanges();\n\n      expect(tabLinkElements.every(tabLink => tabLink.getAttribute('aria-disabled') === 'true'))\n        .toBe(true, 'Expected aria-disabled to be set to \"true\" if link is disabled.');\n    });\n\n    it('should update the tabindex if links are disabled', () => {\n      const tabLinkElements = fixture.debugElement.queryAll(By.css('a'))\n        .map(tabLinkDebugEl => tabLinkDebugEl.nativeElement);\n\n      expect(tabLinkElements.every(tabLink => tabLink.tabIndex === 0))\n        .toBe(true, 'Expected element to be keyboard focusable by default');\n\n      fixture.componentInstance.disabled = true;\n      fixture.detectChanges();\n\n      expect(tabLinkElements.every(tabLink => tabLink.tabIndex === -1))\n        .toBe(true, 'Expected element to no longer be keyboard focusable if disabled.');\n    });\n\n    it('should make disabled links unclickable', () => {\n      const tabLinkElement = fixture.debugElement.query(By.css('a')).nativeElement;\n\n      expect(getComputedStyle(tabLinkElement).pointerEvents).not.toBe('none');\n\n      fixture.componentInstance.disabled = true;\n      fixture.detectChanges();\n\n      expect(getComputedStyle(tabLinkElement).pointerEvents).toBe('none');\n    });\n\n    it('should re-align the ink bar when the direction changes', () => {\n      const inkBar = fixture.componentInstance.tabNavBar._inkBar;\n\n      spyOn(inkBar, 'alignToElement');\n\n      dirChange.next();\n      fixture.detectChanges();\n\n      expect(inkBar.alignToElement).toHaveBeenCalled();\n    });\n\n    it('should re-align the ink bar when the tabs list change', () => {\n      const inkBar = fixture.componentInstance.tabNavBar._inkBar;\n\n      spyOn(inkBar, 'alignToElement');\n\n      fixture.componentInstance.tabs = [1, 2, 3, 4];\n      fixture.detectChanges();\n\n      expect(inkBar.alignToElement).toHaveBeenCalled();\n    });\n\n    it('should re-align the ink bar when the tab labels change the width', done => {\n      const inkBar = fixture.componentInstance.tabNavBar._inkBar;\n\n      const spy = spyOn(inkBar, 'alignToElement').and.callFake(() => {\n        expect(spy.calls.any()).toBe(true);\n        done();\n      });\n\n      fixture.componentInstance.label = 'label change';\n      fixture.detectChanges();\n\n      expect(spy.calls.any()).toBe(false);\n    });\n\n    it('should re-align the ink bar when the window is resized', fakeAsync(() => {\n      const inkBar = fixture.componentInstance.tabNavBar._inkBar;\n\n      spyOn(inkBar, 'alignToElement');\n\n      dispatchFakeEvent(window, 'resize');\n      tick(150);\n      fixture.detectChanges();\n\n      expect(inkBar.alignToElement).toHaveBeenCalled();\n    }));\n\n    it('should hide the ink bar when all the links are inactive', () => {\n      const inkBar = fixture.componentInstance.tabNavBar._inkBar;\n\n      spyOn(inkBar, 'hide');\n\n      fixture.componentInstance.tabLinks.forEach(link => link.active = false);\n      fixture.detectChanges();\n\n      expect(inkBar.hide).toHaveBeenCalled();\n    });\n  });\n\n  it('should clean up the ripple event handlers on destroy', () => {\n    let fixture: ComponentFixture<TabLinkWithNgIf> = TestBed.createComponent(TabLinkWithNgIf);\n    fixture.detectChanges();\n\n    let link = fixture.debugElement.nativeElement.querySelector('.mat-tab-link');\n\n    fixture.componentInstance.isDestroyed = true;\n    fixture.detectChanges();\n\n    dispatchMouseEvent(link, 'mousedown');\n\n    expect(link.querySelector('.mat-ripple-element'))\n      .toBeFalsy('Expected no ripple to be created when ripple target is destroyed.');\n  });\n\n  it('should support the native tabindex attribute', () => {\n      const fixture = TestBed.createComponent(TabLinkWithNativeTabindexAttr);\n    fixture.detectChanges();\n\n    const tabLink = fixture.debugElement.query(By.directive(MatTabLink))\n        .injector.get<MatTabLink>(MatTabLink);\n\n    expect(tabLink.tabIndex)\n      .toBe(5, 'Expected the tabIndex to be set from the native tabindex attribute.');\n  });\n\n  it('should support binding to the tabIndex', () => {\n    const fixture = TestBed.createComponent(TabLinkWithTabIndexBinding);\n    fixture.detectChanges();\n\n    const tabLink = fixture.debugElement.query(By.directive(MatTabLink))\n        .injector.get<MatTabLink>(MatTabLink);\n\n    expect(tabLink.tabIndex).toBe(0, 'Expected the tabIndex to be set to 0 by default.');\n\n    fixture.componentInstance.tabIndex = 3;\n    fixture.detectChanges();\n\n    expect(tabLink.tabIndex).toBe(3, 'Expected the tabIndex to be have been set to 3.');\n  });\n\n  describe('ripples', () => {\n    let fixture: ComponentFixture<SimpleTabNavBarTestApp>;\n\n    beforeEach(() => {\n      fixture = TestBed.createComponent(SimpleTabNavBarTestApp);\n      fixture.detectChanges();\n    });\n\n    it('should be disabled on all tab links when they are disabled on the nav bar', () => {\n      expect(fixture.componentInstance.tabLinks.toArray().every(tabLink => !tabLink.rippleDisabled))\n        .toBe(true, 'Expected every tab link to have ripples enabled');\n\n      fixture.componentInstance.disableRippleOnBar = true;\n      fixture.detectChanges();\n\n      expect(fixture.componentInstance.tabLinks.toArray().every(tabLink => tabLink.rippleDisabled))\n        .toBe(true, 'Expected every tab link to have ripples disabled');\n    });\n\n    it('should have the `disableRipple` from the tab take precedence over the nav bar', () => {\n      const firstTab = fixture.componentInstance.tabLinks.first;\n\n      expect(firstTab.rippleDisabled).toBe(false, 'Expected ripples to be enabled on first tab');\n\n      firstTab.disableRipple = true;\n      fixture.componentInstance.disableRippleOnBar = false;\n      fixture.detectChanges();\n\n      expect(firstTab.rippleDisabled).toBe(true, 'Expected ripples to be disabled on first tab');\n    });\n\n    it('should show up for tab link elements on mousedown', () => {\n      const tabLink = fixture.debugElement.nativeElement.querySelector('.mat-tab-link');\n\n      dispatchMouseEvent(tabLink, 'mousedown');\n      dispatchMouseEvent(tabLink, 'mouseup');\n\n      expect(tabLink.querySelectorAll('.mat-ripple-element').length)\n        .toBe(1, 'Expected one ripple to show up if user clicks on tab link.');\n    });\n\n    it('should be able to disable ripples on an individual tab link', () => {\n      const tabLinkDebug = fixture.debugElement.query(By.css('a'));\n      const tabLinkElement = tabLinkDebug.nativeElement;\n      const tabLinkInstance = tabLinkDebug.injector.get<MatTabLink>(MatTabLink);\n\n      tabLinkInstance.disableRipple = true;\n\n      dispatchMouseEvent(tabLinkElement, 'mousedown');\n      dispatchMouseEvent(tabLinkElement, 'mouseup');\n\n      expect(tabLinkElement.querySelectorAll('.mat-ripple-element').length)\n        .toBe(0, 'Expected no ripple to show up if ripples are disabled.');\n    });\n\n    it('should be able to disable ripples through global options at runtime', () => {\n      expect(fixture.componentInstance.tabLinks.toArray().every(tabLink => !tabLink.rippleDisabled))\n        .toBe(true, 'Expected every tab link to have ripples enabled');\n\n      globalRippleOptions.disabled = true;\n\n      expect(fixture.componentInstance.tabLinks.toArray().every(tabLink => tabLink.rippleDisabled))\n        .toBe(true, 'Expected every tab link to have ripples disabled');\n    });\n  });\n});\n\n@Component({\n  selector: 'test-app',\n  template: `\n    <nav mat-tab-nav-bar [disableRipple]=\"disableRippleOnBar\">\n      <a mat-tab-link\n         *ngFor=\"let tab of tabs; let index = index\"\n         [active]=\"activeIndex === index\"\n         [disabled]=\"disabled\"\n         (click)=\"activeIndex = index\">\n        Tab link {{label}}\n      </a>\n    </nav>\n  `\n})\nclass SimpleTabNavBarTestApp {\n  @ViewChild(MatTabNav) tabNavBar: MatTabNav;\n  @ViewChildren(MatTabLink) tabLinks: QueryList<MatTabLink>;\n\n  label = '';\n  disabled = false;\n  disableRippleOnBar = false;\n  tabs = [0, 1, 2];\n\n  activeIndex = 0;\n}\n\n@Component({\n  template: `\n    <nav mat-tab-nav-bar>\n      <a mat-tab-link *ngIf=\"!isDestroyed\">Link</a>\n    </nav>\n  `\n})\nclass TabLinkWithNgIf {\n  isDestroyed = false;\n}\n\n@Component({\n  template: `\n    <nav mat-tab-nav-bar>\n      <a mat-tab-link [tabIndex]=\"tabIndex\">TabIndex Link</a>\n    </nav>\n  `\n})\nclass TabLinkWithTabIndexBinding {\n  tabIndex = 0;\n}\n\n@Component({\n  template: `\n    <nav mat-tab-nav-bar>\n      <a mat-tab-link tabindex=\"5\">Link</a>\n    </nav>\n  `\n})\nclass TabLinkWithNativeTabindexAttr {}\n"]}