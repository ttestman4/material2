{"version":3,"file":"input.spec.js","sourceRoot":"","sources":["../../../../src/lib/input/input.spec.ts"],"names":[],"mappings":"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","sourcesContent":["import {Platform, PlatformModule} from '@angular/cdk/platform';\nimport {\n  createFakeEvent,\n  dispatchFakeEvent,\n  wrappedErrorMessage,\n  MockNgZone,\n} from '@angular/cdk/testing';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  ViewChild,\n  Type,\n  Provider,\n  NgZone,\n  Directive,\n} from '@angular/core';\nimport {ComponentFixture, fakeAsync, flush, TestBed} from '@angular/core/testing';\nimport {\n  FormControl,\n  FormGroup,\n  FormGroupDirective,\n  FormsModule,\n  NgForm,\n  ReactiveFormsModule,\n  Validators,\n} from '@angular/forms';\nimport {\n  ErrorStateMatcher,\n  FloatLabelType,\n  MAT_LABEL_GLOBAL_OPTIONS,\n  ShowOnDirtyErrorStateMatcher,\n} from '@angular/material/core';\nimport {\n  getMatFormFieldDuplicatedHintError,\n  getMatFormFieldMissingControlError,\n  getMatFormFieldPlaceholderConflictError,\n  MAT_FORM_FIELD_DEFAULT_OPTIONS,\n  MatFormField,\n  MatFormFieldAppearance,\n  MatFormFieldModule,\n} from '@angular/material/form-field';\nimport {By} from '@angular/platform-browser';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {MatStepperModule} from '@angular/material/stepper';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {Directionality, Direction} from '@angular/cdk/bidi';\nimport {Subject} from 'rxjs';\nimport {MatInputModule, MatInput, MAT_INPUT_VALUE_ACCESSOR} from './index';\nimport {MatTextareaAutosize} from './autosize';\n\ndescribe('MatInput without forms', () => {\n  it('should default to floating labels', fakeAsync(() => {\n    let fixture = createComponent(MatInputWithId);\n    fixture.detectChanges();\n\n    let formField = fixture.debugElement.query(By.directive(MatFormField))\n        .componentInstance as MatFormField;\n    expect(formField.floatLabel).toBe('auto',\n        'Expected MatInput to set floatingLabel to auto by default.');\n  }));\n\n  it('should default to global floating label type', fakeAsync(() => {\n    let fixture = createComponent(MatInputWithId, [{\n      provide: MAT_LABEL_GLOBAL_OPTIONS, useValue: {float: 'always'}\n    }]);\n    fixture.detectChanges();\n\n    let formField = fixture.debugElement.query(By.directive(MatFormField))\n        .componentInstance as MatFormField;\n    expect(formField.floatLabel).toBe('always',\n      'Expected MatInput to set floatingLabel to always from global option.');\n  }));\n\n  it('should not be treated as empty if type is date', fakeAsync(() => {\n    const platform = new Platform();\n\n    if (!(platform.TRIDENT || (platform.SAFARI && !platform.IOS))) {\n      let fixture = createComponent(MatInputDateTestController);\n      fixture.detectChanges();\n\n      let el = fixture.debugElement.query(By.css('label')).nativeElement;\n      expect(el).not.toBeNull();\n      expect(el.classList.contains('mat-form-field-empty')).toBe(false);\n    }\n  }));\n\n  // Safari Desktop and IE don't support type=\"date\" and fallback to type=\"text\".\n  it('should be treated as empty if type is date in Safari Desktop or IE', fakeAsync(() => {\n    const platform = new Platform();\n\n    if (platform.TRIDENT || (platform.SAFARI && !platform.IOS)) {\n      let fixture = createComponent(MatInputDateTestController);\n      fixture.detectChanges();\n\n      let el = fixture.debugElement.query(By.css('label')).nativeElement;\n      expect(el).not.toBeNull();\n      expect(el.classList.contains('mat-form-field-empty')).toBe(true);\n    }\n  }));\n\n  it('should treat text input type as empty at init', fakeAsync(() => {\n    let fixture = createComponent(MatInputTextTestController);\n    fixture.detectChanges();\n\n    let el = fixture.debugElement.query(By.css('label')).nativeElement;\n    expect(el).not.toBeNull();\n    expect(el.classList.contains('mat-form-field-empty')).toBe(true);\n  }));\n\n  it('should treat password input type as empty at init', fakeAsync(() => {\n    let fixture = createComponent(MatInputPasswordTestController);\n    fixture.detectChanges();\n\n    let el = fixture.debugElement.query(By.css('label')).nativeElement;\n    expect(el).not.toBeNull();\n    expect(el.classList.contains('mat-form-field-empty')).toBe(true);\n  }));\n\n  it('should treat number input type as empty at init', fakeAsync(() => {\n    let fixture = createComponent(MatInputNumberTestController);\n    fixture.detectChanges();\n\n    let el = fixture.debugElement.query(By.css('label')).nativeElement;\n    expect(el).not.toBeNull();\n    expect(el.classList.contains('mat-form-field-empty')).toBe(true);\n  }));\n\n  it('should not be empty after input entered', fakeAsync(() => {\n    let fixture = createComponent(MatInputTextTestController);\n    fixture.detectChanges();\n\n    let inputEl = fixture.debugElement.query(By.css('input'));\n    let el = fixture.debugElement.query(By.css('label')).nativeElement;\n    expect(el).not.toBeNull();\n    expect(el.classList.contains('mat-form-field-empty')).toBe(true, 'should be empty');\n\n    inputEl.nativeElement.value = 'hello';\n    // Simulate input event.\n    inputEl.triggerEventHandler('input', {target: inputEl.nativeElement});\n    fixture.detectChanges();\n\n    el = fixture.debugElement.query(By.css('label')).nativeElement;\n    expect(el.classList.contains('mat-form-field-empty')).toBe(false, 'should not be empty');\n  }));\n\n  it('should update the placeholder when input entered', fakeAsync(() => {\n    let fixture = createComponent(MatInputWithStaticLabel);\n    fixture.detectChanges();\n\n    let inputEl = fixture.debugElement.query(By.css('input'));\n    let labelEl = fixture.debugElement.query(By.css('label')).nativeElement;\n\n    expect(labelEl.classList).toContain('mat-form-field-empty');\n    expect(labelEl.classList).not.toContain('mat-form-field-float');\n\n    // Update the value of the input.\n    inputEl.nativeElement.value = 'Text';\n\n    // Fake behavior of the `(input)` event which should trigger a change detection.\n    fixture.detectChanges();\n\n    expect(labelEl.classList).not.toContain('mat-form-field-empty');\n    expect(labelEl.classList).not.toContain('mat-form-field-float');\n  }));\n\n  it('should not be empty when the value set before view init', fakeAsync(() => {\n    let fixture = createComponent(MatInputWithValueBinding);\n    fixture.detectChanges();\n    let labelEl = fixture.debugElement.query(By.css('.mat-form-field-label')).nativeElement;\n\n    expect(labelEl.classList).not.toContain('mat-form-field-empty');\n\n    fixture.componentInstance.value = '';\n    fixture.detectChanges();\n\n    expect(labelEl.classList).toContain('mat-form-field-empty');\n  }));\n\n  it('should add id', fakeAsync(() => {\n    let fixture = createComponent(MatInputTextTestController);\n    fixture.detectChanges();\n\n    const inputElement: HTMLInputElement =\n        fixture.debugElement.query(By.css('input')).nativeElement;\n    const labelElement: HTMLInputElement =\n        fixture.debugElement.query(By.css('label')).nativeElement;\n\n    expect(inputElement.id).toBeTruthy();\n    expect(inputElement.id).toEqual(labelElement.getAttribute('for')!);\n  }));\n\n  it('should add aria-owns to the label for the associated control', fakeAsync(() => {\n    let fixture = createComponent(MatInputTextTestController);\n    fixture.detectChanges();\n\n    const inputElement: HTMLInputElement =\n        fixture.debugElement.query(By.css('input')).nativeElement;\n    const labelElement: HTMLInputElement =\n        fixture.debugElement.query(By.css('label')).nativeElement;\n\n    expect(labelElement.getAttribute('aria-owns')).toBe(inputElement.id);\n  }));\n\n  it('should add aria-required reflecting the required state', fakeAsync(() => {\n    const fixture = createComponent(MatInputWithRequired);\n    fixture.detectChanges();\n\n    const inputElement: HTMLInputElement =\n        fixture.debugElement.query(By.css('input')).nativeElement;\n\n    expect(inputElement.getAttribute('aria-required'))\n        .toBe('false', 'Expected aria-required to reflect required state of false');\n\n    fixture.componentInstance.required = true;\n    fixture.detectChanges();\n\n    expect(inputElement.getAttribute('aria-required'))\n        .toBe('true', 'Expected aria-required to reflect required state of true');\n  }));\n\n  it('should not overwrite existing id', fakeAsync(() => {\n    let fixture = createComponent(MatInputWithId);\n    fixture.detectChanges();\n\n    const inputElement: HTMLInputElement =\n        fixture.debugElement.query(By.css('input')).nativeElement;\n    const labelElement: HTMLInputElement =\n        fixture.debugElement.query(By.css('label')).nativeElement;\n\n    expect(inputElement.id).toBe('test-id');\n    expect(labelElement.getAttribute('for')).toBe('test-id');\n  }));\n\n  it('validates there\\'s only one hint label per side', fakeAsync(() => {\n    let fixture = createComponent(MatInputInvalidHintTestController);\n\n    expect(() => {\n      try {\n        fixture.detectChanges();\n        flush();\n      } catch {\n        flush();\n      }\n    }).toThrowError(\n        wrappedErrorMessage(getMatFormFieldDuplicatedHintError('start')));\n  }));\n\n  it('validates there\\'s only one hint label per side (attribute)', fakeAsync(() => {\n    let fixture = createComponent(MatInputInvalidHint2TestController);\n\n    expect(() => {\n      try {\n        fixture.detectChanges();\n        flush();\n      } catch {\n        flush();\n      }\n    }).toThrowError(\n        wrappedErrorMessage(getMatFormFieldDuplicatedHintError('start')));\n  }));\n\n  it('validates there\\'s only one placeholder', fakeAsync(() => {\n    let fixture = createComponent(MatInputInvalidPlaceholderTestController);\n\n    expect(() => {\n      try {\n        fixture.detectChanges();\n        flush();\n      } catch {\n        flush();\n      }\n    }).toThrowError(\n        wrappedErrorMessage(getMatFormFieldPlaceholderConflictError()));\n  }));\n\n  it('validates that matInput child is present', fakeAsync(() => {\n    let fixture = createComponent(MatInputMissingMatInputTestController);\n\n    expect(() => fixture.detectChanges()).toThrowError(\n        wrappedErrorMessage(getMatFormFieldMissingControlError()));\n  }));\n\n  it('validates that matInput child is present after initialization', fakeAsync(() => {\n    let fixture = createComponent(MatInputWithNgIf);\n\n    expect(() => fixture.detectChanges()).not.toThrowError(\n        wrappedErrorMessage(getMatFormFieldMissingControlError()));\n\n    fixture.componentInstance.renderInput = false;\n\n    expect(() => fixture.detectChanges()).toThrowError(\n        wrappedErrorMessage(getMatFormFieldMissingControlError()));\n  }));\n\n  it('validates the type', fakeAsync(() => {\n    let fixture = createComponent(MatInputInvalidTypeTestController);\n\n    // Technically this throws during the OnChanges detection phase,\n    // so the error is really a ChangeDetectionError and it becomes\n    // hard to build a full exception to compare with.\n    // We just check for any exception in this case.\n    expect(() => fixture.detectChanges()).toThrow(\n        /* new MatInputUnsupportedTypeError('file') */);\n  }));\n\n  it('supports hint labels attribute', fakeAsync(() => {\n    let fixture = createComponent(MatInputHintLabelTestController);\n    fixture.detectChanges();\n\n    // If the hint label is empty, expect no label.\n    expect(fixture.debugElement.query(By.css('.mat-hint'))).toBeNull();\n\n    fixture.componentInstance.label = 'label';\n    fixture.detectChanges();\n    expect(fixture.debugElement.query(By.css('.mat-hint'))).not.toBeNull();\n  }));\n\n  it('sets an id on hint labels', fakeAsync(() => {\n    let fixture = createComponent(MatInputHintLabelTestController);\n\n    fixture.componentInstance.label = 'label';\n    fixture.detectChanges();\n\n    let hint = fixture.debugElement.query(By.css('.mat-hint')).nativeElement;\n\n    expect(hint.getAttribute('id')).toBeTruthy();\n  }));\n\n  it('supports hint labels elements', fakeAsync(() => {\n    let fixture = createComponent(MatInputHintLabel2TestController);\n    fixture.detectChanges();\n\n    // In this case, we should have an empty <mat-hint>.\n    let el = fixture.debugElement.query(By.css('mat-hint')).nativeElement;\n    expect(el.textContent).toBeFalsy();\n\n    fixture.componentInstance.label = 'label';\n    fixture.detectChanges();\n    el = fixture.debugElement.query(By.css('mat-hint')).nativeElement;\n    expect(el.textContent).toBe('label');\n  }));\n\n  it('sets an id on the hint element', fakeAsync(() => {\n    let fixture = createComponent(MatInputHintLabel2TestController);\n\n    fixture.componentInstance.label = 'label';\n    fixture.detectChanges();\n\n    let hint = fixture.debugElement.query(By.css('mat-hint')).nativeElement;\n\n    expect(hint.getAttribute('id')).toBeTruthy();\n  }));\n\n  it('supports placeholder attribute', fakeAsync(() => {\n    let fixture = createComponent(MatInputPlaceholderAttrTestComponent);\n    fixture.detectChanges();\n\n    let inputEl = fixture.debugElement.query(By.css('input')).nativeElement;\n\n    expect(fixture.debugElement.query(By.css('label'))).toBeNull();\n    expect(inputEl.placeholder).toBe('');\n\n    fixture.componentInstance.placeholder = 'Other placeholder';\n    fixture.detectChanges();\n\n    let labelEl = fixture.debugElement.query(By.css('label'));\n\n    expect(inputEl.placeholder).toBe('Other placeholder');\n    expect(labelEl).not.toBeNull();\n    expect(labelEl.nativeElement.textContent).toMatch('Other placeholder');\n    expect(labelEl.nativeElement.textContent).not.toMatch(/\\*/g);\n  }));\n\n  it('supports placeholder element', fakeAsync(() => {\n    let fixture = createComponent(MatInputPlaceholderElementTestComponent);\n    fixture.detectChanges();\n\n    let el = fixture.debugElement.query(By.css('label'));\n    expect(el).not.toBeNull();\n    expect(el.nativeElement.textContent).toMatch('Default Placeholder');\n\n    fixture.componentInstance.placeholder = 'Other placeholder';\n    fixture.detectChanges();\n\n    el = fixture.debugElement.query(By.css('label'));\n    expect(el).not.toBeNull();\n    expect(el.nativeElement.textContent).toMatch('Other placeholder');\n    expect(el.nativeElement.textContent).not.toMatch(/\\*/g);\n  }));\n\n  it('supports placeholder required star', fakeAsync(() => {\n    let fixture = createComponent(MatInputPlaceholderRequiredTestComponent);\n    fixture.detectChanges();\n\n    let el = fixture.debugElement.query(By.css('label'));\n    expect(el).not.toBeNull();\n    expect(el.nativeElement.textContent).toMatch(/hello\\s+\\*/g);\n  }));\n\n  it('should hide the required star if input is disabled', () => {\n    const fixture = createComponent(MatInputPlaceholderRequiredTestComponent);\n\n    fixture.componentInstance.disabled = true;\n    fixture.detectChanges();\n\n    const el = fixture.debugElement.query(By.css('label'));\n\n    expect(el).not.toBeNull();\n    expect(el.nativeElement.textContent!.trim()).toMatch(/^hello$/);\n  });\n\n  it('should hide the required star from screen readers', fakeAsync(() => {\n    let fixture = createComponent(MatInputPlaceholderRequiredTestComponent);\n    fixture.detectChanges();\n\n    let el = fixture.debugElement.query(By.css('.mat-form-field-required-marker')).nativeElement;\n\n    expect(el.getAttribute('aria-hidden')).toBe('true');\n  }));\n\n  it('hide placeholder required star when set to hide the required marker', fakeAsync(() => {\n    let fixture = createComponent(MatInputPlaceholderRequiredTestComponent);\n    fixture.detectChanges();\n\n    let el = fixture.debugElement.query(By.css('label'));\n    expect(el).not.toBeNull();\n    expect(el.nativeElement.textContent).toMatch(/hello\\s+\\*/g);\n\n    fixture.componentInstance.hideRequiredMarker = true;\n    fixture.detectChanges();\n\n    expect(el.nativeElement.textContent).toMatch(/hello/g);\n  }));\n\n  it('supports the disabled attribute as binding', fakeAsync(() => {\n    const fixture = createComponent(MatInputWithDisabled);\n    fixture.detectChanges();\n\n    const formFieldEl =\n        fixture.debugElement.query(By.css('.mat-form-field')).nativeElement;\n    const inputEl = fixture.debugElement.query(By.css('input')).nativeElement;\n\n    expect(formFieldEl.classList.contains('mat-form-field-disabled'))\n        .toBe(false, `Expected form field not to start out disabled.`);\n    expect(inputEl.disabled).toBe(false);\n\n    fixture.componentInstance.disabled = true;\n    fixture.detectChanges();\n\n    expect(formFieldEl.classList.contains('mat-form-field-disabled'))\n        .toBe(true, `Expected form field to look disabled after property is set.`);\n    expect(inputEl.disabled).toBe(true);\n  }));\n\n  it('supports the disabled attribute as binding for select', fakeAsync(() => {\n    const fixture = createComponent(MatInputSelect);\n    fixture.detectChanges();\n\n    const formFieldEl =\n        fixture.debugElement.query(By.css('.mat-form-field')).nativeElement;\n    const selectEl = fixture.debugElement.query(By.css('select')).nativeElement;\n\n    expect(formFieldEl.classList.contains('mat-form-field-disabled'))\n        .toBe(false, `Expected form field not to start out disabled.`);\n    expect(selectEl.disabled).toBe(false);\n\n    fixture.componentInstance.disabled = true;\n    fixture.detectChanges();\n\n    expect(formFieldEl.classList.contains('mat-form-field-disabled'))\n        .toBe(true, `Expected form field to look disabled after property is set.`);\n    expect(selectEl.disabled).toBe(true);\n  }));\n\n  it('should add a class to the form field if it has a native select', fakeAsync(() => {\n    const fixture = createComponent(MatInputSelect);\n    fixture.detectChanges();\n\n    const formField = fixture.debugElement.query(By.css('.mat-form-field')).nativeElement;\n\n    expect(formField.classList).toContain('mat-form-field-type-mat-native-select');\n  }));\n\n  it('supports the required attribute as binding', fakeAsync(() => {\n    let fixture = createComponent(MatInputWithRequired);\n    fixture.detectChanges();\n\n    let inputEl = fixture.debugElement.query(By.css('input')).nativeElement;\n\n    expect(inputEl.required).toBe(false);\n\n    fixture.componentInstance.required = true;\n    fixture.detectChanges();\n\n    expect(inputEl.required).toBe(true);\n  }));\n\n  it('supports the required attribute as binding for select', fakeAsync(() => {\n    const fixture = createComponent(MatInputSelect);\n    fixture.detectChanges();\n\n    const selectEl = fixture.debugElement.query(By.css('select')).nativeElement;\n\n    expect(selectEl.required).toBe(false);\n\n    fixture.componentInstance.required = true;\n    fixture.detectChanges();\n\n    expect(selectEl.required).toBe(true);\n  }));\n\n  it('supports the type attribute as binding', fakeAsync(() => {\n    let fixture = createComponent(MatInputWithType);\n    fixture.detectChanges();\n\n    let inputEl = fixture.debugElement.query(By.css('input')).nativeElement;\n\n    expect(inputEl.type).toBe('text');\n\n    fixture.componentInstance.type = 'password';\n    fixture.detectChanges();\n\n    expect(inputEl.type).toBe('password');\n  }));\n\n  it('supports textarea', fakeAsync(() => {\n    let fixture = createComponent(MatInputTextareaWithBindings);\n    fixture.detectChanges();\n\n    const textarea: HTMLTextAreaElement = fixture.nativeElement.querySelector('textarea');\n    expect(textarea).not.toBeNull();\n  }));\n\n  it('supports select', fakeAsync(() => {\n    const fixture = createComponent(MatInputSelect);\n    fixture.detectChanges();\n\n    const nativeSelect: HTMLTextAreaElement = fixture.nativeElement.querySelector('select');\n    expect(nativeSelect).not.toBeNull();\n  }));\n\n  it('sets the aria-describedby when a hintLabel is set', fakeAsync(() => {\n    let fixture = createComponent(MatInputHintLabelTestController);\n\n    fixture.componentInstance.label = 'label';\n    fixture.detectChanges();\n\n    let hint = fixture.debugElement.query(By.css('.mat-hint')).nativeElement;\n    let input = fixture.debugElement.query(By.css('input')).nativeElement;\n\n    expect(input.getAttribute('aria-describedby')).toBe(hint.getAttribute('id'));\n  }));\n\n  it('sets the aria-describedby to the id of the mat-hint', fakeAsync(() => {\n    let fixture = createComponent(MatInputHintLabel2TestController);\n\n    fixture.componentInstance.label = 'label';\n    fixture.detectChanges();\n\n    let hint = fixture.debugElement.query(By.css('.mat-hint')).nativeElement;\n    let input = fixture.debugElement.query(By.css('input')).nativeElement;\n\n    expect(input.getAttribute('aria-describedby')).toBe(hint.getAttribute('id'));\n  }));\n\n  it('sets the aria-describedby with multiple mat-hint instances', fakeAsync(() => {\n    let fixture = createComponent(MatInputMultipleHintTestController);\n\n    fixture.componentInstance.startId = 'start';\n    fixture.componentInstance.endId = 'end';\n    fixture.detectChanges();\n\n    let input = fixture.debugElement.query(By.css('input')).nativeElement;\n\n    expect(input.getAttribute('aria-describedby')).toBe('start end');\n  }));\n\n  it('sets the aria-describedby when a hintLabel is set, in addition to a mat-hint',\n    fakeAsync(() => {\n      let fixture = createComponent(MatInputMultipleHintMixedTestController);\n\n      fixture.detectChanges();\n\n      let hintLabel = fixture.debugElement.query(By.css('.mat-hint:not(.mat-right)')).nativeElement;\n      let endLabel = fixture.debugElement.query(By.css('.mat-hint.mat-right')).nativeElement;\n      let input = fixture.debugElement.query(By.css('input')).nativeElement;\n      let ariaValue = input.getAttribute('aria-describedby');\n\n      expect(ariaValue).toBe(`${hintLabel.getAttribute('id')} ${endLabel.getAttribute('id')}`);\n    }));\n\n  it('should float when floatLabel is set to default and text is entered', fakeAsync(() => {\n    let fixture = createComponent(MatInputWithDynamicLabel);\n    fixture.detectChanges();\n\n    let inputEl = fixture.debugElement.query(By.css('input')).nativeElement;\n    let formFieldEl = fixture.debugElement.query(By.css('.mat-form-field')).nativeElement;\n\n    expect(formFieldEl.classList).toContain('mat-form-field-can-float');\n    expect(formFieldEl.classList).toContain('mat-form-field-should-float');\n\n    fixture.componentInstance.shouldFloat = 'auto';\n    fixture.detectChanges();\n\n    expect(formFieldEl.classList).toContain('mat-form-field-can-float');\n    expect(formFieldEl.classList).not.toContain('mat-form-field-should-float');\n\n    // Update the value of the input.\n    inputEl.value = 'Text';\n\n    // Fake behavior of the `(input)` event which should trigger a change detection.\n    fixture.detectChanges();\n\n    expect(formFieldEl.classList).toContain('mat-form-field-can-float');\n    expect(formFieldEl.classList).toContain('mat-form-field-should-float');\n  }));\n\n  it('should always float the label when floatLabel is set to true', fakeAsync(() => {\n    let fixture = createComponent(MatInputWithDynamicLabel);\n    fixture.detectChanges();\n\n    let inputEl = fixture.debugElement.query(By.css('input')).nativeElement;\n    let formFieldEl = fixture.debugElement.query(By.css('.mat-form-field')).nativeElement;\n\n    expect(formFieldEl.classList).toContain('mat-form-field-can-float');\n    expect(formFieldEl.classList).toContain('mat-form-field-should-float');\n\n    fixture.detectChanges();\n\n    // Update the value of the input.\n    inputEl.value = 'Text';\n\n    // Fake behavior of the `(input)` event which should trigger a change detection.\n    fixture.detectChanges();\n\n    expect(formFieldEl.classList).toContain('mat-form-field-can-float');\n    expect(formFieldEl.classList).toContain('mat-form-field-should-float');\n  }));\n\n  it('should float labels when select has value', fakeAsync(() => {\n    const fixture = createComponent(MatInputSelect);\n    fixture.detectChanges();\n\n    const formFieldEl = fixture.debugElement.query(By.css('.mat-form-field')).nativeElement;\n    expect(formFieldEl.classList).toContain('mat-form-field-should-float');\n  }));\n\n  it('should not float the label if the selectedIndex is negative', fakeAsync(() => {\n    const fixture = createComponent(MatInputSelect);\n    fixture.detectChanges();\n\n    const formFieldEl = fixture.debugElement.query(By.css('.mat-form-field')).nativeElement;\n    const selectEl: HTMLSelectElement = formFieldEl.querySelector('select');\n\n    expect(formFieldEl.classList).toContain('mat-form-field-should-float');\n\n    selectEl.selectedIndex = -1;\n    fixture.detectChanges();\n\n    expect(formFieldEl.classList).not.toContain('mat-form-field-should-float');\n  }));\n\n  it('should not float labels when select has no value, no option label, ' +\n      'no option innerHtml', fakeAsync(() => {\n    const fixture = createComponent(MatInputSelectWithNoLabelNoValue);\n    fixture.detectChanges();\n\n    const formFieldEl = fixture.debugElement.query(By.css('.mat-form-field')).nativeElement;\n    expect(formFieldEl.classList).not.toContain('mat-form-field-should-float');\n  }));\n\n  it('should floating labels when select has no value but has option label',\n      fakeAsync(() => {\n    const fixture = createComponent(MatInputSelectWithLabel);\n    fixture.detectChanges();\n\n    const formFieldEl = fixture.debugElement.query(By.css('.mat-form-field')).nativeElement;\n    expect(formFieldEl.classList).toContain('mat-form-field-should-float');\n  }));\n\n  it('should floating labels when select has no value but has option innerHTML',\n      fakeAsync(() => {\n    const fixture = createComponent(MatInputSelectWithInnerHtml);\n    fixture.detectChanges();\n\n    const formFieldEl = fixture.debugElement.query(By.css('.mat-form-field'))\n        .nativeElement;\n    expect(formFieldEl.classList).toContain('mat-form-field-should-float');\n  }));\n\n  it('should not throw if a native select does not have options', fakeAsync(() => {\n    const fixture = createComponent(MatInputSelectWithoutOptions);\n    expect(() => fixture.detectChanges()).not.toThrow();\n  }));\n\n  it('should never float the label when floatLabel is set to false', fakeAsync(() => {\n    let fixture = createComponent(MatInputWithDynamicLabel);\n\n    fixture.componentInstance.shouldFloat = 'never';\n    fixture.detectChanges();\n\n    let inputEl = fixture.debugElement.query(By.css('input')).nativeElement;\n    let labelEl = fixture.debugElement.query(By.css('label')).nativeElement;\n\n    expect(labelEl.classList).toContain('mat-form-field-empty');\n    expect(labelEl.classList).not.toContain('mat-form-field-float');\n\n    // Update the value of the input.\n    inputEl.value = 'Text';\n\n    // Fake behavior of the `(input)` event which should trigger a change detection.\n    fixture.detectChanges();\n\n    expect(labelEl.classList).not.toContain('mat-form-field-empty');\n    expect(labelEl.classList).not.toContain('mat-form-field-float');\n  }));\n\n  it('should be able to toggle the floating label programmatically', fakeAsync(() => {\n    const fixture = createComponent(MatInputWithId);\n\n    fixture.detectChanges();\n\n    const formField = fixture.debugElement.query(By.directive(MatFormField));\n    const containerInstance = formField.componentInstance as MatFormField;\n    const label = formField.nativeElement.querySelector('.mat-form-field-label');\n\n    expect(containerInstance.floatLabel).toBe('auto');\n    expect(label.classList)\n        .toContain('mat-form-field-empty', 'Expected input to be considered empty.');\n\n    containerInstance.floatLabel = 'always';\n    fixture.detectChanges();\n\n    expect(label.classList)\n        .not.toContain('mat-form-field-empty', 'Expected input to be considered not empty.');\n  }));\n\n  it('should not have prefix and suffix elements when none are specified', fakeAsync(() => {\n    let fixture = createComponent(MatInputWithId);\n    fixture.detectChanges();\n\n    let prefixEl = fixture.debugElement.query(By.css('.mat-form-field-prefix'));\n    let suffixEl = fixture.debugElement.query(By.css('.mat-form-field-suffix'));\n\n    expect(prefixEl).toBeNull();\n    expect(suffixEl).toBeNull();\n  }));\n\n  it('should add prefix and suffix elements when specified', fakeAsync(() => {\n    const fixture = createComponent(MatInputWithPrefixAndSuffix);\n    fixture.detectChanges();\n\n    const prefixEl = fixture.debugElement.query(By.css('.mat-form-field-prefix'));\n    const suffixEl = fixture.debugElement.query(By.css('.mat-form-field-suffix'));\n\n    expect(prefixEl).not.toBeNull();\n    expect(suffixEl).not.toBeNull();\n    expect(prefixEl.nativeElement.innerText.trim()).toEqual('Prefix');\n    expect(suffixEl.nativeElement.innerText.trim()).toEqual('Suffix');\n  }));\n\n  it('should update empty class when value changes programmatically and OnPush', fakeAsync(() => {\n    let fixture = createComponent(MatInputOnPush);\n    fixture.detectChanges();\n\n    let component = fixture.componentInstance;\n    let label = fixture.debugElement.query(By.css('.mat-form-field-label')).nativeElement;\n\n    expect(label.classList).toContain('mat-form-field-empty', 'Input initially empty');\n\n    component.formControl.setValue('something');\n    fixture.detectChanges();\n\n    expect(label.classList).not.toContain('mat-form-field-empty', 'Input no longer empty');\n  }));\n\n  it('should set the focused class when the input is focused', fakeAsync(() => {\n    let fixture = createComponent(MatInputTextTestController);\n    fixture.detectChanges();\n\n    let input = fixture.debugElement.query(By.directive(MatInput))\n      .injector.get<MatInput>(MatInput);\n    let container = fixture.debugElement.query(By.css('mat-form-field')).nativeElement;\n\n    // Call the focus handler directly to avoid flakyness where\n    // browsers don't focus elements if the window is minimized.\n    input._focusChanged(true);\n    fixture.detectChanges();\n\n    expect(container.classList).toContain('mat-focused');\n  }));\n\n  it('should remove the focused class if the input becomes disabled while focused',\n    fakeAsync(() => {\n      const fixture = createComponent(MatInputTextTestController);\n      fixture.detectChanges();\n\n      const input = fixture.debugElement.query(By.directive(MatInput))\n          .injector.get<MatInput>(MatInput);\n      const container = fixture.debugElement.query(By.css('mat-form-field')).nativeElement;\n\n      // Call the focus handler directly to avoid flakyness where\n      // browsers don't focus elements if the window is minimized.\n      input._focusChanged(true);\n      fixture.detectChanges();\n\n      expect(container.classList).toContain('mat-focused');\n\n      input.disabled = true;\n      fixture.detectChanges();\n\n      expect(container.classList).not.toContain('mat-focused');\n    }));\n\n  it('should be able to animate the label up and lock it in position', fakeAsync(() => {\n    let fixture = createComponent(MatInputTextTestController);\n    fixture.detectChanges();\n\n    let inputContainer = fixture.debugElement.query(By.directive(MatFormField))\n        .componentInstance as MatFormField;\n    let label = fixture.debugElement.query(By.css('.mat-form-field-label')).nativeElement;\n\n    expect(inputContainer.floatLabel).toBe('auto');\n\n    inputContainer._animateAndLockLabel();\n    fixture.detectChanges();\n\n    expect(inputContainer._shouldAlwaysFloat).toBe(false);\n    expect(inputContainer.floatLabel).toBe('always');\n\n    const fakeEvent = Object.assign(createFakeEvent('transitionend'), {propertyName: 'transform'});\n\n    label.dispatchEvent(fakeEvent);\n    fixture.detectChanges();\n\n    expect(inputContainer._shouldAlwaysFloat).toBe(true);\n    expect(inputContainer.floatLabel).toBe('always');\n  }));\n\n  it('should not highlight when focusing a readonly input', fakeAsync(() => {\n    let fixture = createComponent(MatInputWithReadonlyInput);\n    fixture.detectChanges();\n\n    let input = fixture.debugElement.query(By.directive(MatInput)).injector.get<MatInput>(MatInput);\n    let container = fixture.debugElement.query(By.css('mat-form-field')).nativeElement;\n\n    // Call the focus handler directly to avoid flakyness where\n    // browsers don't focus elements if the window is minimized.\n    input._focusChanged(true);\n    fixture.detectChanges();\n\n    expect(input.focused).toBe(false);\n    expect(container.classList).not.toContain('mat-focused');\n  }));\n\n  it('should reset the highlight when a readonly input is blurred', fakeAsync(() => {\n    const fixture = createComponent(MatInputWithReadonlyInput);\n    fixture.detectChanges();\n\n    const inputDebugElement = fixture.debugElement.query(By.directive(MatInput));\n    const input = inputDebugElement.injector.get<MatInput>(MatInput);\n    const container = fixture.debugElement.query(By.css('mat-form-field')).nativeElement;\n\n    fixture.componentInstance.isReadonly = false;\n    fixture.detectChanges();\n\n    // Call the focus handler directly to avoid flakyness where\n    // browsers don't focus elements if the window is minimized.\n    input._focusChanged(true);\n    fixture.detectChanges();\n\n    expect(input.focused).toBe(true);\n    expect(container.classList).toContain('mat-focused');\n\n    fixture.componentInstance.isReadonly = true;\n    fixture.detectChanges();\n\n    input._focusChanged(false);\n    fixture.detectChanges();\n\n    expect(input.focused).toBe(false);\n    expect(container.classList).not.toContain('mat-focused');\n  }));\n\n  it('should only show the native placeholder, when there is a label, on focus', () => {\n    const fixture = createComponent(MatInputWithLabelAndPlaceholder);\n    fixture.detectChanges();\n\n    const container = fixture.debugElement.query(By.css('mat-form-field')).nativeElement;\n    const label = fixture.debugElement.query(By.css('.mat-form-field-label')).nativeElement;\n    const input = fixture.debugElement.query(By.css('input')).nativeElement;\n\n    expect(container.classList).toContain('mat-form-field-hide-placeholder');\n    expect(container.classList).not.toContain('mat-form-field-should-float');\n    expect(label.textContent.trim()).toBe('Label');\n    expect(input.getAttribute('placeholder')).toBe('Placeholder');\n\n    input.value = 'Value';\n    fixture.detectChanges();\n\n    expect(container.classList).not.toContain('mat-form-field-hide-placeholder');\n    expect(container.classList).toContain('mat-form-field-should-float');\n  });\n\n  it('should always show the native placeholder when floatLabel is set to \"always\"', () => {\n    const fixture = createComponent(MatInputWithLabelAndPlaceholder);\n\n    fixture.componentInstance.floatLabel = 'always';\n    fixture.detectChanges();\n\n    const container = fixture.debugElement.query(By.css('mat-form-field')).nativeElement;\n\n    expect(container.classList).not.toContain('mat-form-field-hide-placeholder');\n  });\n\n  it('should not add the `placeholder` attribute if there is no placeholder', () => {\n    const fixture = createComponent(MatInputWithoutPlaceholder);\n    fixture.detectChanges();\n    const input = fixture.debugElement.query(By.css('input')).nativeElement;\n\n    expect(input.hasAttribute('placeholder')).toBe(false);\n  });\n\n  it('should not show the native placeholder when floatLabel is set to \"never\"', () => {\n    const fixture = createComponent(MatInputWithLabelAndPlaceholder);\n\n    fixture.componentInstance.floatLabel = 'never';\n    fixture.detectChanges();\n\n    const container = fixture.debugElement.query(By.css('mat-form-field')).nativeElement;\n    const input = fixture.debugElement.query(By.css('input')).nativeElement;\n\n    expect(container.classList).toContain('mat-form-field-hide-placeholder');\n    expect(container.classList).not.toContain('mat-form-field-should-float');\n\n    input.value = 'Value';\n    fixture.detectChanges();\n\n    expect(container.classList).toContain('mat-form-field-hide-placeholder');\n    expect(container.classList).not.toContain('mat-form-field-should-float');\n  });\n\n  it('should not add the native select class if the control is not a native select', () => {\n    const fixture = createComponent(MatInputWithId);\n    fixture.detectChanges();\n    const formField = fixture.debugElement.query(By.css('mat-form-field')).nativeElement;\n\n    expect(formField.classList).not.toContain('mat-form-field-type-mat-native-select');\n  });\n\n  it('should use the native input value when determining whether ' +\n    'the element is empty with a custom accessor', fakeAsync(() => {\n      let fixture = createComponent(MatInputWithCustomAccessor, [], [], [CustomMatInputAccessor]);\n      fixture.detectChanges();\n      let label = fixture.debugElement.query(By.css('label')).nativeElement;\n\n      expect(label.classList).toContain('mat-form-field-empty');\n\n      fixture.nativeElement.querySelector('input').value = 'abc';\n      fixture.detectChanges();\n\n      expect(label.classList).not.toContain('mat-form-field-empty');\n    }));\n\n});\n\ndescribe('MatInput with forms', () => {\n  describe('error messages', () => {\n    let fixture: ComponentFixture<MatInputWithFormErrorMessages>;\n    let testComponent: MatInputWithFormErrorMessages;\n    let containerEl: HTMLElement;\n    let inputEl: HTMLElement;\n\n    beforeEach(fakeAsync(() => {\n      fixture = createComponent(MatInputWithFormErrorMessages);\n      fixture.detectChanges();\n      testComponent = fixture.componentInstance;\n      containerEl = fixture.debugElement.query(By.css('mat-form-field')).nativeElement;\n      inputEl = fixture.debugElement.query(By.css('input')).nativeElement;\n    }));\n\n    it('should not show any errors if the user has not interacted', fakeAsync(() => {\n      expect(testComponent.formControl.untouched).toBe(true, 'Expected untouched form control');\n      expect(containerEl.querySelectorAll('mat-error').length).toBe(0, 'Expected no error message');\n      expect(inputEl.getAttribute('aria-invalid'))\n        .toBe('false', 'Expected aria-invalid to be set to \"false\".');\n    }));\n\n    it('should display an error message when the input is touched and invalid', fakeAsync(() => {\n      expect(testComponent.formControl.invalid).toBe(true, 'Expected form control to be invalid');\n      expect(containerEl.querySelectorAll('mat-error').length).toBe(0, 'Expected no error message');\n\n      testComponent.formControl.markAsTouched();\n      fixture.detectChanges();\n      flush();\n\n      expect(containerEl.classList)\n        .toContain('mat-form-field-invalid', 'Expected container to have the invalid CSS class.');\n      expect(containerEl.querySelectorAll('mat-error').length)\n        .toBe(1, 'Expected one error message to have been rendered.');\n      expect(inputEl.getAttribute('aria-invalid'))\n        .toBe('true', 'Expected aria-invalid to be set to \"true\".');\n    }));\n\n    it('should display an error message when the parent form is submitted', fakeAsync(() => {\n      expect(testComponent.form.submitted).toBe(false, 'Expected form not to have been submitted');\n      expect(testComponent.formControl.invalid).toBe(true, 'Expected form control to be invalid');\n      expect(containerEl.querySelectorAll('mat-error').length).toBe(0, 'Expected no error message');\n\n      dispatchFakeEvent(fixture.debugElement.query(By.css('form')).nativeElement, 'submit');\n      fixture.detectChanges();\n      flush();\n\n      expect(testComponent.form.submitted).toBe(true, 'Expected form to have been submitted');\n      expect(containerEl.classList)\n        .toContain('mat-form-field-invalid', 'Expected container to have the invalid CSS class.');\n      expect(containerEl.querySelectorAll('mat-error').length)\n        .toBe(1, 'Expected one error message to have been rendered.');\n      expect(inputEl.getAttribute('aria-invalid'))\n        .toBe('true', 'Expected aria-invalid to be set to \"true\".');\n    }));\n\n    it('should display an error message when the parent form group is submitted', fakeAsync(() => {\n      fixture.destroy();\n      TestBed.resetTestingModule();\n\n      let groupFixture = createComponent(MatInputWithFormGroupErrorMessages);\n      let component: MatInputWithFormGroupErrorMessages;\n\n      groupFixture.detectChanges();\n      component = groupFixture.componentInstance;\n      containerEl = groupFixture.debugElement.query(By.css('mat-form-field')).nativeElement;\n      inputEl = groupFixture.debugElement.query(By.css('input')).nativeElement;\n\n      expect(component.formGroup.invalid).toBe(true, 'Expected form control to be invalid');\n      expect(containerEl.querySelectorAll('mat-error').length).toBe(0, 'Expected no error message');\n      expect(inputEl.getAttribute('aria-invalid'))\n        .toBe('false', 'Expected aria-invalid to be set to \"false\".');\n      expect(component.formGroupDirective.submitted)\n        .toBe(false, 'Expected form not to have been submitted');\n\n      dispatchFakeEvent(groupFixture.debugElement.query(By.css('form')).nativeElement, 'submit');\n      groupFixture.detectChanges();\n      flush();\n\n      expect(component.formGroupDirective.submitted)\n        .toBe(true, 'Expected form to have been submitted');\n      expect(containerEl.classList)\n        .toContain('mat-form-field-invalid', 'Expected container to have the invalid CSS class.');\n      expect(containerEl.querySelectorAll('mat-error').length)\n        .toBe(1, 'Expected one error message to have been rendered.');\n      expect(inputEl.getAttribute('aria-invalid'))\n        .toBe('true', 'Expected aria-invalid to be set to \"true\".');\n    }));\n\n    it('should hide the errors and show the hints once the input becomes valid', fakeAsync(() => {\n      testComponent.formControl.markAsTouched();\n      fixture.detectChanges();\n      flush();\n\n      expect(containerEl.classList)\n        .toContain('mat-form-field-invalid', 'Expected container to have the invalid CSS class.');\n      expect(containerEl.querySelectorAll('mat-error').length)\n        .toBe(1, 'Expected one error message to have been rendered.');\n      expect(containerEl.querySelectorAll('mat-hint').length)\n        .toBe(0, 'Expected no hints to be shown.');\n\n      testComponent.formControl.setValue('something');\n      fixture.detectChanges();\n      flush();\n\n      expect(containerEl.classList).not.toContain('mat-form-field-invalid',\n        'Expected container not to have the invalid class when valid.');\n      expect(containerEl.querySelectorAll('mat-error').length)\n        .toBe(0, 'Expected no error messages when the input is valid.');\n      expect(containerEl.querySelectorAll('mat-hint').length)\n        .toBe(1, 'Expected one hint to be shown once the input is valid.');\n    }));\n\n    it('should not hide the hint if there are no error messages', fakeAsync(() => {\n      testComponent.renderError = false;\n      fixture.detectChanges();\n\n      expect(containerEl.querySelectorAll('mat-hint').length)\n        .toBe(1, 'Expected one hint to be shown on load.');\n\n      testComponent.formControl.markAsTouched();\n      fixture.detectChanges();\n      flush();\n\n      expect(containerEl.querySelectorAll('mat-hint').length)\n        .toBe(1, 'Expected one hint to still be shown.');\n    }));\n\n    it('should set the proper role on the error messages', fakeAsync(() => {\n      testComponent.formControl.markAsTouched();\n      fixture.detectChanges();\n\n      expect(containerEl.querySelector('mat-error')!.getAttribute('role')).toBe('alert');\n    }));\n\n    it('sets the aria-describedby to reference errors when in error state', fakeAsync(() => {\n      let hintId = fixture.debugElement.query(By.css('.mat-hint')).nativeElement.getAttribute('id');\n      let describedBy = inputEl.getAttribute('aria-describedby');\n\n      expect(hintId).toBeTruthy('hint should be shown');\n      expect(describedBy).toBe(hintId);\n\n      fixture.componentInstance.formControl.markAsTouched();\n      fixture.detectChanges();\n\n      let errorIds = fixture.debugElement.queryAll(By.css('.mat-error'))\n          .map(el => el.nativeElement.getAttribute('id')).join(' ');\n      describedBy = inputEl.getAttribute('aria-describedby');\n\n      expect(errorIds).toBeTruthy('errors should be shown');\n      expect(describedBy).toBe(errorIds);\n    }));\n  });\n\n  describe('custom error behavior', () => {\n\n    it('should display an error message when a custom error matcher returns true', fakeAsync(() => {\n      let fixture = createComponent(MatInputWithCustomErrorStateMatcher);\n      fixture.detectChanges();\n\n      let component = fixture.componentInstance;\n      let containerEl = fixture.debugElement.query(By.css('mat-form-field')).nativeElement;\n\n      const control = component.formGroup.get('name')!;\n\n      expect(control.invalid).toBe(true, 'Expected form control to be invalid');\n      expect(containerEl.querySelectorAll('mat-error').length)\n        .toBe(0, 'Expected no error messages');\n\n      control.markAsTouched();\n      fixture.detectChanges();\n\n      expect(containerEl.querySelectorAll('mat-error').length)\n        .toBe(0, 'Expected no error messages after being touched.');\n\n      component.errorState = true;\n      fixture.detectChanges();\n\n      expect(containerEl.querySelectorAll('mat-error').length)\n        .toBe(1, 'Expected one error messages to have been rendered.');\n    }));\n\n    it('should display an error message when global error matcher returns true', fakeAsync(() => {\n      let fixture = createComponent(MatInputWithFormErrorMessages, [{\n        provide: ErrorStateMatcher, useValue: {isErrorState: () => true}}\n      ]);\n\n      fixture.detectChanges();\n\n      let containerEl = fixture.debugElement.query(By.css('mat-form-field')).nativeElement;\n      let testComponent = fixture.componentInstance;\n\n      // Expect the control to still be untouched but the error to show due to the global setting\n      expect(testComponent.formControl.untouched).toBe(true, 'Expected untouched form control');\n      expect(containerEl.querySelectorAll('mat-error').length).toBe(1, 'Expected an error message');\n    }));\n\n    it('should display an error message when using ShowOnDirtyErrorStateMatcher', fakeAsync(() => {\n      let fixture = createComponent(MatInputWithFormErrorMessages, [{\n        provide: ErrorStateMatcher, useClass: ShowOnDirtyErrorStateMatcher\n      }]);\n      fixture.detectChanges();\n\n      let containerEl = fixture.debugElement.query(By.css('mat-form-field')).nativeElement;\n      let testComponent = fixture.componentInstance;\n\n      expect(testComponent.formControl.invalid).toBe(true, 'Expected form control to be invalid');\n      expect(containerEl.querySelectorAll('mat-error').length).toBe(0, 'Expected no error message');\n\n      testComponent.formControl.markAsTouched();\n      fixture.detectChanges();\n\n      expect(containerEl.querySelectorAll('mat-error').length)\n        .toBe(0, 'Expected no error messages when touched');\n\n      testComponent.formControl.markAsDirty();\n      fixture.detectChanges();\n\n      expect(containerEl.querySelectorAll('mat-error').length)\n        .toBe(1, 'Expected one error message when dirty');\n    }));\n  });\n\n  it('should update the value when using FormControl.setValue', fakeAsync(() => {\n    let fixture = createComponent(MatInputWithFormControl);\n    fixture.detectChanges();\n\n    let input = fixture.debugElement.query(By.directive(MatInput))\n      .injector.get<MatInput>(MatInput);\n\n    expect(input.value).toBeFalsy();\n\n    fixture.componentInstance.formControl.setValue('something');\n\n    expect(input.value).toBe('something');\n  }));\n\n  it('should display disabled styles when using FormControl.disable()', fakeAsync(() => {\n    const fixture = createComponent(MatInputWithFormControl);\n    fixture.detectChanges();\n\n    const formFieldEl =\n        fixture.debugElement.query(By.css('.mat-form-field')).nativeElement;\n    const inputEl = fixture.debugElement.query(By.css('input')).nativeElement;\n\n    expect(formFieldEl.classList)\n      .not.toContain('mat-form-field-disabled', `Expected form field not to start out disabled.`);\n    expect(inputEl.disabled).toBe(false);\n\n    fixture.componentInstance.formControl.disable();\n    fixture.detectChanges();\n\n    expect(formFieldEl.classList).toContain('mat-form-field-disabled',\n      `Expected form field to look disabled after disable() is called.`);\n    expect(inputEl.disabled).toBe(true);\n  }));\n\n  it('should not treat the number 0 as empty', fakeAsync(() => {\n    let fixture = createComponent(MatInputZeroTestController);\n    fixture.detectChanges();\n    flush();\n\n    fixture.detectChanges();\n\n    let el = fixture.debugElement.query(By.css('label')).nativeElement;\n    expect(el).not.toBeNull();\n    expect(el.classList.contains('mat-form-field-empty')).toBe(false);\n  }));\n\n  it('should update when the form field value is patched without emitting', fakeAsync(() => {\n    const fixture = createComponent(MatInputWithFormControl);\n    fixture.detectChanges();\n\n    const el = fixture.debugElement.query(By.css('label')).nativeElement;\n\n    expect(el.classList).toContain('mat-form-field-empty');\n\n    fixture.componentInstance.formControl.patchValue('value', {emitEvent: false});\n    fixture.detectChanges();\n\n    expect(el.classList).not.toContain('mat-form-field-empty');\n  }));\n\n});\n\ndescribe('MatInput with appearance', () => {\n  const nonLegacyAppearances: MatFormFieldAppearance[] = ['standard', 'fill'];\n  let fixture: ComponentFixture<MatInputWithAppearance>;\n  let testComponent: MatInputWithAppearance;\n  let containerEl: HTMLElement;\n\n  beforeEach(fakeAsync(() => {\n    fixture = createComponent(MatInputWithAppearance);\n    fixture.detectChanges();\n    testComponent = fixture.componentInstance;\n    containerEl = fixture.debugElement.query(By.css('mat-form-field')).nativeElement;\n  }));\n\n  it('legacy appearance should promote placeholder to label', fakeAsync(() => {\n    testComponent.appearance = 'legacy';\n    fixture.detectChanges();\n\n    expect(containerEl.classList).toContain('mat-form-field-appearance-legacy');\n    expect(testComponent.formField._hasFloatingLabel()).toBe(true);\n    expect(testComponent.formField._hideControlPlaceholder()).toBe(true);\n  }));\n\n  it('non-legacy appearances should not promote placeholder to label', fakeAsync(() => {\n    for (let appearance of nonLegacyAppearances) {\n      testComponent.appearance = appearance;\n      fixture.detectChanges();\n\n      expect(containerEl.classList).toContain(`mat-form-field-appearance-${appearance}`);\n      expect(testComponent.formField._hasFloatingLabel()).toBe(false);\n      expect(testComponent.formField._hideControlPlaceholder()).toBe(false);\n    }\n  }));\n\n  it('legacy appearance should respect float never', fakeAsync(() => {\n    testComponent.appearance = 'legacy';\n    fixture.detectChanges();\n\n    expect(containerEl.classList).toContain('mat-form-field-appearance-legacy');\n    expect(testComponent.formField.floatLabel).toBe('never');\n  }));\n\n  it('non-legacy appearances should not respect float never', fakeAsync(() => {\n    for (let appearance of nonLegacyAppearances) {\n      testComponent.appearance = appearance;\n      fixture.detectChanges();\n\n      expect(containerEl.classList).toContain(`mat-form-field-appearance-${appearance}`);\n      expect(testComponent.formField.floatLabel).toBe('auto');\n    }\n  }));\n\n  it('should recalculate gaps when switching to outline appearance after init', fakeAsync(() => {\n    fixture.destroy();\n    TestBed.resetTestingModule();\n\n    const outlineFixture = createComponent(MatInputWithAppearanceAndLabel);\n\n    outlineFixture.detectChanges();\n    outlineFixture.componentInstance.appearance = 'legacy';\n    outlineFixture.detectChanges();\n    flush();\n\n    outlineFixture.componentInstance.appearance = 'outline';\n    outlineFixture.detectChanges();\n    flush();\n    outlineFixture.detectChanges();\n\n    const wrapperElement = outlineFixture.nativeElement;\n    const outlineStart = wrapperElement.querySelector('.mat-form-field-outline-start');\n    const outlineGap = wrapperElement.querySelector('.mat-form-field-outline-gap');\n\n    expect(parseInt(outlineStart.style.width)).toBeGreaterThan(0);\n    expect(parseInt(outlineGap.style.width)).toBeGreaterThan(0);\n  }));\n\n  it('should not set an outline gap if the label is empty', fakeAsync(() => {\n    fixture.destroy();\n    TestBed.resetTestingModule();\n\n    const outlineFixture = createComponent(MatInputWithAppearanceAndLabel);\n\n    outlineFixture.componentInstance.labelContent = '';\n    outlineFixture.detectChanges();\n    outlineFixture.componentInstance.appearance = 'outline';\n    outlineFixture.detectChanges();\n    flush();\n    outlineFixture.detectChanges();\n\n    const outlineGap = outlineFixture.nativeElement.querySelector('.mat-form-field-outline-gap');\n\n    expect(parseInt(outlineGap.style.width)).toBeFalsy();\n  }));\n\n  it('should calculate the gaps if the default appearance is provided through DI', fakeAsync(() => {\n    fixture.destroy();\n    TestBed.resetTestingModule();\n\n    let zone: MockNgZone;\n    const labelFixture = createComponent(MatInputWithLabel, [\n      {\n        provide: MAT_FORM_FIELD_DEFAULT_OPTIONS,\n        useValue: {appearance: 'outline'}\n      },\n      {\n        provide: NgZone,\n        useFactory: () => zone = new MockNgZone()\n      }\n    ]);\n\n    labelFixture.detectChanges();\n    zone!.simulateZoneExit();\n    flush();\n    labelFixture.detectChanges();\n\n    const wrapperElement = labelFixture.nativeElement;\n    const outlineStart = wrapperElement.querySelector('.mat-form-field-outline-start');\n    const outlineGap = wrapperElement.querySelector('.mat-form-field-outline-gap');\n\n    expect(parseInt(outlineStart.style.width)).toBeGreaterThan(0);\n    expect(parseInt(outlineGap.style.width)).toBeGreaterThan(0);\n  }));\n\n  it('should update the outline gap when the prefix/suffix is added or removed', fakeAsync(() => {\n    fixture.destroy();\n    TestBed.resetTestingModule();\n\n    const outlineFixture = createComponent(MatInputWithAppearanceAndLabel);\n\n    outlineFixture.componentInstance.appearance = 'outline';\n    outlineFixture.detectChanges();\n    flush();\n    outlineFixture.detectChanges();\n\n    spyOn(outlineFixture.componentInstance.formField, 'updateOutlineGap');\n\n    outlineFixture.componentInstance.showPrefix = true;\n    outlineFixture.detectChanges();\n    flush();\n    outlineFixture.detectChanges();\n\n    expect(outlineFixture.componentInstance.formField.updateOutlineGap).toHaveBeenCalled();\n  }));\n\n  it('should calculate the outline gaps if the element starts off invisible', fakeAsync(() => {\n    fixture.destroy();\n    TestBed.resetTestingModule();\n\n    let zone: MockNgZone;\n    const invisibleFixture = createComponent(MatInputWithOutlineInsideInvisibleElement, [{\n      provide: NgZone,\n      useFactory: () => zone = new MockNgZone()\n    }]);\n\n    invisibleFixture.detectChanges();\n    zone!.simulateZoneExit();\n    flush();\n    invisibleFixture.detectChanges();\n\n    const wrapperElement = invisibleFixture.nativeElement;\n    const formField = wrapperElement.querySelector('.mat-form-field');\n    const outlineStart = wrapperElement.querySelector('.mat-form-field-outline-start');\n    const outlineGap = wrapperElement.querySelector('.mat-form-field-outline-gap');\n\n    formField.style.display = '';\n    invisibleFixture.detectChanges();\n    zone!.simulateZoneExit();\n    flush();\n    invisibleFixture.detectChanges();\n\n    expect(parseInt(outlineStart.style.width)).toBeGreaterThan(0);\n    expect(parseInt(outlineGap.style.width)).toBeGreaterThan(0);\n  }));\n\n  it('should update the outline gap if the direction changes', fakeAsync(() => {\n    fixture.destroy();\n    TestBed.resetTestingModule();\n\n    const fakeDirectionality = {change: new Subject<Direction>(), value: 'ltr'};\n    const outlineFixture = createComponent(MatInputWithAppearanceAndLabel, [{\n      provide: Directionality,\n      useValue: fakeDirectionality\n    }]);\n\n    outlineFixture.componentInstance.appearance = 'outline';\n    outlineFixture.detectChanges();\n    flush();\n    outlineFixture.detectChanges();\n\n    spyOn(outlineFixture.componentInstance.formField, 'updateOutlineGap');\n\n    fakeDirectionality.value = 'rtl';\n    fakeDirectionality.change.next('rtl');\n    outlineFixture.detectChanges();\n    flush();\n    outlineFixture.detectChanges();\n\n    expect(outlineFixture.componentInstance.formField.updateOutlineGap).toHaveBeenCalled();\n  }));\n\n\n\n});\n\ndescribe('MatFormField default options', () => {\n  it('should be legacy appearance if no default options provided', fakeAsync(() => {\n    const fixture = createComponent(MatInputWithAppearance);\n    fixture.detectChanges();\n    flush();\n    expect(fixture.componentInstance.formField.appearance).toBe('legacy');\n  }));\n\n  it('should be legacy appearance if empty default options provided', fakeAsync(() => {\n    const fixture = createComponent(MatInputWithAppearance, [{\n      provide: MAT_FORM_FIELD_DEFAULT_OPTIONS, useValue: {}}\n    ]);\n\n    fixture.detectChanges();\n    flush();\n    expect(fixture.componentInstance.formField.appearance).toBe('legacy');\n  }));\n\n  it('should be custom default appearance if custom appearance specified in default options',\n      fakeAsync(() => {\n        const fixture = createComponent(MatInputWithAppearance, [{\n          provide: MAT_FORM_FIELD_DEFAULT_OPTIONS, useValue: {appearance: 'fill'}}\n        ]);\n        fixture.detectChanges();\n        flush();\n        expect(fixture.componentInstance.formField.appearance).toBe('fill');\n      }));\n});\n\ndescribe('MatInput with textarea autosize', () => {\n  it('should not calculate wrong content height due to long placeholders', () => {\n    const fixture = createComponent(AutosizeTextareaWithLongPlaceholder);\n    fixture.detectChanges();\n\n    const textarea = fixture.nativeElement.querySelector('textarea');\n    const autosize = fixture.componentInstance.autosize;\n\n    autosize.resizeToFitContent(true);\n\n    const heightWithLongPlaceholder = textarea.clientHeight;\n\n    fixture.componentInstance.placeholder = 'Short';\n    fixture.detectChanges();\n\n    autosize.resizeToFitContent(true);\n\n    expect(textarea.clientHeight).toBe(heightWithLongPlaceholder,\n        'Expected the textarea height to be the same with a long placeholder.');\n  });\n\n  it('should work in a tab', () => {\n    const fixture = createComponent(AutosizeTextareaInATab, [], [MatTabsModule]);\n    fixture.detectChanges();\n    const textarea = fixture.nativeElement.querySelector('textarea');\n    expect(textarea.getBoundingClientRect().height).toBeGreaterThan(1);\n  });\n\n  it('should work in a step', () => {\n    const fixture = createComponent(AutosizeTextareaInAStep, [], [MatStepperModule]);\n    fixture.detectChanges();\n    const textarea = fixture.nativeElement.querySelector('textarea');\n    expect(textarea.getBoundingClientRect().height).toBeGreaterThan(1);\n  });\n});\n\n\nfunction createComponent<T>(component: Type<T>,\n                            providers: Provider[] = [],\n                            imports: any[] = [],\n                            declarations: any[] = []): ComponentFixture<T> {\n  TestBed.configureTestingModule({\n    imports: [\n      FormsModule,\n      MatFormFieldModule,\n      MatInputModule,\n      BrowserAnimationsModule,\n      PlatformModule,\n      ReactiveFormsModule,\n      ...imports\n    ],\n    declarations: [component, ...declarations],\n    providers,\n  }).compileComponents();\n\n  return TestBed.createComponent<T>(component);\n}\n\n\n@Component({\n  template: `\n    <mat-form-field>\n      <input matNativeControl id=\"test-id\" placeholder=\"test\">\n    </mat-form-field>`\n})\nclass MatInputWithId {}\n\n@Component({\n  template: `<mat-form-field><input matInput [disabled]=\"disabled\"></mat-form-field>`\n})\nclass MatInputWithDisabled {\n  disabled: boolean;\n}\n\n@Component({\n  template: `<mat-form-field><input matInput [required]=\"required\"></mat-form-field>`\n})\nclass MatInputWithRequired {\n  required: boolean;\n}\n\n@Component({\n  template: `<mat-form-field><input matInput [type]=\"type\"></mat-form-field>`\n})\nclass MatInputWithType {\n  type: string;\n}\n\n@Component({\n  template: `<mat-form-field [hideRequiredMarker]=\"hideRequiredMarker\">\n                <input matInput required [disabled]=\"disabled\" placeholder=\"hello\">\n             </mat-form-field>`\n})\nclass MatInputPlaceholderRequiredTestComponent {\n  hideRequiredMarker: boolean = false;\n  disabled: boolean = false;\n}\n\n@Component({\n  template: `\n    <mat-form-field>\n      <input matInput>\n      <mat-placeholder>{{placeholder}}</mat-placeholder>\n    </mat-form-field>`\n})\nclass MatInputPlaceholderElementTestComponent {\n  placeholder: string = 'Default Placeholder';\n}\n\n@Component({\n  template: `\n    <mat-form-field>\n      <input matInput placeholder=\"Hello\" [formControl]=\"formControl\">\n    </mat-form-field>`\n})\nclass MatInputWithFormControl {\n  formControl = new FormControl();\n}\n\n@Component({\n  template: `<mat-form-field><input matInput [placeholder]=\"placeholder\"></mat-form-field>`\n})\nclass MatInputPlaceholderAttrTestComponent {\n  placeholder: string = '';\n}\n\n@Component({\n  template: `<mat-form-field><input matInput><mat-hint>{{label}}</mat-hint></mat-form-field>`\n})\nclass MatInputHintLabel2TestController {\n  label: string = '';\n}\n\n@Component({\n  template: `<mat-form-field [hintLabel]=\"label\"><input matInput></mat-form-field>`\n})\nclass MatInputHintLabelTestController {\n  label: string = '';\n}\n\n@Component({\n  template: `<mat-form-field><input matInput type=\"file\"></mat-form-field>`\n})\nclass MatInputInvalidTypeTestController {}\n\n@Component({\n  template: `\n    <mat-form-field>\n      <input matInput placeholder=\"Hello\">\n      <mat-placeholder>World</mat-placeholder>\n    </mat-form-field>`\n})\nclass MatInputInvalidPlaceholderTestController {}\n\n@Component({\n  template: `\n    <mat-form-field hintLabel=\"Hello\">\n      <input matInput>\n      <mat-hint>World</mat-hint>\n    </mat-form-field>`\n})\nclass MatInputInvalidHint2TestController {}\n\n@Component({\n  template: `\n    <mat-form-field>\n      <input matInput>\n      <mat-hint>Hello</mat-hint>\n      <mat-hint>World</mat-hint>\n    </mat-form-field>`\n})\nclass MatInputInvalidHintTestController {}\n\n@Component({\n  template: `\n    <mat-form-field>\n      <input matInput>\n      <mat-hint align=\"start\" [id]=\"startId\">Hello</mat-hint>\n      <mat-hint align=\"end\" [id]=\"endId\">World</mat-hint>\n    </mat-form-field>`\n})\nclass MatInputMultipleHintTestController {\n  startId: string;\n  endId: string;\n}\n\n@Component({\n  template: `\n    <mat-form-field hintLabel=\"Hello\">\n      <input matInput>\n      <mat-hint align=\"end\">World</mat-hint>\n    </mat-form-field>`\n})\nclass MatInputMultipleHintMixedTestController {}\n\n@Component({\n  template: `\n    <mat-form-field>\n      <input matInput type=\"date\" placeholder=\"Placeholder\">\n    </mat-form-field>`\n})\nclass MatInputDateTestController {}\n\n@Component({\n  template: `\n    <mat-form-field>\n      <input matInput type=\"text\" placeholder=\"Placeholder\">\n    </mat-form-field>`\n})\nclass MatInputTextTestController {}\n\n@Component({\n  template: `\n    <mat-form-field>\n      <input matInput type=\"password\" placeholder=\"Placeholder\">\n    </mat-form-field>`\n})\nclass MatInputPasswordTestController {}\n\n@Component({\n  template: `\n    <mat-form-field>\n      <input matInput type=\"number\" placeholder=\"Placeholder\">\n    </mat-form-field>`\n})\nclass MatInputNumberTestController {}\n\n@Component({\n  template: `\n    <mat-form-field>\n      <input matInput type=\"number\" placeholder=\"Placeholder\" [(ngModel)]=\"value\">\n    </mat-form-field>`\n})\nclass MatInputZeroTestController {\n  value = 0;\n}\n\n@Component({\n  template: `\n    <mat-form-field>\n      <input matInput placeholder=\"Label\" [value]=\"value\">\n    </mat-form-field>`\n})\nclass MatInputWithValueBinding {\n  value: string = 'Initial';\n}\n\n@Component({\n  template: `\n    <mat-form-field floatLabel=\"never\">\n      <input matInput placeholder=\"Label\">\n    </mat-form-field>\n  `\n})\nclass MatInputWithStaticLabel {}\n\n@Component({\n  template: `\n    <mat-form-field [floatLabel]=\"shouldFloat\">\n      <input matInput placeholder=\"Label\">\n    </mat-form-field>`\n})\nclass MatInputWithDynamicLabel {\n  shouldFloat: string = 'always';\n}\n\n@Component({\n  template: `\n    <mat-form-field>\n      <textarea matNativeControl [rows]=\"rows\" [cols]=\"cols\" [wrap]=\"wrap\" placeholder=\"Snacks\">\n      </textarea>\n    </mat-form-field>`\n})\nclass MatInputTextareaWithBindings {\n  rows: number = 4;\n  cols: number = 8;\n  wrap: string = 'hard';\n}\n\n@Component({\n  template: `<mat-form-field><input></mat-form-field>`\n})\nclass MatInputMissingMatInputTestController {}\n\n@Component({\n  template: `\n    <form #form=\"ngForm\" novalidate>\n      <mat-form-field>\n        <input matInput [formControl]=\"formControl\">\n        <mat-hint>Please type something</mat-hint>\n        <mat-error *ngIf=\"renderError\">This field is required</mat-error>\n      </mat-form-field>\n    </form>\n  `\n})\nclass MatInputWithFormErrorMessages {\n  @ViewChild('form') form: NgForm;\n  formControl = new FormControl('', Validators.required);\n  renderError = true;\n}\n\n@Component({\n  template: `\n    <form [formGroup]=\"formGroup\">\n      <mat-form-field>\n        <input matInput\n            formControlName=\"name\"\n            [errorStateMatcher]=\"customErrorStateMatcher\">\n        <mat-hint>Please type something</mat-hint>\n        <mat-error>This field is required</mat-error>\n      </mat-form-field>\n    </form>\n  `\n})\nclass MatInputWithCustomErrorStateMatcher {\n  formGroup = new FormGroup({\n    name: new FormControl('', Validators.required)\n  });\n\n  errorState = false;\n\n  customErrorStateMatcher = {\n    isErrorState: () => this.errorState\n  };\n}\n\n@Component({\n  template: `\n    <form [formGroup]=\"formGroup\" novalidate>\n      <mat-form-field>\n        <input matInput formControlName=\"name\">\n        <mat-hint>Please type something</mat-hint>\n        <mat-error>This field is required</mat-error>\n      </mat-form-field>\n    </form>\n  `\n})\nclass MatInputWithFormGroupErrorMessages {\n  @ViewChild(FormGroupDirective) formGroupDirective: FormGroupDirective;\n  formGroup = new FormGroup({\n    name: new FormControl('', Validators.required)\n  });\n}\n\n@Component({\n  template: `\n    <mat-form-field>\n      <div matPrefix>Prefix</div>\n      <input matInput>\n      <div matSuffix>Suffix</div>\n    </mat-form-field>\n  `\n})\nclass MatInputWithPrefixAndSuffix {}\n\n@Component({\n  template: `\n    <mat-form-field>\n      <input matInput *ngIf=\"renderInput\">\n    </mat-form-field>\n  `\n})\nclass MatInputWithNgIf {\n  renderInput = true;\n}\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: `\n    <mat-form-field>\n      <input matInput placeholder=\"Label\" [formControl]=\"formControl\">\n    </mat-form-field>\n  `\n})\nclass MatInputOnPush {\n  formControl = new FormControl('');\n}\n\n@Component({\n  template: `\n    <mat-form-field>\n      <input matInput [readonly]=\"isReadonly\" value=\"Only for reading\">\n    </mat-form-field>\n  `\n})\nclass MatInputWithReadonlyInput {\n  isReadonly = true;\n}\n\n@Component({\n  template: `\n    <mat-form-field>\n      <mat-label>Label</mat-label>\n      <input matInput>\n    </mat-form-field>\n  `\n})\nclass MatInputWithLabel {}\n\n@Component({\n  template: `\n    <mat-form-field [floatLabel]=\"floatLabel\">\n      <mat-label>Label</mat-label>\n      <input matInput placeholder=\"Placeholder\">\n    </mat-form-field>\n  `\n})\nclass MatInputWithLabelAndPlaceholder {\n  floatLabel: FloatLabelType;\n}\n\n@Component({\n  template: `\n    <mat-form-field [appearance]=\"appearance\" floatLabel=\"never\">\n      <input matInput placeholder=\"Placeholder\">\n    </mat-form-field>\n  `\n})\nclass MatInputWithAppearance {\n  @ViewChild(MatFormField) formField: MatFormField;\n  appearance: MatFormFieldAppearance;\n}\n\n@Component({\n  template: `\n    <mat-form-field [appearance]=\"appearance\">\n      <span matPrefix *ngIf=\"showPrefix\">Somewhat long prefix</span>\n      <mat-label>{{labelContent}}</mat-label>\n      <input matInput>\n    </mat-form-field>\n  `\n})\nclass MatInputWithAppearanceAndLabel {\n  @ViewChild(MatFormField) formField: MatFormField;\n  appearance: MatFormFieldAppearance;\n  showPrefix: boolean;\n  labelContent = 'Label';\n}\n\n@Component({\n  template: `\n    <mat-form-field>\n      <input matInput>\n    </mat-form-field>\n  `\n})\nclass MatInputWithoutPlaceholder {\n}\n\n@Component({\n  template: `\n    <mat-form-field appearance=\"outline\" style=\"display: none;\">\n      <mat-label>Label</mat-label>\n      <input matInput>\n    </mat-form-field>\n  `\n})\nclass MatInputWithOutlineInsideInvisibleElement {}\n\n\n// Styles to reset padding and border to make measurement comparisons easier.\nconst textareaStyleReset = `\n    textarea {\n      padding: 0;\n      border: none;\n      overflow: auto;\n    }`;\n\n@Component({\n  template: `\n    <mat-form-field style=\"width: 100px\">\n      <textarea matInput matTextareaAutosize [placeholder]=\"placeholder\"></textarea>\n    </mat-form-field>`,\n  styles: [textareaStyleReset],\n})\nclass AutosizeTextareaWithLongPlaceholder {\n  placeholder = 'Long Long Long Long Long Long Long Long Placeholder';\n  @ViewChild(MatTextareaAutosize) autosize: MatTextareaAutosize;\n}\n\n@Component({\n  template: `\n    <mat-tab-group>\n      <mat-tab label=\"Tab 1\">\n        <mat-form-field>\n          <textarea matInput matTextareaAutosize>\n            Blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah\n          </textarea>\n        </mat-form-field>\n      </mat-tab>\n    </mat-tab-group>\n  `\n})\nclass AutosizeTextareaInATab {}\n\n@Component({\n  template: `\n    <mat-horizontal-stepper>\n      <mat-step label=\"Step 1\">\n        <mat-form-field>\n          <textarea matInput matTextareaAautosize>\n            Blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah\n          </textarea>\n        </mat-form-field>\n      </mat-step>\n    </mat-horizontal-stepper>\n  `\n})\nclass AutosizeTextareaInAStep {}\n\n@Component({\n  template: `\n    <mat-form-field>\n      <select matNativeControl id=\"test-id\" [disabled]=\"disabled\" [required]=\"required\">\n        <option value=\"volvo\">Volvo</option>\n        <option value=\"saab\">Saab</option>\n        <option value=\"mercedes\">Mercedes</option>\n        <option value=\"audi\">Audi</option>\n      </select>\n    </mat-form-field>`\n})\nclass MatInputSelect {\n  disabled: boolean;\n  required: boolean;\n}\n\n@Component({\n  template: `\n    <mat-form-field>\n      <select matNativeControl>\n        <option value=\"\" disabled selected></option>\n        <option value=\"saab\">Saab</option>\n        <option value=\"mercedes\">Mercedes</option>\n        <option value=\"audi\">Audi</option>\n      </select>\n    </mat-form-field>`\n})\nclass MatInputSelectWithNoLabelNoValue {}\n\n@Component({\n  template: `\n    <mat-form-field>\n      <select matNativeControl>\n        <option value=\"\" label=\"select a car\"></option>\n        <option value=\"saab\">Saab</option>\n        <option value=\"mercedes\">Mercedes</option>\n        <option value=\"audi\">Audi</option>\n      </select>\n    </mat-form-field>`\n})\nclass MatInputSelectWithLabel {}\n\n@Component({\n  template: `\n    <mat-form-field>\n      <select matNativeControl>\n        <option value=\"\">select a car</option>\n        <option value=\"saab\">Saab</option>\n        <option value=\"mercedes\">Mercedes</option>\n        <option value=\"audi\">Audi</option>\n      </select>\n    </mat-form-field>`\n})\nclass MatInputSelectWithInnerHtml {}\n\n@Component({\n  template: `\n    <mat-form-field floatLabel=\"never\">\n      <input matInput customInputAccessor placeholder=\"Placeholder\">\n    </mat-form-field>`\n})\nclass MatInputWithCustomAccessor {}\n\n@Component({\n  template: `\n    <mat-form-field>\n      <select matNativeControl>\n      </select>\n    </mat-form-field>`\n})\nclass MatInputSelectWithoutOptions {}\n\n\n/** Custom component that never has a value. Used for testing the `MAT_INPUT_VALUE_ACCESSOR`. */\n@Directive({\n  selector: 'input[customInputAccessor]',\n  providers: [{\n    provide: MAT_INPUT_VALUE_ACCESSOR,\n    useExisting: CustomMatInputAccessor\n  }]\n})\nclass CustomMatInputAccessor {\n  get value() { return this._value; }\n  set value(_value: any) {}\n  private _value = null;\n}\n"]}