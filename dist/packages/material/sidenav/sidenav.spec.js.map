{"version":3,"file":"sidenav.spec.js","sourceRoot":"","sources":["../../../../src/lib/sidenav/sidenav.spec.ts"],"names":[],"mappings":";;;;;;;;AAAA,sCAAwC;AACxC,iDAAuE;AACvE,iCAAqD;AACrD,mEAA0E;AAC1E,8DAA6C;AAG7C,QAAQ,CAAC,YAAY,EAAE;IACrB,IAAI,OAAmD,CAAC;IACxD,IAAI,SAAsB,CAAC;IAE3B,UAAU,CAAC,eAAK,CAAC;QACf,iBAAO,CAAC,sBAAsB,CAAC;YAC7B,OAAO,EAAE,CAAC,wBAAgB,EAAE,iCAAoB,CAAC;YACjD,YAAY,EAAE,CAAC,wBAAwB,CAAC;SACzC,CAAC,CAAC;QAEH,iBAAO,CAAC,iBAAiB,EAAE,CAAC;QAE5B,OAAO,GAAG,iBAAO,CAAC,eAAe,CAAC,wBAAwB,CAAC,CAAC;QAC5D,OAAO,CAAC,aAAa,EAAE,CAAC;QAExB,SAAS,GAAG,OAAO,CAAC,YAAY,CAAC,KAAK,CAAC,qBAAE,CAAC,SAAS,CAAC,kBAAU,CAAC,CAAC,CAAC,aAAa,CAAC;IACjF,CAAC,CAAC,CAAC,CAAC;IAEJ,EAAE,CAAC,6CAA6C,EAAE;QAChD,MAAM,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,mBAAmB,CAAC,CAAC;QAE3D,OAAO,CAAC,iBAAiB,CAAC,KAAK,GAAG,KAAK,CAAC;QACxC,OAAO,CAAC,aAAa,EAAE,CAAC;QAExB,MAAM,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,SAAS,CAAC,mBAAmB,CAAC,CAAC;IACjE,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,oDAAoD,EAAE;QACvD,MAAM,CAAC,SAAS,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QACzC,MAAM,CAAC,SAAS,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAE5C,OAAO,CAAC,iBAAiB,CAAC,KAAK,GAAG,KAAK,CAAC;QACxC,OAAO,CAAC,aAAa,EAAE,CAAC;QAExB,MAAM,CAAC,SAAS,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,SAAS,EAAE,CAAC;QACxC,MAAM,CAAC,SAAS,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,SAAS,EAAE,CAAC;IAC7C,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAkBH;IAfA;QAgBE,UAAK,GAAG,IAAI,CAAC;QACb,aAAQ,GAAG,EAAE,CAAC;QACd,gBAAW,GAAG,EAAE,CAAC;IACnB,CAAC;IAJK,wBAAwB;QAf7B,gBAAS,CAAC;YACT,QAAQ,EAAE,uVAYiB;SAC5B,CAAC;OACI,wBAAwB,CAI7B;IAAD,+BAAC;CAAA,AAJD,IAIC","sourcesContent":["import {Component} from '@angular/core';\nimport {async, TestBed, ComponentFixture} from '@angular/core/testing';\nimport {MatSidenav, MatSidenavModule} from './index';\nimport {NoopAnimationsModule} from '@angular/platform-browser/animations';\nimport {By} from '@angular/platform-browser';\n\n\ndescribe('MatSidenav', () => {\n  let fixture: ComponentFixture<SidenavWithFixedPosition>;\n  let sidenavEl: HTMLElement;\n\n  beforeEach(async(() => {\n    TestBed.configureTestingModule({\n      imports: [MatSidenavModule, NoopAnimationsModule],\n      declarations: [SidenavWithFixedPosition],\n    });\n\n    TestBed.compileComponents();\n\n    fixture = TestBed.createComponent(SidenavWithFixedPosition);\n    fixture.detectChanges();\n\n    sidenavEl = fixture.debugElement.query(By.directive(MatSidenav)).nativeElement;\n  }));\n\n  it('should be fixed position when in fixed mode', () => {\n    expect(sidenavEl.classList).toContain('mat-sidenav-fixed');\n\n    fixture.componentInstance.fixed = false;\n    fixture.detectChanges();\n\n    expect(sidenavEl.classList).not.toContain('mat-sidenav-fixed');\n  });\n\n  it('should set fixed bottom and top when in fixed mode', () => {\n    expect(sidenavEl.style.top).toBe('20px');\n    expect(sidenavEl.style.bottom).toBe('30px');\n\n    fixture.componentInstance.fixed = false;\n    fixture.detectChanges();\n\n    expect(sidenavEl.style.top).toBeFalsy();\n    expect(sidenavEl.style.bottom).toBeFalsy();\n  });\n});\n\n\n@Component({\n  template: `\n    <mat-sidenav-container>\n      <mat-sidenav\n          #drawer\n          [fixedInViewport]=\"fixed\"\n          [fixedTopGap]=\"fixedTop\"\n          [fixedBottomGap]=\"fixedBottom\">\n        Drawer.\n      </mat-sidenav>\n      <mat-sidenav-content>\n        Some content.\n      </mat-sidenav-content>\n    </mat-sidenav-container>`,\n})\nclass SidenavWithFixedPosition {\n  fixed = true;\n  fixedTop = 20;\n  fixedBottom = 30;\n}\n"]}