{"version":3,"file":"drawer.spec.js","sourceRoot":"","sources":["../../../../src/lib/sidenav/drawer.spec.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  fakeAsync,\n  async,\n  tick,\n  ComponentFixture,\n  TestBed,\n  discardPeriodicTasks,\n  flush,\n} from '@angular/core/testing';\nimport {Component, ElementRef, ViewChild} from '@angular/core';\nimport {By} from '@angular/platform-browser';\nimport {BrowserAnimationsModule, NoopAnimationsModule} from '@angular/platform-browser/animations';\nimport {MatDrawer, MatSidenavModule, MatDrawerContainer} from './index';\nimport {Direction} from '@angular/cdk/bidi';\nimport {A11yModule} from '@angular/cdk/a11y';\nimport {PlatformModule} from '@angular/cdk/platform';\nimport {ESCAPE} from '@angular/cdk/keycodes';\nimport {dispatchKeyboardEvent} from '@angular/cdk/testing';\nimport {CdkScrollable} from '@angular/cdk/scrolling';\n\n\ndescribe('MatDrawer', () => {\n  beforeEach(async(() => {\n    TestBed.configureTestingModule({\n      imports: [MatSidenavModule, A11yModule, PlatformModule, NoopAnimationsModule],\n      declarations: [\n        BasicTestApp,\n        DrawerContainerNoDrawerTestApp,\n        DrawerSetToOpenedFalse,\n        DrawerSetToOpenedTrue,\n        DrawerDynamicPosition,\n        DrawerWithFocusableElements,\n        DrawerOpenBinding,\n        DrawerWithoutFocusableElements,\n      ],\n    });\n\n    TestBed.compileComponents();\n  }));\n\n  describe('methods', () => {\n    it('should be able to open', fakeAsync(() => {\n      const fixture = TestBed.createComponent(BasicTestApp);\n\n      fixture.detectChanges();\n\n      const testComponent: BasicTestApp = fixture.debugElement.componentInstance;\n      const drawer = fixture.debugElement.query(By.directive(MatDrawer));\n      const drawerBackdropElement = fixture.debugElement.query(By.css('.mat-drawer-backdrop'));\n\n      drawerBackdropElement.nativeElement.style.transition = 'none';\n      fixture.debugElement.query(By.css('.open')).nativeElement.click();\n      fixture.detectChanges();\n\n      expect(testComponent.openCount).toBe(0);\n      expect(testComponent.openStartCount).toBe(0);\n\n      tick();\n      expect(testComponent.openStartCount).toBe(1);\n      fixture.detectChanges();\n\n      expect(testComponent.openCount).toBe(1);\n      expect(testComponent.openStartCount).toBe(1);\n      expect(getComputedStyle(drawer.nativeElement).visibility).toBe('visible');\n      expect(getComputedStyle(drawerBackdropElement.nativeElement).visibility).toBe('visible');\n    }));\n\n    it('should be able to close', fakeAsync(() => {\n      const fixture = TestBed.createComponent(BasicTestApp);\n\n      fixture.detectChanges();\n\n      const testComponent: BasicTestApp = fixture.debugElement.componentInstance;\n      const drawer = fixture.debugElement.query(By.directive(MatDrawer));\n      const drawerBackdropElement = fixture.debugElement.query(By.css('.mat-drawer-backdrop'));\n\n      drawerBackdropElement.nativeElement.style.transition = 'none';\n      fixture.debugElement.query(By.css('.open')).nativeElement.click();\n      fixture.detectChanges();\n      flush();\n      fixture.detectChanges();\n\n      fixture.debugElement.query(By.css('.close')).nativeElement.click();\n      fixture.detectChanges();\n\n      expect(testComponent.closeCount).toBe(0);\n      expect(testComponent.closeStartCount).toBe(0);\n\n      flush();\n      expect(testComponent.closeStartCount).toBe(1);\n      fixture.detectChanges();\n\n      expect(testComponent.closeCount).toBe(1);\n      expect(testComponent.closeStartCount).toBe(1);\n      expect(getComputedStyle(drawer.nativeElement).visibility).toBe('hidden');\n      expect(getComputedStyle(drawerBackdropElement.nativeElement).visibility).toBe('hidden');\n    }));\n\n    it('should resolve the open method promise with the new state of the drawer', fakeAsync(() => {\n      const fixture = TestBed.createComponent(BasicTestApp);\n      fixture.detectChanges();\n      const drawer: MatDrawer =\n          fixture.debugElement.query(By.directive(MatDrawer)).componentInstance;\n\n      drawer.open().then(result => expect(result).toBe('open'));\n      fixture.detectChanges();\n      tick();\n      fixture.detectChanges();\n    }));\n\n    it('should resolve the close method promise with the new state of the drawer', fakeAsync(() => {\n      const fixture = TestBed.createComponent(BasicTestApp);\n      fixture.detectChanges();\n      const drawer = fixture.debugElement.query(By.directive(MatDrawer));\n      const drawerInstance: MatDrawer = drawer.componentInstance;\n\n      drawerInstance.open();\n      fixture.detectChanges();\n      flush();\n      fixture.detectChanges();\n\n      drawerInstance.close().then(result => expect(result).toBe('close'));\n      fixture.detectChanges();\n      flush();\n      fixture.detectChanges();\n    }));\n\n    it('should be able to close while the open animation is running', fakeAsync(() => {\n      const fixture = TestBed.createComponent(BasicTestApp);\n      fixture.detectChanges();\n\n      const testComponent: BasicTestApp = fixture.debugElement.componentInstance;\n      fixture.debugElement.query(By.css('.open')).nativeElement.click();\n      fixture.detectChanges();\n\n      expect(testComponent.openCount).toBe(0);\n      expect(testComponent.closeCount).toBe(0);\n\n      tick();\n      fixture.debugElement.query(By.css('.close')).nativeElement.click();\n      fixture.detectChanges();\n\n      flush();\n      fixture.detectChanges();\n\n      expect(testComponent.openCount).toBe(1);\n      expect(testComponent.closeCount).toBe(1);\n    }));\n\n    it('does not throw when created without a drawer', fakeAsync(() => {\n      expect(() => {\n        let fixture = TestBed.createComponent(BasicTestApp);\n        fixture.detectChanges();\n        tick();\n      }).not.toThrow();\n    }));\n\n    it('should emit the backdropClick event when the backdrop is clicked', fakeAsync(() => {\n      let fixture = TestBed.createComponent(BasicTestApp);\n      fixture.detectChanges();\n\n      let testComponent: BasicTestApp = fixture.debugElement.componentInstance;\n      let openButtonElement = fixture.debugElement.query(By.css('.open')).nativeElement;\n\n      openButtonElement.click();\n      fixture.detectChanges();\n      flush();\n\n      expect(testComponent.backdropClickedCount).toBe(0);\n\n      fixture.debugElement.query(By.css('.mat-drawer-backdrop')).nativeElement.click();\n      fixture.detectChanges();\n      flush();\n\n      expect(testComponent.backdropClickedCount).toBe(1);\n\n      openButtonElement.click();\n      fixture.detectChanges();\n      flush();\n\n      fixture.debugElement.query(By.css('.close')).nativeElement.click();\n      fixture.detectChanges();\n      flush();\n\n      expect(testComponent.backdropClickedCount).toBe(1);\n    }));\n\n    it('should close when pressing escape', fakeAsync(() => {\n      let fixture = TestBed.createComponent(BasicTestApp);\n\n      fixture.detectChanges();\n\n      let testComponent: BasicTestApp = fixture.debugElement.componentInstance;\n      let drawer = fixture.debugElement.query(By.directive(MatDrawer));\n\n      drawer.componentInstance.open();\n      fixture.detectChanges();\n      tick();\n\n      expect(testComponent.openCount).toBe(1, 'Expected one open event.');\n      expect(testComponent.openStartCount).toBe(1, 'Expected one open start event.');\n      expect(testComponent.closeCount).toBe(0, 'Expected no close events.');\n      expect(testComponent.closeStartCount).toBe(0, 'Expected no close start events.');\n\n      dispatchKeyboardEvent(drawer.nativeElement, 'keydown', ESCAPE);\n      fixture.detectChanges();\n      flush();\n\n      expect(testComponent.closeCount).toBe(1, 'Expected one close event.');\n      expect(testComponent.closeStartCount).toBe(1, 'Expected one close start event.');\n    }));\n\n    it('should fire the open event when open on init', fakeAsync(() => {\n      let fixture = TestBed.createComponent(DrawerSetToOpenedTrue);\n\n      fixture.detectChanges();\n      tick();\n\n      expect(fixture.componentInstance.openCallback).toHaveBeenCalledTimes(1);\n    }));\n\n    it('should not close by pressing escape when disableClose is set', fakeAsync(() => {\n      let fixture = TestBed.createComponent(BasicTestApp);\n      let testComponent = fixture.debugElement.componentInstance;\n      let drawer = fixture.debugElement.query(By.directive(MatDrawer));\n\n      drawer.componentInstance.disableClose = true;\n      drawer.componentInstance.open();\n      fixture.detectChanges();\n      tick();\n\n      dispatchKeyboardEvent(drawer.nativeElement, 'keydown', ESCAPE);\n      fixture.detectChanges();\n      tick();\n\n      expect(testComponent.closeCount).toBe(0);\n      expect(testComponent.closeStartCount).toBe(0);\n    }));\n\n    it('should not close by clicking on the backdrop when disableClose is set', fakeAsync(() => {\n      let fixture = TestBed.createComponent(BasicTestApp);\n      let testComponent = fixture.debugElement.componentInstance;\n      let drawer = fixture.debugElement.query(By.directive(MatDrawer)).componentInstance;\n\n      drawer.disableClose = true;\n      drawer.open();\n      fixture.detectChanges();\n      tick();\n\n      fixture.debugElement.query(By.css('.mat-drawer-backdrop')).nativeElement.click();\n      fixture.detectChanges();\n      tick();\n\n      expect(testComponent.closeCount).toBe(0);\n      expect(testComponent.closeStartCount).toBe(0);\n    }));\n\n    it('should restore focus on close if focus is inside drawer', fakeAsync(() => {\n      let fixture = TestBed.createComponent(BasicTestApp);\n\n      fixture.detectChanges();\n\n      let drawer = fixture.debugElement.query(By.directive(MatDrawer)).componentInstance;\n      let openButton = fixture.componentInstance.openButton.nativeElement;\n      let drawerButton = fixture.componentInstance.drawerButton.nativeElement;\n\n      openButton.focus();\n      drawer.open();\n      fixture.detectChanges();\n      flush();\n      drawerButton.focus();\n\n      drawer.close();\n      fixture.detectChanges();\n      flush();\n\n      expect(document.activeElement)\n          .toBe(openButton, 'Expected focus to be restored to the open button on close.');\n    }));\n\n    it('should not restore focus on close if focus is outside drawer', fakeAsync(() => {\n      let fixture = TestBed.createComponent(BasicTestApp);\n      let drawer: MatDrawer = fixture.debugElement\n          .query(By.directive(MatDrawer)).componentInstance;\n      let openButton = fixture.componentInstance.openButton.nativeElement;\n      let closeButton = fixture.componentInstance.closeButton.nativeElement;\n\n      openButton.focus();\n      drawer.open();\n\n      fixture.detectChanges();\n      tick();\n      closeButton.focus();\n\n      drawer.close();\n      fixture.detectChanges();\n      tick();\n\n      expect(document.activeElement)\n          .toBe(closeButton, 'Expected focus not to be restored to the open button on close.');\n    }));\n  });\n\n  describe('attributes', () => {\n    it('should correctly parse opened=\"false\"', () => {\n      let fixture = TestBed.createComponent(DrawerSetToOpenedFalse);\n\n      fixture.detectChanges();\n\n      let drawer = fixture.debugElement.query(By.directive(MatDrawer)).componentInstance;\n\n      expect((drawer as MatDrawer).opened).toBe(false);\n    });\n\n    it('should correctly parse opened=\"true\"', () => {\n      let fixture = TestBed.createComponent(DrawerSetToOpenedTrue);\n\n      fixture.detectChanges();\n\n      let drawer = fixture.debugElement.query(By.directive(MatDrawer)).componentInstance;\n\n      expect((drawer as MatDrawer).opened).toBe(true);\n    });\n\n    it('should remove align attr from DOM', () => {\n      const fixture = TestBed.createComponent(BasicTestApp);\n      fixture.detectChanges();\n\n      const drawerEl = fixture.debugElement.query(By.css('mat-drawer')).nativeElement;\n      expect(drawerEl.hasAttribute('align'))\n          .toBe(false, 'Expected drawer not to have a native align attribute.');\n    });\n\n    it('should throw when multiple drawers have the same position', fakeAsync(() => {\n      const fixture = TestBed.createComponent(DrawerDynamicPosition);\n      fixture.detectChanges();\n      tick();\n\n      const testComponent: DrawerDynamicPosition = fixture.debugElement.componentInstance;\n      testComponent.drawer1Position = 'end';\n\n      expect(() => {\n        try {\n          fixture.detectChanges();\n          tick(0);\n        } catch {\n          tick(0);\n        }\n      }).toThrow();\n    }));\n\n    it('should not throw when drawers swap positions', () => {\n      const fixture = TestBed.createComponent(DrawerDynamicPosition);\n      fixture.detectChanges();\n\n      const testComponent: DrawerDynamicPosition = fixture.debugElement.componentInstance;\n      testComponent.drawer1Position = 'end';\n      testComponent.drawer2Position = 'start';\n\n      expect(() => fixture.detectChanges()).not.toThrow();\n    });\n\n    it('should bind 2-way bind on opened property', fakeAsync(() => {\n      const fixture = TestBed.createComponent(DrawerOpenBinding);\n      fixture.detectChanges();\n\n      let drawer: MatDrawer = fixture.debugElement\n          .query(By.directive(MatDrawer)).componentInstance;\n\n      drawer.open();\n      fixture.detectChanges();\n      tick();\n\n      expect(fixture.componentInstance.isOpen).toBe(true);\n    }));\n\n    it('should not throw when a two-way binding is toggled quickly while animating',\n      fakeAsync(() => {\n        TestBed\n          .resetTestingModule()\n          .configureTestingModule({\n            imports: [MatSidenavModule, BrowserAnimationsModule],\n            declarations: [DrawerOpenBinding],\n          })\n          .compileComponents();\n\n        const fixture = TestBed.createComponent(DrawerOpenBinding);\n        fixture.detectChanges();\n\n        // Note that we need actual timeouts and the `BrowserAnimationsModule`\n        // in order to test it correctly.\n        setTimeout(() => {\n          fixture.componentInstance.isOpen = !fixture.componentInstance.isOpen;\n          expect(() => fixture.detectChanges()).not.toThrow();\n\n          setTimeout(() => {\n            fixture.componentInstance.isOpen = !fixture.componentInstance.isOpen;\n            expect(() => fixture.detectChanges()).not.toThrow();\n          }, 1);\n\n          tick(1);\n        }, 1);\n\n        tick(1);\n      }));\n\n  });\n\n  describe('focus trapping behavior', () => {\n    let fixture: ComponentFixture<DrawerWithFocusableElements>;\n    let testComponent: DrawerWithFocusableElements;\n    let drawer: MatDrawer;\n    let firstFocusableElement: HTMLElement;\n    let lastFocusableElement: HTMLElement;\n\n    beforeEach(() => {\n      fixture = TestBed.createComponent(DrawerWithFocusableElements);\n      fixture.detectChanges();\n      testComponent = fixture.debugElement.componentInstance;\n      drawer = fixture.debugElement.query(By.directive(MatDrawer)).componentInstance;\n      firstFocusableElement = fixture.debugElement.query(By.css('.input1')).nativeElement;\n      lastFocusableElement = fixture.debugElement.query(By.css('.input2')).nativeElement;\n      lastFocusableElement.focus();\n    });\n\n    it('should trap focus when opened in \"over\" mode', fakeAsync(() => {\n      testComponent.mode = 'over';\n      fixture.detectChanges();\n      lastFocusableElement.focus();\n\n      drawer.open();\n      fixture.detectChanges();\n      tick();\n\n      expect(document.activeElement).toBe(firstFocusableElement);\n    }));\n\n    it('should trap focus when opened in \"push\" mode', fakeAsync(() => {\n      testComponent.mode = 'push';\n      fixture.detectChanges();\n      lastFocusableElement.focus();\n\n      drawer.open();\n      fixture.detectChanges();\n      tick();\n\n      expect(document.activeElement).toBe(firstFocusableElement);\n    }));\n\n    it('should not trap focus when opened in \"side\" mode', fakeAsync(() => {\n      testComponent.mode = 'side';\n      fixture.detectChanges();\n      lastFocusableElement.focus();\n\n      drawer.open();\n      fixture.detectChanges();\n      tick();\n\n      expect(document.activeElement).toBe(lastFocusableElement);\n    }));\n\n    it('should focus the drawer if there are no focusable elements', fakeAsync(() => {\n      fixture.destroy();\n\n      const nonFocusableFixture = TestBed.createComponent(DrawerWithoutFocusableElements);\n      const drawerEl = nonFocusableFixture.debugElement.query(By.directive(MatDrawer));\n      nonFocusableFixture.detectChanges();\n\n      drawerEl.componentInstance.open();\n      nonFocusableFixture.detectChanges();\n      tick();\n\n      expect(document.activeElement).toBe(drawerEl.nativeElement);\n    }));\n\n    it('should be able to disable auto focus', fakeAsync(() => {\n      testComponent.autoFocus = false;\n      testComponent.mode = 'push';\n      fixture.detectChanges();\n      lastFocusableElement.focus();\n\n      drawer.open();\n      fixture.detectChanges();\n      tick();\n\n      expect(document.activeElement).not.toBe(firstFocusableElement);\n    }));\n\n  });\n});\n\ndescribe('MatDrawerContainer', () => {\n  beforeEach(async(() => {\n    TestBed.configureTestingModule({\n      imports: [MatSidenavModule, A11yModule, PlatformModule, NoopAnimationsModule],\n      declarations: [\n        DrawerContainerTwoDrawerTestApp,\n        DrawerDelayed,\n        DrawerSetToOpenedTrue,\n        DrawerContainerStateChangesTestApp,\n        AutosizeDrawer,\n        BasicTestApp,\n        DrawerContainerWithContent,\n      ],\n    });\n\n    TestBed.compileComponents();\n  }));\n\n  it('should be able to open and close all drawers', fakeAsync(() => {\n    const fixture = TestBed.createComponent(DrawerContainerTwoDrawerTestApp);\n\n    fixture.detectChanges();\n\n    const testComponent: DrawerContainerTwoDrawerTestApp =\n      fixture.debugElement.componentInstance;\n    const drawers = fixture.debugElement.queryAll(By.directive(MatDrawer));\n\n    expect(drawers.every(drawer => drawer.componentInstance.opened)).toBe(false);\n\n    testComponent.drawerContainer.open();\n    fixture.detectChanges();\n    tick();\n\n    expect(drawers.every(drawer => drawer.componentInstance.opened)).toBe(true);\n\n    testComponent.drawerContainer.close();\n    fixture.detectChanges();\n    flush();\n\n    expect(drawers.every(drawer => drawer.componentInstance.opened)).toBe(false);\n  }));\n\n  it('should animate the content when a drawer is added at a later point', fakeAsync(() => {\n    const fixture = TestBed.createComponent(DrawerDelayed);\n\n    fixture.detectChanges();\n\n    const contentElement = fixture.debugElement.nativeElement.querySelector('.mat-drawer-content');\n\n    expect(parseInt(contentElement.style.marginLeft)).toBeFalsy();\n\n    fixture.componentInstance.showDrawer = true;\n    fixture.detectChanges();\n\n    fixture.componentInstance.drawer.open();\n    fixture.detectChanges();\n    tick();\n    fixture.detectChanges();\n\n    expect(parseInt(contentElement.style.marginLeft)).toBeGreaterThan(0);\n  }));\n\n  it('should recalculate the margin if a drawer is destroyed', fakeAsync(() => {\n    const fixture = TestBed.createComponent(DrawerContainerStateChangesTestApp);\n\n    fixture.detectChanges();\n    fixture.componentInstance.drawer.open();\n    fixture.detectChanges();\n    tick();\n    fixture.detectChanges();\n\n    const contentElement = fixture.debugElement.nativeElement.querySelector('.mat-drawer-content');\n    const initialMargin = parseInt(contentElement.style.marginLeft);\n\n    expect(initialMargin).toBeGreaterThan(0);\n\n    fixture.componentInstance.renderDrawer = false;\n    fixture.detectChanges();\n    tick();\n\n    expect(contentElement.style.marginLeft).toBe('');\n  }));\n\n  it('should recalculate the margin if the drawer mode is changed', fakeAsync(() => {\n    const fixture = TestBed.createComponent(DrawerContainerStateChangesTestApp);\n\n    fixture.detectChanges();\n    fixture.componentInstance.drawer.open();\n    fixture.detectChanges();\n    tick();\n    fixture.detectChanges();\n\n    const contentElement = fixture.debugElement.nativeElement.querySelector('.mat-drawer-content');\n    const initialMargin = parseInt(contentElement.style.marginLeft);\n\n    expect(initialMargin).toBeGreaterThan(0);\n\n    fixture.componentInstance.mode = 'over';\n    fixture.detectChanges();\n\n    expect(contentElement.style.marginLeft).toBe('');\n  }));\n\n  it('should recalculate the margin if the direction has changed', fakeAsync(() => {\n    const fixture = TestBed.createComponent(DrawerContainerStateChangesTestApp);\n\n    fixture.detectChanges();\n    fixture.componentInstance.drawer.open();\n    fixture.detectChanges();\n    tick();\n    fixture.detectChanges();\n\n    const contentElement = fixture.debugElement.nativeElement.querySelector('.mat-drawer-content');\n    const margin = parseInt(contentElement.style.marginLeft);\n\n    expect(margin).toBeGreaterThan(0);\n\n    fixture.componentInstance.direction = 'rtl';\n    fixture.detectChanges();\n\n    expect(contentElement.style.marginLeft).toBe('');\n    expect(parseInt(contentElement.style.marginRight)).toBe(margin);\n  }));\n\n  it('should not animate when the sidenav is open on load ', fakeAsync(() => {\n    TestBed\n      .resetTestingModule()\n      .configureTestingModule({\n        imports: [MatSidenavModule, BrowserAnimationsModule],\n        declarations: [DrawerSetToOpenedTrue],\n      })\n      .compileComponents();\n\n    const fixture = TestBed.createComponent(DrawerSetToOpenedTrue);\n\n    fixture.detectChanges();\n    tick();\n\n    const container = fixture.debugElement.nativeElement.querySelector('.mat-drawer-container');\n\n    expect(container.classList).not.toContain('mat-drawer-transition');\n  }));\n\n  it('should recalculate the margin if a drawer changes size while open in autosize mode',\n    fakeAsync(() => {\n      const fixture = TestBed.createComponent(AutosizeDrawer);\n\n      fixture.detectChanges();\n      fixture.componentInstance.drawer.open();\n      fixture.detectChanges();\n      tick();\n      fixture.detectChanges();\n\n      const contentEl = fixture.debugElement.nativeElement.querySelector('.mat-drawer-content');\n      const initialMargin = parseInt(contentEl.style.marginLeft);\n\n      expect(initialMargin).toBeGreaterThan(0);\n\n      fixture.componentInstance.fillerWidth = 200;\n      fixture.detectChanges();\n      tick(10);\n      fixture.detectChanges();\n\n      expect(parseInt(contentEl.style.marginLeft)).toBeGreaterThan(initialMargin);\n      discardPeriodicTasks();\n    }));\n\n  it('should not set a style property if it would be zero', fakeAsync(() => {\n      const fixture = TestBed.createComponent(AutosizeDrawer);\n      fixture.detectChanges();\n\n      const content = fixture.debugElement.nativeElement.querySelector('.mat-drawer-content');\n      expect(content.style.marginLeft).toBe('', 'Margin should be omitted when drawer is closed');\n\n      // Open the drawer and resolve the open animation.\n      fixture.componentInstance.drawer.open();\n      fixture.detectChanges();\n      tick();\n      fixture.detectChanges();\n\n      expect(content.style.marginLeft).not.toBe('', 'Margin should be present when drawer is open');\n\n      // Close the drawer and resolve the close animation.\n      fixture.componentInstance.drawer.close();\n      fixture.detectChanges();\n      flush();\n      fixture.detectChanges();\n\n      expect(content.style.marginLeft).toBe('', 'Margin should be removed after drawer close.');\n\n      discardPeriodicTasks();\n    }));\n\n    it('should be able to toggle whether the container has a backdrop', fakeAsync(() => {\n      const fixture = TestBed.createComponent(BasicTestApp);\n      fixture.detectChanges();\n\n      expect(fixture.nativeElement.querySelector('.mat-drawer-backdrop')).toBeTruthy();\n\n      fixture.componentInstance.hasBackdrop = false;\n      fixture.detectChanges();\n\n      expect(fixture.nativeElement.querySelector('.mat-drawer-backdrop')).toBeFalsy();\n    }));\n\n    it('should be able to explicitly enable the backdrop in `side` mode', fakeAsync(() => {\n      const fixture = TestBed.createComponent(BasicTestApp);\n      const root = fixture.nativeElement;\n\n      fixture.componentInstance.drawer.mode = 'side';\n      fixture.detectChanges();\n      fixture.componentInstance.drawer.open();\n      fixture.detectChanges();\n      tick();\n      fixture.detectChanges();\n\n      let backdrop = root.querySelector('.mat-drawer-backdrop.mat-drawer-shown');\n\n      expect(backdrop).toBeFalsy();\n\n      fixture.componentInstance.hasBackdrop = true;\n      fixture.detectChanges();\n      backdrop = root.querySelector('.mat-drawer-backdrop.mat-drawer-shown');\n\n      expect(backdrop).toBeTruthy();\n      expect(fixture.componentInstance.drawer.opened).toBe(true);\n\n      backdrop.click();\n      fixture.detectChanges();\n      tick();\n\n      expect(fixture.componentInstance.drawer.opened).toBe(false);\n    }));\n\n    it('should expose a scrollable when the consumer has not specified drawer content',\n      fakeAsync(() => {\n        const fixture = TestBed.createComponent(DrawerContainerTwoDrawerTestApp);\n\n        fixture.detectChanges();\n\n        expect(fixture.componentInstance.drawerContainer.scrollable instanceof CdkScrollable)\n            .toBe(true);\n      }));\n\n    it('should expose a scrollable when the consumer has specified drawer content',\n      fakeAsync(() => {\n        const fixture = TestBed.createComponent(DrawerContainerWithContent);\n\n        fixture.detectChanges();\n\n        expect(fixture.componentInstance.drawerContainer.scrollable instanceof CdkScrollable)\n            .toBe(true);\n      }));\n\n\n});\n\n\n/** Test component that contains an MatDrawerContainer but no MatDrawer. */\n@Component({template: `<mat-drawer-container></mat-drawer-container>`})\nclass DrawerContainerNoDrawerTestApp { }\n\n/** Test component that contains an MatDrawerContainer and 2 MatDrawer in the same position. */\n@Component({\n  template: `\n    <mat-drawer-container>\n      <mat-drawer position=\"start\"></mat-drawer>\n      <mat-drawer position=\"end\"></mat-drawer>\n    </mat-drawer-container>`,\n})\nclass DrawerContainerTwoDrawerTestApp {\n  @ViewChild(MatDrawerContainer) drawerContainer: MatDrawerContainer;\n}\n\n/** Test component that contains an MatDrawerContainer and one MatDrawer. */\n@Component({\n  template: `\n    <mat-drawer-container (backdropClick)=\"backdropClicked()\" [hasBackdrop]=\"hasBackdrop\">\n      <mat-drawer #drawer=\"matDrawer\" position=\"start\"\n                 (opened)=\"open()\"\n                 (openedStart)=\"openStart()\"\n                 (closed)=\"close()\"\n                 (closedStart)=\"closeStart()\">\n        <button #drawerButton>Content</button>\n      </mat-drawer>\n      <button (click)=\"drawer.open()\" class=\"open\" #openButton></button>\n      <button (click)=\"drawer.close()\" class=\"close\" #closeButton></button>\n    </mat-drawer-container>`,\n})\nclass BasicTestApp {\n  openCount = 0;\n  openStartCount = 0;\n  closeCount = 0;\n  closeStartCount = 0;\n  backdropClickedCount = 0;\n  hasBackdrop: boolean | null = null;\n\n  @ViewChild('drawer') drawer: MatDrawer;\n  @ViewChild('drawerButton') drawerButton: ElementRef<HTMLButtonElement>;\n  @ViewChild('openButton') openButton: ElementRef<HTMLButtonElement>;\n  @ViewChild('closeButton') closeButton: ElementRef<HTMLButtonElement>;\n\n  open() {\n    this.openCount++;\n  }\n\n  openStart() {\n    this.openStartCount++;\n  }\n\n  close() {\n    this.closeCount++;\n  }\n\n  closeStart() {\n    this.closeStartCount++;\n  }\n\n  backdropClicked() {\n    this.backdropClickedCount++;\n  }\n}\n\n@Component({\n  template: `\n    <mat-drawer-container>\n      <mat-drawer #drawer mode=\"side\" opened=\"false\">\n        Closed Drawer.\n      </mat-drawer>\n    </mat-drawer-container>`,\n})\nclass DrawerSetToOpenedFalse { }\n\n@Component({\n  template: `\n    <mat-drawer-container>\n      <mat-drawer #drawer mode=\"side\" opened=\"true\" (opened)=\"openCallback()\">\n        Closed Drawer.\n      </mat-drawer>\n    </mat-drawer-container>`,\n})\nclass DrawerSetToOpenedTrue {\n  openCallback = jasmine.createSpy('open callback');\n}\n\n@Component({\n  template: `\n    <mat-drawer-container>\n      <mat-drawer #drawer mode=\"side\" [(opened)]=\"isOpen\">\n        Closed Drawer.\n      </mat-drawer>\n    </mat-drawer-container>`,\n})\nclass DrawerOpenBinding {\n  isOpen = false;\n}\n\n@Component({\n  template: `\n    <mat-drawer-container>\n      <mat-drawer #drawer1 [position]=\"drawer1Position\"></mat-drawer>\n      <mat-drawer #drawer2 [position]=\"drawer2Position\"></mat-drawer>\n    </mat-drawer-container>`,\n})\nclass DrawerDynamicPosition {\n  drawer1Position = 'start';\n  drawer2Position = 'end';\n}\n\n@Component({\n  // Note: we use inputs here, because they're guaranteed\n  // to be focusable across all platforms.\n  template: `\n    <mat-drawer-container>\n      <mat-drawer position=\"start\" [mode]=\"mode\" [autoFocus]=\"autoFocus\">\n        <input type=\"text\" class=\"input1\"/>\n      </mat-drawer>\n      <input type=\"text\" class=\"input2\"/>\n    </mat-drawer-container>`,\n})\nclass DrawerWithFocusableElements {\n  mode: string = 'over';\n  autoFocus = true;\n}\n\n@Component({\n  template: `\n    <mat-drawer-container>\n      <mat-drawer position=\"start\" mode=\"over\">\n        <button disabled>Not focusable</button>\n      </mat-drawer>\n    </mat-drawer-container>`,\n})\nclass DrawerWithoutFocusableElements {}\n\n@Component({\n  template: `\n    <mat-drawer-container>\n      <mat-drawer *ngIf=\"showDrawer\" #drawer mode=\"side\">Drawer</mat-drawer>\n    </mat-drawer-container>\n  `,\n})\nclass DrawerDelayed {\n  @ViewChild(MatDrawer) drawer: MatDrawer;\n  showDrawer = false;\n}\n\n\n@Component({\n  template: `\n    <mat-drawer-container [dir]=\"direction\">\n      <mat-drawer *ngIf=\"renderDrawer\" [mode]=\"mode\" style=\"width:100px\"></mat-drawer>\n    </mat-drawer-container>`,\n})\nclass DrawerContainerStateChangesTestApp {\n  @ViewChild(MatDrawer) drawer: MatDrawer;\n  @ViewChild(MatDrawerContainer) drawerContainer: MatDrawerContainer;\n\n  direction: Direction = 'ltr';\n  mode = 'side';\n  renderDrawer = true;\n}\n\n\n@Component({\n  template: `\n    <mat-drawer-container autosize>\n      <mat-drawer mode=\"push\" [position]=\"drawer1Position\">\n        Text\n        <div [style.width.px]=\"fillerWidth\"></div>\n      </mat-drawer>\n    </mat-drawer-container>`,\n})\nclass AutosizeDrawer {\n  @ViewChild(MatDrawer) drawer: MatDrawer;\n  fillerWidth = 0;\n}\n\n\n@Component({\n  template: `\n    <mat-drawer-container>\n      <mat-drawer>Drawer</mat-drawer>\n      <mat-drawer-content>Content</mat-drawer-content>\n    </mat-drawer-container>\n  `,\n})\nclass DrawerContainerWithContent {\n  @ViewChild(MatDrawerContainer) drawerContainer: MatDrawerContainer;\n}\n"]}