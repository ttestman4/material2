{"version":3,"file":"grid-list.spec.js","sourceRoot":"","sources":["../../../../src/lib/grid-list/grid-list.spec.ts"],"names":[],"mappings":"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","sourcesContent":["import {TestBed, ComponentFixture} from '@angular/core/testing';\nimport {Component, DebugElement, Type, ViewChild} from '@angular/core';\nimport {By} from '@angular/platform-browser';\nimport {MatGridList, MatGridListModule} from './index';\nimport {MatGridTile, MatGridTileText} from './grid-tile';\nimport {Directionality} from '@angular/cdk/bidi';\n\n\ndescribe('MatGridList', () => {\n  function createComponent<T>(componentType: Type<T>): ComponentFixture<T> {\n    TestBed.configureTestingModule({\n      imports: [MatGridListModule],\n      declarations: [componentType],\n    }).compileComponents();\n\n    return TestBed.createComponent<T>(componentType);\n  }\n\n  it('should throw error if cols is not defined', () => {\n    const fixture = createComponent(GridListWithoutCols);\n\n    expect(() => fixture.detectChanges()).toThrowError(/must pass in number of columns/);\n  });\n\n  it('should throw error if rowHeight ratio is invalid', () => {\n    const fixture = createComponent(GridListWithInvalidRowHeightRatio);\n\n    expect(() => fixture.detectChanges()).toThrowError(/invalid ratio given for row-height/);\n  });\n\n  it('should throw error if tile colspan is wider than total cols', () => {\n    const fixture = createComponent(GridListWithTooWideColspan);\n\n    expect(() => fixture.detectChanges()).toThrowError(/tile with colspan 5 is wider than grid/);\n  });\n\n  it('should not throw when setting the `rowHeight` programmatically before init', () => {\n    const fixture = createComponent(GridListWithUnspecifiedRowHeight);\n    const gridList = fixture.debugElement.query(By.directive(MatGridList));\n\n    expect(() => {\n      // Set the row height twice so the tile styler is initialized.\n      gridList.componentInstance.rowHeight = 12.3;\n      gridList.componentInstance.rowHeight = 32.1;\n      fixture.detectChanges();\n    }).not.toThrow();\n  });\n\n  it('should preserve value when zero is set as row height', () => {\n    const fixture = createComponent(GridListWithUnspecifiedRowHeight);\n    const gridList = fixture.debugElement.query(By.directive(MatGridList)).componentInstance;\n\n    gridList.rowHeight = 0;\n    expect(gridList.rowHeight).toBe('0');\n  });\n\n  it('should set the columns to zero if a negative number is passed in', () => {\n    const fixture = createComponent(GridListWithDynamicCols);\n    fixture.detectChanges();\n\n    expect(fixture.componentInstance.gridList.cols).toBe(2);\n\n    expect(() => {\n      fixture.componentInstance.cols = -2;\n      fixture.detectChanges();\n    }).not.toThrow();\n\n    expect(fixture.componentInstance.gridList.cols).toBe(1);\n  });\n\n  it('should default to 1:1 row height if undefined ', () => {\n    const fixture = createComponent(GridListWithUnspecifiedRowHeight);\n    fixture.detectChanges();\n    const tile = fixture.debugElement.query(By.directive(MatGridTile));\n\n    // In ratio mode, heights are set using the padding-top property.\n    expect(getStyle(tile, 'padding-top')).toBe('200px');\n  });\n\n  it('should use a ratio row height if passed in', () => {\n    const fixture = createComponent(GirdListWithRowHeightRatio);\n\n    fixture.componentInstance.rowHeight = '4:1';\n    fixture.detectChanges();\n\n    const tile = fixture.debugElement.query(By.directive(MatGridTile));\n    expect(getStyle(tile, 'padding-top')).toBe('100px');\n\n    fixture.componentInstance.rowHeight = '2:1';\n    fixture.detectChanges();\n\n    expect(getStyle(tile, 'padding-top')).toBe('200px');\n  });\n\n  it('should divide row height evenly in \"fit\" mode', () => {\n    const fixture = createComponent(GridListWithFitRowHeightMode);\n\n    fixture.componentInstance.totalHeight = '300px';\n    fixture.detectChanges();\n    const tile = fixture.debugElement.query(By.directive(MatGridTile));\n\n    // 149.5 * 2 = 299px + 1px gutter = 300px\n    expect(getStyle(tile, 'height')).toBe('149.5px');\n\n    fixture.componentInstance.totalHeight = '200px';\n    fixture.detectChanges();\n\n    // 99.5 * 2 = 199px + 1px gutter = 200px\n    expect(getStyle(tile, 'height')).toBe('99.5px');\n  });\n\n  it('should use the fixed row height if passed in', () => {\n    const fixture = createComponent(GridListWithFixedRowHeightMode);\n\n    fixture.componentInstance.rowHeight = '100px';\n    fixture.detectChanges();\n\n    const tile = fixture.debugElement.query(By.directive(MatGridTile));\n    expect(getStyle(tile, 'height')).toBe('100px');\n\n    fixture.componentInstance.rowHeight = '200px';\n    fixture.detectChanges();\n\n    expect(getStyle(tile, 'height')).toBe('200px');\n  });\n\n  it('should default to pixels if row height units are missing', () => {\n    const fixture = createComponent(GridListWithUnitlessFixedRowHeight);\n    fixture.detectChanges();\n\n    const tile = fixture.debugElement.query(By.directive(MatGridTile));\n    expect(getStyle(tile, 'height')).toBe('100px');\n  });\n\n  it('should default gutter size to 1px', () => {\n    const fixture = createComponent(GridListWithUnspecifiedGutterSize);\n    fixture.detectChanges();\n\n    const tiles = fixture.debugElement.queryAll(By.css('mat-grid-tile'));\n\n    // check horizontal gutter\n    expect(getStyle(tiles[0], 'width')).toBe('99.5px');\n    expect(getComputedLeft(tiles[1])).toBe(100.5);\n\n    // check vertical gutter\n    expect(getStyle(tiles[0], 'height')).toBe('100px');\n    expect(getStyle(tiles[2], 'top')).toBe('101px');\n  });\n\n  it('should be able to set the gutter size to zero', () => {\n    const fixture = createComponent(GridListWithUnspecifiedGutterSize);\n    const gridList = fixture.debugElement.query(By.directive(MatGridList));\n\n    gridList.componentInstance.gutterSize = 0;\n    fixture.detectChanges();\n\n    const tiles = fixture.debugElement.queryAll(By.css('mat-grid-tile'));\n\n    // check horizontal gutter\n    expect(getStyle(tiles[0], 'width')).toBe('100px');\n    expect(getComputedLeft(tiles[1])).toBe(100);\n\n    // check vertical gutter\n    expect(getStyle(tiles[0], 'height')).toBe('100px');\n    expect(getStyle(tiles[2], 'top')).toBe('100px');\n  });\n\n  it('should lay out the tiles correctly for a nested grid list', () => {\n    const fixture = createComponent(NestedGridList);\n    fixture.detectChanges();\n\n    const innerTiles = fixture.debugElement.queryAll(\n        By.css('mat-grid-tile mat-grid-list mat-grid-tile'));\n\n    expect(getStyle(innerTiles[0], 'top')).toBe('0px');\n    expect(getStyle(innerTiles[1], 'top')).toBe('101px');\n    expect(getStyle(innerTiles[2], 'top')).toBe('202px');\n  });\n\n  it('should set the gutter size if passed', () => {\n    const fixture = createComponent(GridListWithGutterSize);\n    fixture.detectChanges();\n\n    const tiles = fixture.debugElement.queryAll(By.css('mat-grid-tile'));\n\n    // check horizontal gutter\n    expect(getStyle(tiles[0], 'width')).toBe('99px');\n    expect(getComputedLeft(tiles[1])).toBe(101);\n\n    // check vertical gutter\n    expect(getStyle(tiles[0], 'height')).toBe('100px');\n    expect(getStyle(tiles[2], 'top')).toBe('102px');\n  });\n\n  it('should use pixels if gutter units are missing', () => {\n    const fixture = createComponent(GridListWithUnitlessGutterSize);\n    fixture.detectChanges();\n\n    const tiles = fixture.debugElement.queryAll(By.css('mat-grid-tile'));\n\n    // check horizontal gutter\n    expect(getStyle(tiles[0], 'width')).toBe('99px');\n    expect(getComputedLeft(tiles[1])).toBe(101);\n\n    // check vertical gutter\n    expect(getStyle(tiles[0], 'height')).toBe('100px');\n    expect(getStyle(tiles[2], 'top')).toBe('102px');\n  });\n\n  it('should allow alternate units for the gutter size', () => {\n    const fixture = createComponent(GridListWithUnspecifiedGutterSize);\n    const gridList = fixture.debugElement.query(By.directive(MatGridList));\n\n    gridList.componentInstance.gutterSize = '10%';\n    fixture.detectChanges();\n\n    const tiles = fixture.debugElement.queryAll(By.css('mat-grid-tile'));\n\n    expect(getStyle(tiles[0], 'width')).toBe('90px');\n    expect(getComputedLeft(tiles[1])).toBe(110);\n  });\n\n  it('should set the correct list height in ratio mode', () => {\n    const fixture = createComponent(GridListWithRatioHeightAndMulipleRows);\n    fixture.detectChanges();\n\n    const list = fixture.debugElement.query(By.directive(MatGridList));\n    expect(getStyle(list, 'padding-bottom')).toBe('201px');\n  });\n\n  it('should set the correct list height in fixed mode', () => {\n    const fixture = createComponent(GridListWithFixRowHeightAndMultipleRows);\n    fixture.detectChanges();\n\n    const list = fixture.debugElement.query(By.directive(MatGridList));\n    expect(getStyle(list, 'height')).toBe('201px');\n  });\n\n  it('should allow adjustment of tile colspan', () => {\n    const fixture = createComponent(GridListWithColspanBinding);\n      fixture.componentInstance.colspan = 2;\n      fixture.detectChanges();\n\n      const tile = fixture.debugElement.query(By.directive(MatGridTile));\n      expect(getStyle(tile, 'width')).toBe('199.5px');\n\n      fixture.componentInstance.colspan = 3;\n      fixture.detectChanges();\n      expect(getStyle(tile, 'width')).toBe('299.75px');\n  });\n\n  it('should allow adjustment of tile rowspan', () => {\n    const fixture = createComponent(GridListWithRowspanBinding);\n\n    fixture.componentInstance.rowspan = 2;\n    fixture.detectChanges();\n\n    const tile = fixture.debugElement.query(By.directive(MatGridTile));\n    expect(getStyle(tile, 'height')).toBe('201px');\n\n    fixture.componentInstance.rowspan = 3;\n    fixture.detectChanges();\n    expect(getStyle(tile, 'height')).toBe('302px');\n  });\n\n  it('should lay out tiles correctly for a complex layout', () => {\n    const fixture = createComponent(GridListWithComplexLayout);\n\n    fixture.componentInstance.tiles = [\n      {cols: 3, rows: 1},\n      {cols: 1, rows: 2},\n      {cols: 1, rows: 1},\n      {cols: 2, rows: 1}\n    ];\n\n    fixture.detectChanges();\n    const tiles = fixture.debugElement.queryAll(By.css('mat-grid-tile'));\n\n    expect(getStyle(tiles[0], 'width')).toBe('299.75px');\n    expect(getStyle(tiles[0], 'height')).toBe('100px');\n    expect(getComputedLeft(tiles[0])).toBe(0);\n    expect(getStyle(tiles[0], 'top')).toBe('0px');\n\n    expect(getStyle(tiles[1], 'width')).toBe('99.25px');\n    expect(getStyle(tiles[1], 'height')).toBe('201px');\n    expect(getComputedLeft(tiles[1])).toBe(300.75);\n    expect(getStyle(tiles[1], 'top')).toBe('0px');\n\n    expect(getStyle(tiles[2], 'width')).toBe('99.25px');\n    expect(getStyle(tiles[2], 'height')).toBe('100px');\n    expect(getComputedLeft(tiles[2])).toBe(0);\n    expect(getStyle(tiles[2], 'top')).toBe('101px');\n\n    expect(getStyle(tiles[3], 'width')).toBe('199.5px');\n    expect(getStyle(tiles[3], 'height')).toBe('100px');\n    expect(getComputedLeft(tiles[3])).toBe(100.25);\n    expect(getStyle(tiles[3], 'top')).toBe('101px');\n  });\n\n  it('should lay out tiles correctly', () => {\n    const fixture = createComponent(GridListWithLayout);\n\n    fixture.detectChanges();\n    const tiles = fixture.debugElement.queryAll(By.css('mat-grid-tile'));\n\n    expect(getStyle(tiles[0], 'width')).toBe('40px');\n    expect(getStyle(tiles[0], 'height')).toBe('40px');\n    expect(getComputedLeft(tiles[0])).toBe(0);\n    expect(getStyle(tiles[0], 'top')).toBe('0px');\n\n    expect(getStyle(tiles[1], 'width')).toBe('20px');\n    expect(getStyle(tiles[1], 'height')).toBe('20px');\n    expect(getComputedLeft(tiles[1])).toBe(40);\n    expect(getStyle(tiles[1], 'top')).toBe('0px');\n\n    expect(getStyle(tiles[2], 'width')).toBe('40px');\n    expect(getStyle(tiles[2], 'height')).toBe('40px');\n    expect(getComputedLeft(tiles[2])).toBe(60);\n    expect(getStyle(tiles[2], 'top')).toBe('0px');\n\n    expect(getStyle(tiles[3], 'width')).toBe('40px');\n    expect(getStyle(tiles[3], 'height')).toBe('40px');\n    expect(getComputedLeft(tiles[3])).toBe(0);\n    expect(getStyle(tiles[3], 'top')).toBe('40px');\n\n    expect(getStyle(tiles[4], 'width')).toBe('40px');\n    expect(getStyle(tiles[4], 'height')).toBe('40px');\n    expect(getComputedLeft(tiles[4])).toBe(40);\n    expect(getStyle(tiles[4], 'top')).toBe('40px');\n  });\n\n  it('should lay out tiles correctly when single cell to be placed at the beginning',\n        () => {\n    const fixture = createComponent(GridListWithSingleCellAtBeginning);\n\n    fixture.detectChanges();\n    const tiles = fixture.debugElement.queryAll(By.css('mat-grid-tile'));\n\n    expect(getStyle(tiles[0], 'width')).toBe('40px');\n    expect(getStyle(tiles[0], 'height')).toBe('40px');\n    expect(getComputedLeft(tiles[0])).toBe(0);\n    expect(getStyle(tiles[0], 'top')).toBe('0px');\n\n    expect(getStyle(tiles[1], 'width')).toBe('20px');\n    expect(getStyle(tiles[1], 'height')).toBe('40px');\n    expect(getComputedLeft(tiles[1])).toBe(40);\n    expect(getStyle(tiles[1], 'top')).toBe('0px');\n\n    expect(getStyle(tiles[2], 'width')).toBe('40px');\n    expect(getStyle(tiles[2], 'height')).toBe('40px');\n    expect(getComputedLeft(tiles[2])).toBe(60);\n    expect(getStyle(tiles[2], 'top')).toBe('0px');\n\n    expect(getStyle(tiles[3], 'height')).toBe('20px');\n    expect(getComputedLeft(tiles[3])).toBe(0);\n    expect(getStyle(tiles[3], 'top')).toBe('40px');\n  });\n\n  it('should add not add any classes to footers without lines', () => {\n    const fixture = createComponent(GridListWithFootersWithoutLines);\n    fixture.detectChanges();\n\n    const footer = fixture.debugElement.query(By.directive(MatGridTileText));\n    expect(footer.nativeElement.classList.contains('mat-2-line')).toBe(false);\n  });\n\n  it('should add class to footers with two lines', () => {\n    const fixture = createComponent(GridListWithFooterContainingTwoLines);\n    fixture.detectChanges();\n\n    const footer = fixture.debugElement.query(By.directive(MatGridTileText));\n    expect(footer.nativeElement.classList.contains('mat-2-line')).toBe(true);\n  });\n\n  it('should not use calc() that evaluates to 0', () => {\n    const fixture = createComponent(GirdListWithRowHeightRatio);\n\n    fixture.componentInstance.rowHeight = '4:1';\n    fixture.detectChanges();\n\n    const firstTile = fixture.debugElement.query(By.directive(MatGridTile)).nativeElement;\n\n    expect(firstTile.style.marginTop).toBe('0px');\n    expect(firstTile.style.left).toBe('0px');\n  });\n\n  it('should reset the old styles when switching to a new tile styler', () => {\n    const fixture = createComponent(GirdListWithRowHeightRatio);\n\n    fixture.componentInstance.rowHeight = '4:1';\n    fixture.detectChanges();\n\n    const list = fixture.debugElement.query(By.directive(MatGridList));\n    const tile = fixture.debugElement.query(By.directive(MatGridTile));\n\n    expect(getStyle(tile, 'padding-top')).toBe('100px');\n    expect(getStyle(list, 'padding-bottom')).toBe('100px');\n\n    fixture.componentInstance.rowHeight = '400px';\n    fixture.detectChanges();\n\n    expect(getStyle(tile, 'padding-top')).toBe('0px', 'Expected tile padding to be reset.');\n    expect(getStyle(list, 'padding-bottom')).toBe('0px', 'Expected list padding to be reset.');\n    expect(getStyle(tile, 'top')).toBe('0px');\n    expect(getStyle(tile, 'height')).toBe('400px');\n  });\n\n  it('should ensure that all tiles are inside the grid when there are no matching gaps', () => {\n    const fixture = createComponent(GridListWithoutMatchingGap);\n    const tiles = fixture.debugElement.queryAll(By.css('mat-grid-tile'));\n\n    fixture.detectChanges();\n    expect(tiles.every(tile => getComputedLeft(tile) >= 0))\n        .toBe(true, 'Expected none of the tiles to have a negative `left`');\n  });\n\n  it('should default to LTR if empty directionality is given', () => {\n    const fixture = createComponent(GridListWithEmptyDirectionality);\n    const tile: HTMLElement = fixture.debugElement.query(By.css('mat-grid-tile')).nativeElement;\n    fixture.detectChanges();\n\n    expect(tile.style.left).toBe('0px');\n    expect(tile.style.right).toBe('');\n  });\n\n  it('should set `right` styles for RTL', () => {\n    const fixture = createComponent(GridListWithRtl);\n    const tile: HTMLElement = fixture.debugElement.query(By.css('mat-grid-tile')).nativeElement;\n    fixture.detectChanges();\n\n    expect(tile.style.left).toBe('');\n    expect(tile.style.right).toBe('0px');\n  });\n\n  it('should lay out the tiles if they are not direct descendants of the list', () => {\n    const fixture = createComponent(GridListWithIndirectTileDescendants);\n    fixture.detectChanges();\n\n    const tile = fixture.debugElement.query(By.directive(MatGridTile));\n    expect(getStyle(tile, 'padding-top')).toBe('200px');\n  });\n\n  it('should throw if an invalid value is set as the `rowHeight`', () => {\n    const fixture = createComponent(GridListWithUnspecifiedRowHeight);\n    const gridList = fixture.debugElement.query(By.directive(MatGridList));\n\n    expect(() => {\n      // Note the semicolon at the end which will be an invalid value on some browsers (see #13252).\n      gridList.componentInstance.rowHeight = '350px;';\n      fixture.detectChanges();\n    }).toThrowError(/^Invalid value/);\n  });\n\n});\n\n\nfunction getStyle(el: DebugElement, prop: string): string {\n  return getComputedStyle(el.nativeElement).getPropertyValue(prop);\n}\n\n/** Gets the `left` position of an element. */\nfunction getComputedLeft(element: DebugElement): number {\n  // While the other properties in this test use `getComputedStyle`, we use `getBoundingClientRect`\n  // for left because iOS Safari doesn't support using `getComputedStyle` to get the calculated\n  // `left` value when using CSS `calc`. We subtract the `left` of the document body because\n  // browsers, by default, add a margin to the body (typically 8px).\n  const elementRect = element.nativeElement.getBoundingClientRect();\n  const bodyRect = document.body.getBoundingClientRect();\n\n  return elementRect.left - bodyRect.left;\n}\n\n\n@Component({template: '<mat-grid-list></mat-grid-list>'})\nclass GridListWithoutCols { }\n\n@Component({template: '<mat-grid-list cols=\"4\" rowHeight=\"4:3:2\"></mat-grid-list>'})\nclass GridListWithInvalidRowHeightRatio { }\n\n@Component({template:\n    '<mat-grid-list cols=\"4\"><mat-grid-tile colspan=\"5\"></mat-grid-tile></mat-grid-list>'})\nclass GridListWithTooWideColspan { }\n\n@Component({template: '<mat-grid-list [cols]=\"cols\"></mat-grid-list>'})\nclass GridListWithDynamicCols {\n  @ViewChild(MatGridList) gridList: MatGridList;\n  cols = 2;\n}\n\n@Component({template: `\n    <div style=\"width:200px\">\n      <mat-grid-list cols=\"1\">\n        <mat-grid-tile></mat-grid-tile>\n      </mat-grid-list>\n    </div>`})\nclass GridListWithUnspecifiedRowHeight { }\n\n@Component({template: `\n    <div style=\"width:400px\">\n      <mat-grid-list cols=\"1\" [rowHeight]=\"rowHeight\">\n        <mat-grid-tile></mat-grid-tile>\n      </mat-grid-list>\n    </div>`})\nclass GirdListWithRowHeightRatio {\n  rowHeight: string;\n}\n\n@Component({template: `\n    <mat-grid-list cols=\"1\" rowHeight=\"fit\" [style.height]=\"totalHeight\">\n      <mat-grid-tile></mat-grid-tile>\n      <mat-grid-tile></mat-grid-tile>\n    </mat-grid-list>`})\nclass GridListWithFitRowHeightMode {\n  totalHeight: string;\n}\n\n@Component({template: `\n    <mat-grid-list cols=\"4\" [rowHeight]=\"rowHeight\">\n      <mat-grid-tile></mat-grid-tile>\n    </mat-grid-list>`})\nclass GridListWithFixedRowHeightMode {\n  rowHeight: string;\n}\n\n@Component({template: `\n    <mat-grid-list cols=\"4\" rowHeight=\"100\">\n      <mat-grid-tile></mat-grid-tile>\n    </mat-grid-list>`})\nclass GridListWithUnitlessFixedRowHeight {\n  rowHeight: string;\n}\n\n@Component({template: `\n    <div style=\"width:200px\">\n      <mat-grid-list cols=\"2\" rowHeight=\"100px\">\n        <mat-grid-tile></mat-grid-tile>\n        <mat-grid-tile></mat-grid-tile>\n        <mat-grid-tile></mat-grid-tile>\n      </mat-grid-list>\n    </div>`})\nclass GridListWithUnspecifiedGutterSize { }\n\n@Component({template: `\n    <div style=\"width:200px\">\n      <mat-grid-list cols=\"2\" gutterSize=\"2px\" rowHeight=\"100px\">\n        <mat-grid-tile></mat-grid-tile>\n        <mat-grid-tile></mat-grid-tile>\n        <mat-grid-tile></mat-grid-tile>\n      </mat-grid-list>\n    </div>`})\nclass GridListWithGutterSize { }\n\n@Component({template: `\n    <div style=\"width:200px\">\n      <mat-grid-list cols=\"2\" gutterSize=\"2\" rowHeight=\"100px\">\n        <mat-grid-tile></mat-grid-tile>\n        <mat-grid-tile></mat-grid-tile>\n        <mat-grid-tile></mat-grid-tile>\n      </mat-grid-list>\n    </div>`})\nclass GridListWithUnitlessGutterSize { }\n\n@Component({template: `\n    <div style=\"width:400px\">\n      <mat-grid-list cols=\"1\" rowHeight=\"4:1\">\n        <mat-grid-tile></mat-grid-tile>\n        <mat-grid-tile></mat-grid-tile>\n      </mat-grid-list>\n    </div>`})\nclass GridListWithRatioHeightAndMulipleRows { }\n\n@Component({template: `\n    <mat-grid-list cols=\"1\" rowHeight=\"100px\">\n      <mat-grid-tile></mat-grid-tile>\n      <mat-grid-tile></mat-grid-tile>\n    </mat-grid-list>`})\nclass GridListWithFixRowHeightAndMultipleRows { }\n\n@Component({template: `\n    <div style=\"width:400px\">\n      <mat-grid-list cols=\"4\">\n        <mat-grid-tile [colspan]=\"colspan\"></mat-grid-tile>\n      </mat-grid-list>\n    </div>`})\nclass GridListWithColspanBinding {\n  colspan: number;\n}\n\n@Component({template: `\n    <mat-grid-list cols=\"1\" rowHeight=\"100px\">\n      <mat-grid-tile [rowspan]=\"rowspan\"></mat-grid-tile>\n    </mat-grid-list>`})\nclass GridListWithRowspanBinding {\n  rowspan: number;\n}\n\n@Component({template: `\n    <div style=\"width:400px\">\n      <mat-grid-list cols=\"4\" rowHeight=\"100px\">\n        <mat-grid-tile *ngFor=\"let tile of tiles\" [colspan]=\"tile.cols\" [rowspan]=\"tile.rows\"\n                      [style.background]=\"tile.color\">\n          {{tile.text}}\n        </mat-grid-tile>\n      </mat-grid-list>\n    </div>`})\nclass GridListWithComplexLayout {\n  tiles: any[];\n}\n\n@Component({template: `\n  <div style=\"width:100px\">\n    <mat-grid-list [cols]=\"10\" gutterSize=\"0px\" rowHeight=\"10px\">\n      <mat-grid-tile [colspan]=\"4\" [rowspan]=\"4\"></mat-grid-tile>\n      <mat-grid-tile [colspan]=\"2\" [rowspan]=\"2\"></mat-grid-tile>\n      <mat-grid-tile [colspan]=\"4\" [rowspan]=\"4\"></mat-grid-tile>\n      <mat-grid-tile [colspan]=\"4\" [rowspan]=\"4\"></mat-grid-tile>\n      <mat-grid-tile [colspan]=\"4\" [rowspan]=\"4\"></mat-grid-tile>\n    </mat-grid-list>\n  </div>`})\nclass GridListWithLayout {}\n\n@Component({template: `\n  <div style=\"width:100px\">\n    <mat-grid-list [cols]=\"10\" gutterSize=\"0px\" rowHeight=\"10px\">\n      <mat-grid-tile [colspan]=\"4\" [rowspan]=\"4\"></mat-grid-tile>\n      <mat-grid-tile [colspan]=\"2\" [rowspan]=\"4\"></mat-grid-tile>\n      <mat-grid-tile [colspan]=\"4\" [rowspan]=\"4\"></mat-grid-tile>\n      <mat-grid-tile [colspan]=\"1\" [rowspan]=\"2\"></mat-grid-tile>\n    </mat-grid-list>\n  </div>`})\nclass GridListWithSingleCellAtBeginning {}\n\n@Component({template: `\n    <mat-grid-list cols=\"1\">\n      <mat-grid-tile>\n        <mat-grid-tile-footer>\n          I'm a footer!\n        </mat-grid-tile-footer>\n      </mat-grid-tile>\n    </mat-grid-list>`})\nclass GridListWithFootersWithoutLines { }\n\n@Component({template: `\n    <mat-grid-list cols=\"1\">\n      <mat-grid-tile>\n        <mat-grid-tile-footer>\n          <h3 mat-line>First line</h3>\n          <span mat-line>Second line</span>\n        </mat-grid-tile-footer>\n      </mat-grid-tile>\n    </mat-grid-list>`})\nclass GridListWithFooterContainingTwoLines { }\n\n@Component({template: `\n  <mat-grid-list cols=\"5\">\n    <mat-grid-tile [rowspan]=\"1\" [colspan]=\"3\">1</mat-grid-tile>\n    <mat-grid-tile [rowspan]=\"2\" [colspan]=\"2\">2</mat-grid-tile>\n    <mat-grid-tile [rowspan]=\"1\" [colspan]=\"2\">3</mat-grid-tile>\n    <mat-grid-tile [rowspan]=\"2\" [colspan]=\"2\">4</mat-grid-tile>\n  </mat-grid-list>\n`})\nclass GridListWithoutMatchingGap { }\n\n@Component({\n  template: `<mat-grid-list cols=\"1\"><mat-grid-tile>Hello</mat-grid-tile></mat-grid-list>`,\n  providers: [{provide: Directionality, useValue: {}}]\n})\nclass GridListWithEmptyDirectionality { }\n\n@Component({\n  template: `<mat-grid-list cols=\"1\"><mat-grid-tile>Hello</mat-grid-tile></mat-grid-list>`,\n  providers: [{provide: Directionality, useValue: {value: 'rtl'}}]\n})\nclass GridListWithRtl { }\n\n@Component({\n  // Note the blank `ngSwitch` which we need in order to hit the bug that we're testing.\n  template: `\n    <div style=\"width:200px\">\n      <mat-grid-list cols=\"1\">\n        <ng-container [ngSwitch]=\"true\">\n          <mat-grid-tile></mat-grid-tile>\n        </ng-container>\n      </mat-grid-list>\n    </div>\n  `\n})\nclass GridListWithIndirectTileDescendants {}\n\n\n@Component({template: `\n    <div style=\"width:200px\">\n      <mat-grid-list cols=\"2\" rowHeight=\"100px\">\n        <mat-grid-tile></mat-grid-tile>\n        <mat-grid-tile>\n          <mat-grid-list cols=\"1\" rowHeight=\"100px\">\n            <mat-grid-tile></mat-grid-tile>\n            <mat-grid-tile></mat-grid-tile>\n            <mat-grid-tile></mat-grid-tile>\n          </mat-grid-list>\n        </mat-grid-tile>\n      </mat-grid-list>\n    </div>`})\nclass NestedGridList { }\n"]}