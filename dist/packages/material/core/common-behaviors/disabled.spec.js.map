{"version":3,"file":"disabled.spec.js","sourceRoot":"","sources":["../../../../../src/lib/core/common-behaviors/disabled.spec.ts"],"names":[],"mappings":";;AAAA,uCAAyC;AAGzC,QAAQ,CAAC,eAAe,EAAE;IACxB,EAAE,CAAC,2DAA2D,EAAE;QAC9D;YAAA;YAAmB,CAAC;YAAD,iBAAC;QAAD,CAAC,AAApB,IAAoB;QAEpB,IAAI,iBAAiB,GAAG,wBAAa,CAAC,UAAU,CAAC,CAAC;QAClD,IAAI,QAAQ,GAAG,IAAI,iBAAiB,EAAE,CAAC;QAEvC,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC;aACpB,IAAI,CAAC,KAAK,EAAE,2DAA2D,CAAC,CAAC;QAE9E,QAAQ,CAAC,QAAQ,GAAG,IAAI,CAAC;QACzB,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC;aACpB,IAAI,CAAC,IAAI,EAAE,oEAAoE,CAAC,CAAC;IACxF,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import {mixinDisabled} from './disabled';\n\n\ndescribe('MixinDisabled', () => {\n  it('should augment an existing class with a disabled property', () => {\n    class EmptyClass { }\n\n    let classWithDisabled = mixinDisabled(EmptyClass);\n    let instance = new classWithDisabled();\n\n    expect(instance.disabled)\n        .toBe(false, 'Expected the mixed-into class to have a disabled property');\n\n    instance.disabled = true;\n    expect(instance.disabled)\n        .toBe(true, 'Expected the mixed-into class to have an updated disabled property');\n  });\n});\n"]}