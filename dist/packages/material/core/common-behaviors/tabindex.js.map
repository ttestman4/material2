{"version":3,"file":"tabindex.js","sourceRoot":"","sources":["../../../../../src/lib/core/common-behaviors/tabindex.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;AAaA,iCAGC;;;;;;IADC,+BAAiB;;;;;;;;;AAOnB,MAAM,UAAU,aAAa,CAAoC,IAAO,EAAE,eAAe,GAAG,CAAC;IAE3F,OAAO,KAAM,SAAQ,IAAI;;;;QASvB,YAAY,GAAG,IAAW;YACxB,KAAK,CAAC,GAAG,IAAI,CAAC,CAAC;YATT,cAAS,GAAW,eAAe,CAAC;QAU5C,CAAC;;;;QARD,IAAI,QAAQ,KAAa,OAAO,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;;;;;QACtE,IAAI,QAAQ,CAAC,KAAa;YACxB,wFAAwF;YACxF,IAAI,CAAC,SAAS,GAAG,KAAK,IAAI,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,eAAe,CAAC;QAC3D,CAAC;KAKF,CAAC;AACJ,CAAC","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Constructor} from './constructor';\nimport {CanDisable} from './disabled';\n\n\n/** @docs-private */\nexport interface HasTabIndex {\n  /** Tabindex of the component. */\n  tabIndex: number;\n}\n\n/** @docs-private */\nexport type HasTabIndexCtor = Constructor<HasTabIndex>;\n\n/** Mixin to augment a directive with a `tabIndex` property. */\nexport function mixinTabIndex<T extends Constructor<CanDisable>>(base: T, defaultTabIndex = 0)\n    : HasTabIndexCtor & T {\n  return class extends base {\n    private _tabIndex: number = defaultTabIndex;\n\n    get tabIndex(): number { return this.disabled ? -1 : this._tabIndex; }\n    set tabIndex(value: number) {\n      // If the specified tabIndex value is null or undefined, fall back to the default value.\n      this._tabIndex = value != null ? value : defaultTabIndex;\n    }\n\n    constructor(...args: any[]) {\n      super(...args);\n    }\n  };\n}\n"]}