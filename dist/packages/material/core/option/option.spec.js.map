{"version":3,"file":"option.spec.js","sourceRoot":"","sources":["../../../../../src/lib/core/option/option.spec.ts"],"names":[],"mappings":"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","sourcesContent":["import {async, ComponentFixture, TestBed} from '@angular/core/testing';\nimport {Component, DebugElement} from '@angular/core';\nimport {By} from '@angular/platform-browser';\nimport {\n  dispatchFakeEvent,\n  dispatchKeyboardEvent,\n  createKeyboardEvent,\n  dispatchEvent,\n} from '@angular/cdk/testing';\nimport {SPACE, ENTER} from '@angular/cdk/keycodes';\nimport {MatOption, MatOptionModule} from './index';\n\ndescribe('MatOption component', () => {\n\n  beforeEach(async(() => {\n    TestBed.configureTestingModule({\n      imports: [MatOptionModule],\n      declarations: [BasicOption]\n    }).compileComponents();\n  }));\n\n  it('should complete the `stateChanges` stream on destroy', () => {\n    const fixture = TestBed.createComponent(BasicOption);\n    fixture.detectChanges();\n\n    const optionInstance: MatOption =\n        fixture.debugElement.query(By.directive(MatOption)).componentInstance;\n    const completeSpy = jasmine.createSpy('complete spy');\n    const subscription = optionInstance._stateChanges.subscribe(undefined, undefined, completeSpy);\n\n    fixture.destroy();\n    expect(completeSpy).toHaveBeenCalled();\n    subscription.unsubscribe();\n  });\n\n  it('should not emit to `onSelectionChange` if selecting an already-selected option', () => {\n    const fixture = TestBed.createComponent(BasicOption);\n    fixture.detectChanges();\n\n    const optionInstance: MatOption =\n        fixture.debugElement.query(By.directive(MatOption)).componentInstance;\n\n    optionInstance.select();\n    expect(optionInstance.selected).toBe(true);\n\n    const spy = jasmine.createSpy('selection change spy');\n    const subscription = optionInstance.onSelectionChange.subscribe(spy);\n\n    optionInstance.select();\n    fixture.detectChanges();\n\n    expect(optionInstance.selected).toBe(true);\n    expect(spy).not.toHaveBeenCalled();\n\n    subscription.unsubscribe();\n  });\n\n  it('should not emit to `onSelectionChange` if deselecting an unselected option', () => {\n    const fixture = TestBed.createComponent(BasicOption);\n    fixture.detectChanges();\n\n    const optionInstance: MatOption =\n        fixture.debugElement.query(By.directive(MatOption)).componentInstance;\n\n    optionInstance.deselect();\n    expect(optionInstance.selected).toBe(false);\n\n    const spy = jasmine.createSpy('selection change spy');\n    const subscription = optionInstance.onSelectionChange.subscribe(spy);\n\n    optionInstance.deselect();\n    fixture.detectChanges();\n\n    expect(optionInstance.selected).toBe(false);\n    expect(spy).not.toHaveBeenCalled();\n\n    subscription.unsubscribe();\n  });\n\n  it('should be able to set a custom id', () => {\n    const fixture = TestBed.createComponent(BasicOption);\n\n    fixture.componentInstance.id = 'custom-option';\n    fixture.detectChanges();\n\n    const optionInstance = fixture.debugElement.query(By.directive(MatOption)).componentInstance;\n\n    expect(optionInstance.id).toBe('custom-option');\n  });\n\n  it('should select the option when pressing space', () => {\n    const fixture = TestBed.createComponent(BasicOption);\n    fixture.detectChanges();\n\n    const optionDebugElement = fixture.debugElement.query(By.directive(MatOption));\n    const optionNativeElement: HTMLElement = optionDebugElement.nativeElement;\n    const optionInstance: MatOption = optionDebugElement.componentInstance;\n    const spy = jasmine.createSpy('selection change spy');\n    const subscription = optionInstance.onSelectionChange.subscribe(spy);\n\n    const event = dispatchKeyboardEvent(optionNativeElement, 'keydown', SPACE);\n    fixture.detectChanges();\n\n    expect(spy).toHaveBeenCalled();\n    expect(event.defaultPrevented).toBe(true);\n    subscription.unsubscribe();\n  });\n\n  it('should select the option when pressing enter', () => {\n    const fixture = TestBed.createComponent(BasicOption);\n    fixture.detectChanges();\n\n    const optionDebugElement = fixture.debugElement.query(By.directive(MatOption));\n    const optionNativeElement: HTMLElement = optionDebugElement.nativeElement;\n    const optionInstance: MatOption = optionDebugElement.componentInstance;\n    const spy = jasmine.createSpy('selection change spy');\n    const subscription = optionInstance.onSelectionChange.subscribe(spy);\n\n    const event = dispatchKeyboardEvent(optionNativeElement, 'keydown', ENTER);\n    fixture.detectChanges();\n\n    expect(spy).toHaveBeenCalled();\n    expect(event.defaultPrevented).toBe(true);\n    subscription.unsubscribe();\n  });\n\n  it('should not do anything when pressing the selection keys with a modifier', () => {\n    const fixture = TestBed.createComponent(BasicOption);\n    fixture.detectChanges();\n\n    const optionDebugElement = fixture.debugElement.query(By.directive(MatOption));\n    const optionNativeElement: HTMLElement = optionDebugElement.nativeElement;\n    const optionInstance: MatOption = optionDebugElement.componentInstance;\n    const spy = jasmine.createSpy('selection change spy');\n    const subscription = optionInstance.onSelectionChange.subscribe(spy);\n\n    [ENTER, SPACE].forEach(key => {\n      const event = createKeyboardEvent('keydown', key);\n      Object.defineProperty(event, 'shiftKey', {get: () => true});\n      dispatchEvent(optionNativeElement, event);\n      fixture.detectChanges();\n\n      expect(event.defaultPrevented).toBe(false);\n    });\n\n    expect(spy).not.toHaveBeenCalled();\n    subscription.unsubscribe();\n  });\n\n  describe('ripples', () => {\n    let fixture: ComponentFixture<BasicOption>;\n    let optionDebugElement: DebugElement;\n    let optionNativeElement: HTMLElement;\n    let optionInstance: MatOption;\n\n    beforeEach(() => {\n      fixture = TestBed.createComponent(BasicOption);\n      fixture.detectChanges();\n\n      optionDebugElement = fixture.debugElement.query(By.directive(MatOption));\n      optionNativeElement = optionDebugElement.nativeElement;\n      optionInstance = optionDebugElement.componentInstance;\n    });\n\n    it('should show ripples by default', () => {\n      expect(optionInstance.disableRipple).toBeFalsy('Expected ripples to be enabled by default');\n      expect(optionNativeElement.querySelectorAll('.mat-ripple-element').length)\n        .toBe(0, 'Expected no ripples to show up initially');\n\n      dispatchFakeEvent(optionNativeElement, 'mousedown');\n      dispatchFakeEvent(optionNativeElement, 'mouseup');\n\n      expect(optionNativeElement.querySelectorAll('.mat-ripple-element').length)\n        .toBe(1, 'Expected one ripple to show up after a fake click.');\n    });\n\n    it('should not show ripples if the option is disabled', () => {\n      expect(optionNativeElement.querySelectorAll('.mat-ripple-element').length)\n        .toBe(0, 'Expected no ripples to show up initially');\n\n      fixture.componentInstance.disabled = true;\n      fixture.detectChanges();\n\n      dispatchFakeEvent(optionNativeElement, 'mousedown');\n      dispatchFakeEvent(optionNativeElement, 'mouseup');\n\n      expect(optionNativeElement.querySelectorAll('.mat-ripple-element').length)\n        .toBe(0, 'Expected no ripples to show up after click on a disabled option.');\n    });\n\n  });\n\n});\n\n@Component({\n  template: `<mat-option [id]=\"id\" [disabled]=\"disabled\"></mat-option>`\n})\nclass BasicOption {\n  disabled: boolean;\n  id: string;\n}\n"]}