{"version":3,"file":"datepicker.spec.js","sourceRoot":"","sources":["../../../../src/lib/datepicker/datepicker.spec.ts"],"names":[],"mappings":"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","sourcesContent":["import {Directionality} from '@angular/cdk/bidi';\nimport {DOWN_ARROW, ENTER, ESCAPE, RIGHT_ARROW, UP_ARROW} from '@angular/cdk/keycodes';\nimport {Overlay, OverlayContainer} from '@angular/cdk/overlay';\nimport {ScrollDispatcher} from '@angular/cdk/scrolling';\nimport {\n  createKeyboardEvent,\n  dispatchEvent,\n  dispatchFakeEvent,\n  dispatchKeyboardEvent,\n  dispatchMouseEvent,\n} from '@angular/cdk/testing';\nimport {Component, FactoryProvider, Type, ValueProvider, ViewChild} from '@angular/core';\nimport {ComponentFixture, fakeAsync, flush, inject, TestBed, tick} from '@angular/core/testing';\nimport {FormControl, FormsModule, NgModel, ReactiveFormsModule} from '@angular/forms';\nimport {MAT_DATE_LOCALE, MatNativeDateModule, NativeDateModule} from '@angular/material/core';\nimport {MatFormField, MatFormFieldModule} from '@angular/material/form-field';\nimport {DEC, JAN, JUL, JUN, SEP} from '@angular/material/testing';\nimport {By} from '@angular/platform-browser';\nimport {BrowserDynamicTestingModule} from '@angular/platform-browser-dynamic/testing';\nimport {NoopAnimationsModule} from '@angular/platform-browser/animations';\nimport {Subject} from 'rxjs';\nimport {MatInputModule} from '../input/index';\nimport {MatDatepicker} from './datepicker';\nimport {MatDatepickerInput} from './datepicker-input';\nimport {MatDatepickerToggle} from './datepicker-toggle';\nimport {MAT_DATEPICKER_SCROLL_STRATEGY, MatDatepickerIntl, MatDatepickerModule} from './index';\n\ndescribe('MatDatepicker', () => {\n  const SUPPORTS_INTL = typeof Intl != 'undefined';\n\n  // Creates a test component fixture.\n  function createComponent(\n    component: Type<any>,\n    imports: Type<any>[] = [],\n    providers: (FactoryProvider | ValueProvider)[] = [],\n    entryComponents: Type<any>[] = []): ComponentFixture<any> {\n\n    TestBed.configureTestingModule({\n      imports: [\n        FormsModule,\n        MatDatepickerModule,\n        MatFormFieldModule,\n        MatInputModule,\n        NoopAnimationsModule,\n        ReactiveFormsModule,\n        ...imports\n      ],\n      providers,\n      declarations: [component, ...entryComponents],\n    });\n\n    TestBed.overrideModule(BrowserDynamicTestingModule, {\n      set: {\n        entryComponents: [entryComponents]\n      }\n    }).compileComponents();\n\n    return TestBed.createComponent(component);\n  }\n\n  afterEach(inject([OverlayContainer], (container: OverlayContainer) => {\n    container.ngOnDestroy();\n  }));\n\n  describe('with MatNativeDateModule', () => {\n    describe('standard datepicker', () => {\n      let fixture: ComponentFixture<StandardDatepicker>;\n      let testComponent: StandardDatepicker;\n\n      beforeEach(fakeAsync(() => {\n        fixture = createComponent(StandardDatepicker, [MatNativeDateModule]);\n        fixture.detectChanges();\n\n        testComponent = fixture.componentInstance;\n      }));\n\n      afterEach(fakeAsync(() => {\n        testComponent.datepicker.close();\n        fixture.detectChanges();\n        flush();\n      }));\n\n      it('should initialize with correct value shown in input', () => {\n        if (SUPPORTS_INTL) {\n          expect(fixture.nativeElement.querySelector('input').value).toBe('1/1/2020');\n        }\n      });\n\n      it('open non-touch should open popup', () => {\n        expect(document.querySelector('.cdk-overlay-pane.mat-datepicker-popup')).toBeNull();\n\n        testComponent.datepicker.open();\n        fixture.detectChanges();\n\n        expect(document.querySelector('.cdk-overlay-pane.mat-datepicker-popup')).not.toBeNull();\n      });\n\n      it('touch should open dialog', () => {\n        testComponent.touch = true;\n        fixture.detectChanges();\n\n        expect(document.querySelector('.mat-datepicker-dialog mat-dialog-container')).toBeNull();\n\n        testComponent.datepicker.open();\n        fixture.detectChanges();\n\n        expect(document.querySelector('.mat-datepicker-dialog mat-dialog-container'))\n            .not.toBeNull();\n      });\n\n      it('should not be able to open more than one dialog', fakeAsync(() => {\n        testComponent.touch = true;\n        fixture.detectChanges();\n\n        expect(document.querySelectorAll('.mat-datepicker-dialog').length).toBe(0);\n\n        testComponent.datepicker.open();\n        fixture.detectChanges();\n        tick(500);\n        fixture.detectChanges();\n\n        dispatchKeyboardEvent(document.querySelector('.mat-calendar-body')!, 'keydown', ENTER);\n        fixture.detectChanges();\n        tick(100);\n\n        testComponent.datepicker.open();\n        tick(500);\n        fixture.detectChanges();\n\n        expect(document.querySelectorAll('.mat-datepicker-dialog').length).toBe(1);\n      }));\n\n      it('should open datepicker if opened input is set to true', fakeAsync(() => {\n        testComponent.opened = true;\n        fixture.detectChanges();\n        flush();\n\n        expect(document.querySelector('.mat-datepicker-content')).not.toBeNull();\n\n        testComponent.opened = false;\n        fixture.detectChanges();\n        flush();\n\n        expect(document.querySelector('.mat-datepicker-content')).toBeNull();\n      }));\n\n      it('open in disabled mode should not open the calendar', () => {\n        testComponent.disabled = true;\n        fixture.detectChanges();\n\n        expect(document.querySelector('.cdk-overlay-pane')).toBeNull();\n        expect(document.querySelector('mat-dialog-container')).toBeNull();\n\n        testComponent.datepicker.open();\n        fixture.detectChanges();\n\n        expect(document.querySelector('.cdk-overlay-pane')).toBeNull();\n        expect(document.querySelector('mat-dialog-container')).toBeNull();\n      });\n\n      it('disabled datepicker input should open the calendar if datepicker is enabled', () => {\n        testComponent.datepicker.disabled = false;\n        testComponent.datepickerInput.disabled = true;\n        fixture.detectChanges();\n\n        expect(document.querySelector('.cdk-overlay-pane')).toBeNull();\n\n        testComponent.datepicker.open();\n        fixture.detectChanges();\n\n        expect(document.querySelector('.cdk-overlay-pane')).not.toBeNull();\n      });\n\n      it('close should close popup', fakeAsync(() => {\n        testComponent.datepicker.open();\n        fixture.detectChanges();\n        flush();\n\n        const popup = document.querySelector('.cdk-overlay-pane')!;\n        expect(popup).not.toBeNull();\n        expect(parseInt(getComputedStyle(popup).height as string)).not.toBe(0);\n\n        testComponent.datepicker.close();\n        fixture.detectChanges();\n        flush();\n\n        expect(parseInt(getComputedStyle(popup).height as string)).toBe(0);\n      }));\n\n      it('should close the popup when pressing ESCAPE', fakeAsync(() => {\n        testComponent.datepicker.open();\n        fixture.detectChanges();\n\n        expect(testComponent.datepicker.opened).toBe(true, 'Expected datepicker to be open.');\n\n        dispatchKeyboardEvent(document.body, 'keydown', ESCAPE);\n        fixture.detectChanges();\n        flush();\n\n        expect(testComponent.datepicker.opened).toBe(false, 'Expected datepicker to be closed.');\n      }));\n\n      it('should set the proper role on the popup', fakeAsync(() => {\n        testComponent.datepicker.open();\n        fixture.detectChanges();\n        flush();\n\n        const popup = document.querySelector('.cdk-overlay-pane')!;\n        expect(popup).toBeTruthy();\n        expect(popup.getAttribute('role')).toBe('dialog');\n      }));\n\n      it('close should close dialog', fakeAsync(() => {\n        testComponent.touch = true;\n        fixture.detectChanges();\n\n        testComponent.datepicker.open();\n        fixture.detectChanges();\n\n        expect(document.querySelector('mat-dialog-container')).not.toBeNull();\n\n        testComponent.datepicker.close();\n        fixture.detectChanges();\n        flush();\n\n        expect(document.querySelector('mat-dialog-container')).toBeNull();\n      }));\n\n      it('setting selected via click should update input and close calendar', fakeAsync(() => {\n        testComponent.touch = true;\n        fixture.detectChanges();\n\n        testComponent.datepicker.open();\n        fixture.detectChanges();\n        flush();\n\n        expect(document.querySelector('mat-dialog-container')).not.toBeNull();\n        expect(testComponent.datepickerInput.value).toEqual(new Date(2020, JAN, 1));\n\n        let cells = document.querySelectorAll('.mat-calendar-body-cell');\n        dispatchMouseEvent(cells[1], 'click');\n        fixture.detectChanges();\n        flush();\n\n        expect(document.querySelector('mat-dialog-container')).toBeNull();\n        expect(testComponent.datepickerInput.value).toEqual(new Date(2020, JAN, 2));\n      }));\n\n      it('setting selected via enter press should update input and close calendar',\n        fakeAsync(() => {\n          testComponent.touch = true;\n          fixture.detectChanges();\n\n          testComponent.datepicker.open();\n          fixture.detectChanges();\n          flush();\n\n          expect(document.querySelector('mat-dialog-container')).not.toBeNull();\n          expect(testComponent.datepickerInput.value).toEqual(new Date(2020, JAN, 1));\n\n          let calendarBodyEl = document.querySelector('.mat-calendar-body') as HTMLElement;\n\n          dispatchKeyboardEvent(calendarBodyEl, 'keydown', RIGHT_ARROW);\n          fixture.detectChanges();\n          flush();\n          dispatchKeyboardEvent(calendarBodyEl, 'keydown', ENTER);\n          fixture.detectChanges();\n          flush();\n\n          expect(document.querySelector('mat-dialog-container')).toBeNull();\n          expect(testComponent.datepickerInput.value).toEqual(new Date(2020, JAN, 2));\n        }));\n\n      it('clicking the currently selected date should close the calendar ' +\n         'without firing selectedChanged', fakeAsync(() => {\n        const selectedChangedSpy =\n            spyOn(testComponent.datepicker._selectedChanged, 'next').and.callThrough();\n\n        for (let changeCount = 1; changeCount < 3; changeCount++) {\n          const currentDay = changeCount;\n          testComponent.datepicker.open();\n          fixture.detectChanges();\n\n          expect(document.querySelector('mat-datepicker-content')).not.toBeNull();\n          expect(testComponent.datepickerInput.value).toEqual(new Date(2020, JAN, currentDay));\n\n          let cells = document.querySelectorAll('.mat-calendar-body-cell');\n          dispatchMouseEvent(cells[1], 'click');\n          fixture.detectChanges();\n          flush();\n        }\n\n        expect(selectedChangedSpy.calls.count()).toEqual(1);\n        expect(document.querySelector('mat-dialog-container')).toBeNull();\n        expect(testComponent.datepickerInput.value).toEqual(new Date(2020, JAN, 2));\n      }));\n\n      it('pressing enter on the currently selected date should close the calendar without ' +\n         'firing selectedChanged', () => {\n        const selectedChangedSpy =\n            spyOn(testComponent.datepicker._selectedChanged, 'next').and.callThrough();\n\n        testComponent.datepicker.open();\n        fixture.detectChanges();\n\n        let calendarBodyEl = document.querySelector('.mat-calendar-body') as HTMLElement;\n        expect(calendarBodyEl).not.toBeNull();\n        expect(testComponent.datepickerInput.value).toEqual(new Date(2020, JAN, 1));\n\n        dispatchKeyboardEvent(calendarBodyEl, 'keydown', ENTER);\n        fixture.detectChanges();\n\n        fixture.whenStable().then(() => {\n          expect(selectedChangedSpy.calls.count()).toEqual(0);\n          expect(document.querySelector('mat-dialog-container')).toBeNull();\n          expect(testComponent.datepickerInput.value).toEqual(new Date(2020, JAN, 1));\n        });\n      });\n\n      it('startAt should fallback to input value', () => {\n        expect(testComponent.datepicker.startAt).toEqual(new Date(2020, JAN, 1));\n      });\n\n      it('should attach popup to native input', () => {\n        let attachToRef = testComponent.datepickerInput.getConnectedOverlayOrigin();\n        expect(attachToRef.nativeElement.tagName.toLowerCase())\n            .toBe('input', 'popup should be attached to native input');\n      });\n\n      it('input should aria-owns calendar after opened in non-touch mode', fakeAsync(() => {\n        let inputEl = fixture.debugElement.query(By.css('input')).nativeElement;\n        expect(inputEl.getAttribute('aria-owns')).toBeNull();\n\n        testComponent.datepicker.open();\n        fixture.detectChanges();\n        flush();\n\n        let ownedElementId = inputEl.getAttribute('aria-owns');\n        expect(ownedElementId).not.toBeNull();\n\n        let ownedElement = document.getElementById(ownedElementId);\n        expect(ownedElement).not.toBeNull();\n        expect((ownedElement as Element).tagName.toLowerCase()).toBe('mat-calendar');\n      }));\n\n      it('input should aria-owns calendar after opened in touch mode', () => {\n        testComponent.touch = true;\n        fixture.detectChanges();\n\n        let inputEl = fixture.debugElement.query(By.css('input')).nativeElement;\n        expect(inputEl.getAttribute('aria-owns')).toBeNull();\n\n        testComponent.datepicker.open();\n        fixture.detectChanges();\n\n        let ownedElementId = inputEl.getAttribute('aria-owns');\n        expect(ownedElementId).not.toBeNull();\n\n        let ownedElement = document.getElementById(ownedElementId);\n        expect(ownedElement).not.toBeNull();\n        expect((ownedElement as Element).tagName.toLowerCase()).toBe('mat-calendar');\n      });\n\n      it('should not throw when given wrong data type', () => {\n        testComponent.date = '1/1/2017' as any;\n\n        expect(() => fixture.detectChanges()).not.toThrow();\n      });\n\n      it('should clear out the backdrop subscriptions on close', fakeAsync(() => {\n        for (let i = 0; i < 3; i++) {\n          testComponent.datepicker.open();\n          fixture.detectChanges();\n\n          testComponent.datepicker.close();\n          fixture.detectChanges();\n        }\n\n        testComponent.datepicker.open();\n        fixture.detectChanges();\n\n        const spy = jasmine.createSpy('close event spy');\n        const subscription = testComponent.datepicker.closedStream.subscribe(spy);\n        const backdrop = document.querySelector('.cdk-overlay-backdrop')! as HTMLElement;\n\n        backdrop.click();\n        fixture.detectChanges();\n        flush();\n\n        expect(spy).toHaveBeenCalledTimes(1);\n        expect(testComponent.datepicker.opened).toBe(false);\n        subscription.unsubscribe();\n      }));\n\n      it('should reset the datepicker when it is closed externally',\n        fakeAsync(inject([OverlayContainer], (oldOverlayContainer: OverlayContainer) => {\n\n          // Destroy the old container manually since resetting the testing module won't do it.\n          oldOverlayContainer.ngOnDestroy();\n          TestBed.resetTestingModule();\n\n          const scrolledSubject = new Subject();\n\n          // Stub out a `CloseScrollStrategy` so we can trigger a detachment via the `OverlayRef`.\n          fixture = createComponent(StandardDatepicker, [MatNativeDateModule], [\n            {\n              provide: ScrollDispatcher,\n              useValue: {scrolled: () => scrolledSubject}\n            },\n            {\n              provide: MAT_DATEPICKER_SCROLL_STRATEGY,\n              deps: [Overlay],\n              useFactory: (overlay: Overlay) => () => overlay.scrollStrategies.close()\n            }\n          ]);\n\n          fixture.detectChanges();\n          testComponent = fixture.componentInstance;\n\n          testComponent.datepicker.open();\n          fixture.detectChanges();\n\n          expect(testComponent.datepicker.opened).toBe(true);\n\n          scrolledSubject.next();\n          flush();\n          fixture.detectChanges();\n\n          expect(testComponent.datepicker.opened).toBe(false);\n        }))\n      );\n\n      it('should close the datepicker using ALT + UP_ARROW', fakeAsync(() => {\n        testComponent.datepicker.open();\n        fixture.detectChanges();\n        flush();\n\n        expect(testComponent.datepicker.opened).toBe(true);\n\n        const event = createKeyboardEvent('keydown', UP_ARROW);\n        Object.defineProperty(event, 'altKey', {get: () => true});\n\n        dispatchEvent(document.body, event);\n        fixture.detectChanges();\n        flush();\n\n        expect(testComponent.datepicker.opened).toBe(false);\n      }));\n\n      it('should open the datepicker using ALT + DOWN_ARROW', fakeAsync(() => {\n        expect(testComponent.datepicker.opened).toBe(false);\n\n        const event = createKeyboardEvent('keydown', DOWN_ARROW);\n        Object.defineProperty(event, 'altKey', {get: () => true});\n\n        dispatchEvent(fixture.nativeElement.querySelector('input'), event);\n        fixture.detectChanges();\n        flush();\n\n        expect(testComponent.datepicker.opened).toBe(true);\n        expect(event.defaultPrevented).toBe(true);\n      }));\n\n      it('should not open for ALT + DOWN_ARROW on readonly input', fakeAsync(() => {\n        const input = fixture.nativeElement.querySelector('input');\n\n        expect(testComponent.datepicker.opened).toBe(false);\n\n        input.setAttribute('readonly', 'true');\n\n        const event = createKeyboardEvent('keydown', DOWN_ARROW);\n        Object.defineProperty(event, 'altKey', {get: () => true});\n\n        dispatchEvent(input, event);\n        fixture.detectChanges();\n        flush();\n\n        expect(testComponent.datepicker.opened).toBe(false);\n        expect(event.defaultPrevented).toBe(false);\n      }));\n\n    });\n\n    describe('datepicker with too many inputs', () => {\n      it('should throw when multiple inputs registered', fakeAsync(() => {\n        const fixture = createComponent(MultiInputDatepicker, [MatNativeDateModule]);\n        expect(() => fixture.detectChanges()).toThrow();\n      }));\n    });\n\n    describe('datepicker that is assigned to input at a later point', () => {\n      it('should not throw on ALT + DOWN_ARROW for input without datepicker', fakeAsync(() => {\n        const fixture = createComponent(DelayedDatepicker, [MatNativeDateModule]);\n        fixture.detectChanges();\n\n        expect(() => {\n          const event = createKeyboardEvent('keydown', DOWN_ARROW);\n          Object.defineProperty(event, 'altKey', {get: () => true});\n          dispatchEvent(fixture.nativeElement.querySelector('input'), event);\n          fixture.detectChanges();\n          flush();\n        }).not.toThrow();\n      }));\n\n      it('should handle value changes when a datepicker is assigned after init', fakeAsync(() => {\n        const fixture = createComponent(DelayedDatepicker, [MatNativeDateModule]);\n        const testComponent: DelayedDatepicker = fixture.componentInstance;\n        const toSelect = new Date(2017, JAN, 1);\n\n        fixture.detectChanges();\n\n        expect(testComponent.datepickerInput.value).toBeNull();\n        expect(testComponent.datepicker._selected).toBeNull();\n\n        testComponent.assignedDatepicker = testComponent.datepicker;\n        fixture.detectChanges();\n\n        testComponent.assignedDatepicker.select(toSelect);\n        fixture.detectChanges();\n        flush();\n        fixture.detectChanges();\n\n        expect(testComponent.datepickerInput.value).toEqual(toSelect);\n        expect(testComponent.datepicker._selected).toEqual(toSelect);\n      }));\n    });\n\n    describe('datepicker with no inputs', () => {\n      let fixture: ComponentFixture<NoInputDatepicker>;\n      let testComponent: NoInputDatepicker;\n\n      beforeEach(fakeAsync(() => {\n        fixture = createComponent(NoInputDatepicker, [MatNativeDateModule]);\n        fixture.detectChanges();\n\n        testComponent = fixture.componentInstance;\n      }));\n\n      afterEach(fakeAsync(() => {\n        testComponent.datepicker.close();\n        fixture.detectChanges();\n      }));\n\n      it('should not throw when accessing disabled property', () => {\n        expect(() => testComponent.datepicker.disabled).not.toThrow();\n      });\n\n      it('should throw when opened with no registered inputs', fakeAsync(() => {\n        expect(() => testComponent.datepicker.open()).toThrow();\n      }));\n    });\n\n    describe('datepicker with startAt', () => {\n      let fixture: ComponentFixture<DatepickerWithStartAt>;\n      let testComponent: DatepickerWithStartAt;\n\n      beforeEach(fakeAsync(() => {\n        fixture = createComponent(DatepickerWithStartAt, [MatNativeDateModule]);\n        fixture.detectChanges();\n\n        testComponent = fixture.componentInstance;\n      }));\n\n      afterEach(fakeAsync(() => {\n        testComponent.datepicker.close();\n        fixture.detectChanges();\n      }));\n\n      it('explicit startAt should override input value', () => {\n        expect(testComponent.datepicker.startAt).toEqual(new Date(2010, JAN, 1));\n      });\n    });\n\n    describe('datepicker with startView set to year', () => {\n      let fixture: ComponentFixture<DatepickerWithStartViewYear>;\n      let testComponent: DatepickerWithStartViewYear;\n\n      beforeEach(fakeAsync(() => {\n        fixture = createComponent(DatepickerWithStartViewYear, [MatNativeDateModule]);\n        fixture.detectChanges();\n\n        testComponent = fixture.componentInstance;\n      }));\n\n      afterEach(fakeAsync(() => {\n        testComponent.datepicker.close();\n        fixture.detectChanges();\n        flush();\n      }));\n\n      it('should start at the specified view', () => {\n        testComponent.datepicker.open();\n        fixture.detectChanges();\n\n        const firstCalendarCell = document.querySelector('.mat-calendar-body-cell')!;\n\n        // When the calendar is in year view, the first cell should be for a month rather than\n        // for a date.\n        expect(firstCalendarCell.textContent!.trim())\n            .toBe('JAN', 'Expected the calendar to be in year-view');\n      });\n\n      it('should fire yearSelected when user selects calendar year in year view',\n        fakeAsync(() => {\n          spyOn(testComponent, 'onYearSelection');\n          expect(testComponent.onYearSelection).not.toHaveBeenCalled();\n\n          testComponent.datepicker.open();\n          fixture.detectChanges();\n\n          const cells = document.querySelectorAll('.mat-calendar-body-cell');\n\n          dispatchMouseEvent(cells[0], 'click');\n          fixture.detectChanges();\n          flush();\n\n          expect(testComponent.onYearSelection).toHaveBeenCalled();\n        })\n      );\n    });\n\n    describe('datepicker with startView set to multiyear', () => {\n      let fixture: ComponentFixture<DatepickerWithStartViewMultiYear>;\n      let testComponent: DatepickerWithStartViewMultiYear;\n\n      beforeEach(fakeAsync(() => {\n        fixture = createComponent(DatepickerWithStartViewMultiYear, [MatNativeDateModule]);\n        fixture.detectChanges();\n\n        testComponent = fixture.componentInstance;\n\n        spyOn(testComponent, 'onMultiYearSelection');\n      }));\n\n      afterEach(fakeAsync(() => {\n        testComponent.datepicker.close();\n        fixture.detectChanges();\n        flush();\n      }));\n\n      it('should start at the specified view', () => {\n        testComponent.datepicker.open();\n        fixture.detectChanges();\n\n        const firstCalendarCell = document.querySelector('.mat-calendar-body-cell')!;\n\n        // When the calendar is in year view, the first cell should be for a month rather than\n        // for a date.\n        expect(firstCalendarCell.textContent!.trim())\n            .toBe('2016', 'Expected the calendar to be in multi-year-view');\n      });\n\n      it('should fire yearSelected when user selects calendar year in multiyear view',\n        fakeAsync(() => {\n          expect(testComponent.onMultiYearSelection).not.toHaveBeenCalled();\n\n          testComponent.datepicker.open();\n          fixture.detectChanges();\n\n          const cells = document.querySelectorAll('.mat-calendar-body-cell');\n\n          dispatchMouseEvent(cells[0], 'click');\n          fixture.detectChanges();\n          flush();\n\n          expect(testComponent.onMultiYearSelection).toHaveBeenCalled();\n        })\n      );\n    });\n\n    describe('datepicker with ngModel', () => {\n      let fixture: ComponentFixture<DatepickerWithNgModel>;\n      let testComponent: DatepickerWithNgModel;\n\n      beforeEach(fakeAsync(() => {\n        fixture = createComponent(DatepickerWithNgModel, [MatNativeDateModule]);\n        fixture.detectChanges();\n\n        fixture.whenStable().then(() => {\n          fixture.detectChanges();\n\n          testComponent = fixture.componentInstance;\n        });\n      }));\n\n      afterEach(fakeAsync(() => {\n        testComponent.datepicker.close();\n        fixture.detectChanges();\n      }));\n\n      it('should update datepicker when model changes', fakeAsync(() => {\n        expect(testComponent.datepickerInput.value).toBeNull();\n        expect(testComponent.datepicker._selected).toBeNull();\n\n        let selected = new Date(2017, JAN, 1);\n        testComponent.selected = selected;\n        fixture.detectChanges();\n        flush();\n        fixture.detectChanges();\n\n        expect(testComponent.datepickerInput.value).toEqual(selected);\n        expect(testComponent.datepicker._selected).toEqual(selected);\n      }));\n\n      it('should update model when date is selected', fakeAsync(() => {\n        expect(testComponent.selected).toBeNull();\n        expect(testComponent.datepickerInput.value).toBeNull();\n\n        let selected = new Date(2017, JAN, 1);\n        testComponent.datepicker.select(selected);\n        fixture.detectChanges();\n        flush();\n        fixture.detectChanges();\n\n        expect(testComponent.selected).toEqual(selected);\n        expect(testComponent.datepickerInput.value).toEqual(selected);\n      }));\n\n      it('should mark input dirty after input event', () => {\n        let inputEl = fixture.debugElement.query(By.css('input')).nativeElement;\n\n        expect(inputEl.classList).toContain('ng-pristine');\n\n        inputEl.value = '2001-01-01';\n        dispatchFakeEvent(inputEl, 'input');\n        fixture.detectChanges();\n\n        expect(inputEl.classList).toContain('ng-dirty');\n      });\n\n      it('should mark input dirty after date selected', fakeAsync(() => {\n        let inputEl = fixture.debugElement.query(By.css('input')).nativeElement;\n\n        expect(inputEl.classList).toContain('ng-pristine');\n\n        testComponent.datepicker.select(new Date(2017, JAN, 1));\n        fixture.detectChanges();\n        flush();\n        fixture.detectChanges();\n\n        expect(inputEl.classList).toContain('ng-dirty');\n      }));\n\n      it('should not mark dirty after model change', fakeAsync(() => {\n        let inputEl = fixture.debugElement.query(By.css('input')).nativeElement;\n\n        expect(inputEl.classList).toContain('ng-pristine');\n\n        testComponent.selected = new Date(2017, JAN, 1);\n        fixture.detectChanges();\n        flush();\n        fixture.detectChanges();\n\n        expect(inputEl.classList).toContain('ng-pristine');\n      }));\n\n      it('should mark input touched on blur', () => {\n        let inputEl = fixture.debugElement.query(By.css('input')).nativeElement;\n\n        expect(inputEl.classList).toContain('ng-untouched');\n\n        dispatchFakeEvent(inputEl, 'focus');\n        fixture.detectChanges();\n\n        expect(inputEl.classList).toContain('ng-untouched');\n\n        dispatchFakeEvent(inputEl, 'blur');\n        fixture.detectChanges();\n\n        expect(inputEl.classList).toContain('ng-touched');\n      });\n\n      it('should reformat the input value on blur', () => {\n        if (SUPPORTS_INTL) {\n          // Skip this test if the internationalization API is not supported in the current\n          // browser. Browsers like Safari 9 do not support the \"Intl\" API.\n          return;\n        }\n\n        const inputEl = fixture.debugElement.query(By.css('input')).nativeElement;\n\n        inputEl.value = '2001-01-01';\n        dispatchFakeEvent(inputEl, 'input');\n        fixture.detectChanges();\n\n        dispatchFakeEvent(inputEl, 'blur');\n        fixture.detectChanges();\n\n        expect(inputEl.value).toBe('1/1/2001');\n      });\n\n      it('should not reformat invalid dates on blur', () => {\n        const inputEl = fixture.debugElement.query(By.css('input')).nativeElement;\n\n        inputEl.value = 'very-valid-date';\n        dispatchFakeEvent(inputEl, 'input');\n        fixture.detectChanges();\n\n        dispatchFakeEvent(inputEl, 'blur');\n        fixture.detectChanges();\n\n        expect(inputEl.value).toBe('very-valid-date');\n      });\n\n      it('should mark input touched on calendar selection', fakeAsync(() => {\n        let inputEl = fixture.debugElement.query(By.css('input')).nativeElement;\n\n        expect(inputEl.classList).toContain('ng-untouched');\n\n        testComponent.datepicker.select(new Date(2017, JAN, 1));\n        fixture.detectChanges();\n        flush();\n        fixture.detectChanges();\n\n        expect(inputEl.classList).toContain('ng-touched');\n      }));\n    });\n\n    describe('datepicker with formControl', () => {\n      let fixture: ComponentFixture<DatepickerWithFormControl>;\n      let testComponent: DatepickerWithFormControl;\n\n      beforeEach(fakeAsync(() => {\n        fixture = createComponent(DatepickerWithFormControl, [MatNativeDateModule]);\n        fixture.detectChanges();\n\n        testComponent = fixture.componentInstance;\n      }));\n\n      afterEach(fakeAsync(() => {\n        testComponent.datepicker.close();\n        fixture.detectChanges();\n      }));\n\n      it('should update datepicker when formControl changes', () => {\n        expect(testComponent.datepickerInput.value).toBeNull();\n        expect(testComponent.datepicker._selected).toBeNull();\n\n        let selected = new Date(2017, JAN, 1);\n        testComponent.formControl.setValue(selected);\n        fixture.detectChanges();\n\n        expect(testComponent.datepickerInput.value).toEqual(selected);\n        expect(testComponent.datepicker._selected).toEqual(selected);\n      });\n\n      it('should update formControl when date is selected', () => {\n        expect(testComponent.formControl.value).toBeNull();\n        expect(testComponent.datepickerInput.value).toBeNull();\n\n        let selected = new Date(2017, JAN, 1);\n        testComponent.datepicker.select(selected);\n        fixture.detectChanges();\n\n        expect(testComponent.formControl.value).toEqual(selected);\n        expect(testComponent.datepickerInput.value).toEqual(selected);\n      });\n\n      it('should disable input when form control disabled', () => {\n        let inputEl = fixture.debugElement.query(By.css('input')).nativeElement;\n\n        expect(inputEl.disabled).toBe(false);\n\n        testComponent.formControl.disable();\n        fixture.detectChanges();\n\n        expect(inputEl.disabled).toBe(true);\n      });\n\n      it('should disable toggle when form control disabled', () => {\n        expect(testComponent.datepickerToggle.disabled).toBe(false);\n\n        testComponent.formControl.disable();\n        fixture.detectChanges();\n\n        expect(testComponent.datepickerToggle.disabled).toBe(true);\n      });\n    });\n\n    describe('datepicker with mat-datepicker-toggle', () => {\n      let fixture: ComponentFixture<DatepickerWithToggle>;\n      let testComponent: DatepickerWithToggle;\n\n      beforeEach(fakeAsync(() => {\n        fixture = createComponent(DatepickerWithToggle, [MatNativeDateModule]);\n        fixture.detectChanges();\n\n        testComponent = fixture.componentInstance;\n      }));\n\n      afterEach(fakeAsync(() => {\n        testComponent.datepicker.close();\n        fixture.detectChanges();\n        flush();\n      }));\n\n      it('should set `aria-haspopup` on the toggle button', () => {\n        const button = fixture.debugElement.query(By.css('button'));\n\n        expect(button).toBeTruthy();\n        expect(button.nativeElement.getAttribute('aria-haspopup')).toBe('true');\n      });\n\n      it('should open calendar when toggle clicked', () => {\n        expect(document.querySelector('mat-dialog-container')).toBeNull();\n\n        let toggle = fixture.debugElement.query(By.css('button'));\n        dispatchMouseEvent(toggle.nativeElement, 'click');\n        fixture.detectChanges();\n\n        expect(document.querySelector('mat-dialog-container')).not.toBeNull();\n      });\n\n      it('should not open calendar when toggle clicked if datepicker is disabled', () => {\n        testComponent.datepicker.disabled = true;\n        fixture.detectChanges();\n        const toggle = fixture.debugElement.query(By.css('button')).nativeElement;\n\n        expect(toggle.hasAttribute('disabled')).toBe(true);\n        expect(document.querySelector('mat-dialog-container')).toBeNull();\n\n        dispatchMouseEvent(toggle, 'click');\n        fixture.detectChanges();\n\n        expect(document.querySelector('mat-dialog-container')).toBeNull();\n      });\n\n      it('should not open calendar when toggle clicked if input is disabled', () => {\n        expect(testComponent.datepicker.disabled).toBe(false);\n\n        testComponent.input.disabled = true;\n        fixture.detectChanges();\n        const toggle = fixture.debugElement.query(By.css('button')).nativeElement;\n\n        expect(toggle.hasAttribute('disabled')).toBe(true);\n        expect(document.querySelector('mat-dialog-container')).toBeNull();\n\n        dispatchMouseEvent(toggle, 'click');\n        fixture.detectChanges();\n\n        expect(document.querySelector('mat-dialog-container')).toBeNull();\n      });\n\n      it('should set the `button` type on the trigger to prevent form submissions', () => {\n        let toggle = fixture.debugElement.query(By.css('button')).nativeElement;\n        expect(toggle.getAttribute('type')).toBe('button');\n      });\n\n      it('should remove the underlying SVG icon from the tab order', () => {\n        const icon = fixture.debugElement.nativeElement.querySelector('svg');\n        expect(icon.getAttribute('focusable')).toBe('false');\n      });\n\n      it('should restore focus to the toggle after the calendar is closed', () => {\n        let toggle = fixture.debugElement.query(By.css('button')).nativeElement;\n\n        fixture.componentInstance.touchUI = false;\n        fixture.detectChanges();\n\n        toggle.focus();\n        expect(document.activeElement).toBe(toggle, 'Expected toggle to be focused.');\n\n        fixture.componentInstance.datepicker.open();\n        fixture.detectChanges();\n\n        let pane = document.querySelector('.cdk-overlay-pane')!;\n\n        expect(pane).toBeTruthy('Expected calendar to be open.');\n        expect(pane.contains(document.activeElement))\n            .toBe(true, 'Expected focus to be inside the calendar.');\n\n        fixture.componentInstance.datepicker.close();\n        fixture.detectChanges();\n\n        expect(document.activeElement).toBe(toggle, 'Expected focus to be restored to toggle.');\n      });\n\n      it('should re-render when the i18n labels change',\n        inject([MatDatepickerIntl], (intl: MatDatepickerIntl) => {\n          const toggle = fixture.debugElement.query(By.css('button')).nativeElement;\n\n          intl.openCalendarLabel = 'Open the calendar, perhaps?';\n          intl.changes.next();\n          fixture.detectChanges();\n\n          expect(toggle.getAttribute('aria-label')).toBe('Open the calendar, perhaps?');\n        }));\n\n      it('should toggle the active state of the datepicker toggle', fakeAsync(() => {\n        const toggle = fixture.debugElement.query(By.css('mat-datepicker-toggle')).nativeElement;\n\n        expect(toggle.classList).not.toContain('mat-datepicker-toggle-active');\n\n        fixture.componentInstance.datepicker.open();\n        fixture.detectChanges();\n        flush();\n\n        expect(toggle.classList).toContain('mat-datepicker-toggle-active');\n\n        fixture.componentInstance.datepicker.close();\n        fixture.detectChanges();\n        flush();\n        fixture.detectChanges();\n\n        expect(toggle.classList).not.toContain('mat-datepicker-toggle-active');\n      }));\n    });\n\n    describe('datepicker with custom mat-datepicker-toggle icon', () => {\n      it('should be able to override the mat-datepicker-toggle icon', fakeAsync(() => {\n        const fixture = createComponent(DatepickerWithCustomIcon, [MatNativeDateModule]);\n        fixture.detectChanges();\n\n        expect(fixture.nativeElement.querySelector('.mat-datepicker-toggle .custom-icon'))\n            .toBeTruthy('Expected custom icon to be rendered.');\n\n        expect(fixture.nativeElement.querySelector('.mat-datepicker-toggle mat-icon'))\n            .toBeFalsy('Expected default icon to be removed.');\n      }));\n    });\n\n    describe('datepicker with tabindex on mat-datepicker-toggle', () => {\n      it('should forward the tabindex to the underlying button', () => {\n        const fixture = createComponent(DatepickerWithTabindexOnToggle, [MatNativeDateModule]);\n        fixture.detectChanges();\n\n        const button = fixture.nativeElement.querySelector('.mat-datepicker-toggle button');\n\n        expect(button.getAttribute('tabindex')).toBe('7');\n      });\n\n      it('should clear the tabindex from the mat-datepicker-toggle host', () => {\n        const fixture = createComponent(DatepickerWithTabindexOnToggle, [MatNativeDateModule]);\n        fixture.detectChanges();\n\n        const host = fixture.nativeElement.querySelector('.mat-datepicker-toggle');\n\n        expect(host.getAttribute('tabindex')).toBe('-1');\n      });\n\n      it('should forward focus to the underlying button when the host is focused', () => {\n        const fixture = createComponent(DatepickerWithTabindexOnToggle, [MatNativeDateModule]);\n        fixture.detectChanges();\n\n        const host = fixture.nativeElement.querySelector('.mat-datepicker-toggle');\n        const button = host.querySelector('button');\n\n        expect(document.activeElement).not.toBe(button);\n\n        host.focus();\n\n        expect(document.activeElement).toBe(button);\n      });\n\n    });\n\n    describe('datepicker inside mat-form-field', () => {\n      let fixture: ComponentFixture<FormFieldDatepicker>;\n      let testComponent: FormFieldDatepicker;\n\n      beforeEach(fakeAsync(() => {\n        fixture = createComponent(FormFieldDatepicker, [MatNativeDateModule]);\n        fixture.detectChanges();\n        testComponent = fixture.componentInstance;\n      }));\n\n      afterEach(fakeAsync(() => {\n        testComponent.datepicker.close();\n        fixture.detectChanges();\n        flush();\n      }));\n\n      it('should float the placeholder when an invalid value is entered', () => {\n        testComponent.datepickerInput.value = 'totally-not-a-date' as any;\n        fixture.debugElement.nativeElement.querySelector('input').value = 'totally-not-a-date';\n        fixture.detectChanges();\n\n        expect(fixture.debugElement.nativeElement.querySelector('mat-form-field').classList)\n          .toContain('mat-form-field-should-float');\n      });\n\n      it('should pass the form field theme color to the overlay', fakeAsync(() => {\n        testComponent.formField.color = 'primary';\n        testComponent.datepicker.open();\n        fixture.detectChanges();\n        flush();\n\n        let contentEl = document.querySelector('.mat-datepicker-content')!;\n\n        expect(contentEl.classList).toContain('mat-primary');\n\n        testComponent.datepicker.close();\n        fixture.detectChanges();\n        flush();\n\n        testComponent.formField.color = 'warn';\n        testComponent.datepicker.open();\n\n        contentEl = document.querySelector('.mat-datepicker-content')!;\n        fixture.detectChanges();\n        flush();\n\n        expect(contentEl.classList).toContain('mat-warn');\n        expect(contentEl.classList).not.toContain('mat-primary');\n      }));\n\n      it('should prefer the datepicker color over the form field one', fakeAsync(() => {\n        testComponent.datepicker.color = 'accent';\n        testComponent.formField.color = 'warn';\n        testComponent.datepicker.open();\n        fixture.detectChanges();\n        flush();\n\n        const contentEl = document.querySelector('.mat-datepicker-content')!;\n\n        expect(contentEl.classList).toContain('mat-accent');\n        expect(contentEl.classList).not.toContain('mat-warn');\n      }));\n    });\n\n    describe('datepicker with min and max dates and validation', () => {\n      let fixture: ComponentFixture<DatepickerWithMinAndMaxValidation>;\n      let testComponent: DatepickerWithMinAndMaxValidation;\n\n      beforeEach(fakeAsync(() => {\n        fixture = createComponent(DatepickerWithMinAndMaxValidation, [MatNativeDateModule]);\n        fixture.detectChanges();\n\n        testComponent = fixture.componentInstance;\n      }));\n\n      afterEach(fakeAsync(() => {\n        testComponent.datepicker.close();\n        fixture.detectChanges();\n      }));\n\n      it('should use min and max dates specified by the input', () => {\n        expect(testComponent.datepicker._minDate).toEqual(new Date(2010, JAN, 1));\n        expect(testComponent.datepicker._maxDate).toEqual(new Date(2020, JAN, 1));\n      });\n\n      it('should mark invalid when value is before min', fakeAsync(() => {\n        testComponent.date = new Date(2009, DEC, 31);\n        fixture.detectChanges();\n        flush();\n        fixture.detectChanges();\n\n        expect(fixture.debugElement.query(By.css('input')).nativeElement.classList)\n            .toContain('ng-invalid');\n      }));\n\n      it('should mark invalid when value is after max', fakeAsync(() => {\n        testComponent.date = new Date(2020, JAN, 2);\n        fixture.detectChanges();\n        flush();\n\n        fixture.detectChanges();\n\n        expect(fixture.debugElement.query(By.css('input')).nativeElement.classList)\n            .toContain('ng-invalid');\n      }));\n\n      it('should not mark invalid when value equals min', fakeAsync(() => {\n        testComponent.date = testComponent.datepicker._minDate;\n        fixture.detectChanges();\n        flush();\n        fixture.detectChanges();\n\n        expect(fixture.debugElement.query(By.css('input')).nativeElement.classList)\n            .not.toContain('ng-invalid');\n      }));\n\n      it('should not mark invalid when value equals max', fakeAsync(() => {\n        testComponent.date = testComponent.datepicker._maxDate;\n        fixture.detectChanges();\n        flush();\n        fixture.detectChanges();\n\n        expect(fixture.debugElement.query(By.css('input')).nativeElement.classList)\n            .not.toContain('ng-invalid');\n      }));\n\n      it('should not mark invalid when value is between min and max', fakeAsync(() => {\n        testComponent.date = new Date(2010, JAN, 2);\n        fixture.detectChanges();\n        flush();\n        fixture.detectChanges();\n\n        expect(fixture.debugElement.query(By.css('input')).nativeElement.classList)\n            .not.toContain('ng-invalid');\n      }));\n\n      it('should update validity when switching between null and invalid', fakeAsync(() => {\n        const inputEl = fixture.debugElement.query(By.css('input')).nativeElement;\n        inputEl.value = '';\n        dispatchFakeEvent(inputEl, 'input');\n\n        fixture.detectChanges();\n        flush();\n        fixture.detectChanges();\n\n        expect(testComponent.model.valid).toBe(true);\n\n        inputEl.value = 'abcdefg';\n        dispatchFakeEvent(inputEl, 'input');\n\n        fixture.detectChanges();\n        flush();\n        fixture.detectChanges();\n\n        expect(testComponent.model.valid).toBe(false);\n\n        inputEl.value = '';\n        dispatchFakeEvent(inputEl, 'input');\n\n        fixture.detectChanges();\n        flush();\n        fixture.detectChanges();\n\n        expect(testComponent.model.valid).toBe(true);\n      }));\n    });\n\n    describe('datepicker with filter and validation', () => {\n      let fixture: ComponentFixture<DatepickerWithFilterAndValidation>;\n      let testComponent: DatepickerWithFilterAndValidation;\n\n      beforeEach(fakeAsync(() => {\n        fixture = createComponent(DatepickerWithFilterAndValidation, [MatNativeDateModule]);\n        fixture.detectChanges();\n\n        testComponent = fixture.componentInstance;\n      }));\n\n      afterEach(fakeAsync(() => {\n        testComponent.datepicker.close();\n        fixture.detectChanges();\n        flush();\n      }));\n\n      it('should mark input invalid', fakeAsync(() => {\n        testComponent.date = new Date(2017, JAN, 1);\n        fixture.detectChanges();\n        flush();\n        fixture.detectChanges();\n\n        expect(fixture.debugElement.query(By.css('input')).nativeElement.classList)\n            .toContain('ng-invalid');\n\n        testComponent.date = new Date(2017, JAN, 2);\n        fixture.detectChanges();\n        flush();\n        fixture.detectChanges();\n\n        expect(fixture.debugElement.query(By.css('input')).nativeElement.classList)\n            .not.toContain('ng-invalid');\n      }));\n\n      it('should disable filtered calendar cells', () => {\n        fixture.detectChanges();\n\n        testComponent.datepicker.open();\n        fixture.detectChanges();\n\n        expect(document.querySelector('mat-dialog-container')).not.toBeNull();\n\n        let cells = document.querySelectorAll('.mat-calendar-body-cell');\n        expect(cells[0].classList).toContain('mat-calendar-body-disabled');\n        expect(cells[1].classList).not.toContain('mat-calendar-body-disabled');\n      });\n    });\n\n    describe('datepicker with change and input events', () => {\n      let fixture: ComponentFixture<DatepickerWithChangeAndInputEvents>;\n      let testComponent: DatepickerWithChangeAndInputEvents;\n      let inputEl: HTMLInputElement;\n\n      beforeEach(fakeAsync(() => {\n        fixture = createComponent(DatepickerWithChangeAndInputEvents, [MatNativeDateModule]);\n        fixture.detectChanges();\n\n        testComponent = fixture.componentInstance;\n        inputEl = fixture.debugElement.query(By.css('input')).nativeElement;\n\n        spyOn(testComponent, 'onChange');\n        spyOn(testComponent, 'onInput');\n        spyOn(testComponent, 'onDateChange');\n        spyOn(testComponent, 'onDateInput');\n      }));\n\n      afterEach(fakeAsync(() => {\n        testComponent.datepicker.close();\n        fixture.detectChanges();\n      }));\n\n      it('should fire input and dateInput events when user types input', () => {\n        expect(testComponent.onChange).not.toHaveBeenCalled();\n        expect(testComponent.onDateChange).not.toHaveBeenCalled();\n        expect(testComponent.onInput).not.toHaveBeenCalled();\n        expect(testComponent.onDateInput).not.toHaveBeenCalled();\n\n        inputEl.value = '2001-01-01';\n        dispatchFakeEvent(inputEl, 'input');\n        fixture.detectChanges();\n\n        expect(testComponent.onChange).not.toHaveBeenCalled();\n        expect(testComponent.onDateChange).not.toHaveBeenCalled();\n        expect(testComponent.onInput).toHaveBeenCalled();\n        expect(testComponent.onDateInput).toHaveBeenCalled();\n      });\n\n      it('should fire change and dateChange events when user commits typed input', () => {\n        expect(testComponent.onChange).not.toHaveBeenCalled();\n        expect(testComponent.onDateChange).not.toHaveBeenCalled();\n        expect(testComponent.onInput).not.toHaveBeenCalled();\n        expect(testComponent.onDateInput).not.toHaveBeenCalled();\n\n        dispatchFakeEvent(inputEl, 'change');\n        fixture.detectChanges();\n\n        expect(testComponent.onChange).toHaveBeenCalled();\n        expect(testComponent.onDateChange).toHaveBeenCalled();\n        expect(testComponent.onInput).not.toHaveBeenCalled();\n        expect(testComponent.onDateInput).not.toHaveBeenCalled();\n      });\n\n      it('should fire dateChange and dateInput events when user selects calendar date',\n        fakeAsync(() => {\n          expect(testComponent.onChange).not.toHaveBeenCalled();\n          expect(testComponent.onDateChange).not.toHaveBeenCalled();\n          expect(testComponent.onInput).not.toHaveBeenCalled();\n          expect(testComponent.onDateInput).not.toHaveBeenCalled();\n\n          testComponent.datepicker.open();\n          fixture.detectChanges();\n\n          expect(document.querySelector('mat-dialog-container')).not.toBeNull();\n\n          const cells = document.querySelectorAll('.mat-calendar-body-cell');\n          dispatchMouseEvent(cells[0], 'click');\n          fixture.detectChanges();\n          flush();\n\n          expect(testComponent.onChange).not.toHaveBeenCalled();\n          expect(testComponent.onDateChange).toHaveBeenCalled();\n          expect(testComponent.onInput).not.toHaveBeenCalled();\n          expect(testComponent.onDateInput).toHaveBeenCalled();\n        })\n      );\n\n      it('should not fire the dateInput event if the value has not changed', () => {\n        expect(testComponent.onDateInput).not.toHaveBeenCalled();\n\n        inputEl.value = '12/12/2012';\n        dispatchFakeEvent(inputEl, 'input');\n        fixture.detectChanges();\n\n        expect(testComponent.onDateInput).toHaveBeenCalledTimes(1);\n\n        dispatchFakeEvent(inputEl, 'input');\n        fixture.detectChanges();\n\n        expect(testComponent.onDateInput).toHaveBeenCalledTimes(1);\n      });\n\n    });\n\n    describe('with ISO 8601 strings as input', () => {\n      let fixture: ComponentFixture<DatepickerWithISOStrings>;\n      let testComponent: DatepickerWithISOStrings;\n\n      beforeEach(fakeAsync(() => {\n        fixture = createComponent(DatepickerWithISOStrings, [MatNativeDateModule]);\n        testComponent = fixture.componentInstance;\n      }));\n\n      afterEach(fakeAsync(() => {\n        testComponent.datepicker.close();\n        fixture.detectChanges();\n      }));\n\n      it('should coerce ISO strings', fakeAsync(() => {\n        expect(() => fixture.detectChanges()).not.toThrow();\n        flush();\n        fixture.detectChanges();\n\n        expect(testComponent.datepicker.startAt).toEqual(new Date(2017, JUL, 1));\n        expect(testComponent.datepickerInput.value).toEqual(new Date(2017, JUN, 1));\n        expect(testComponent.datepickerInput.min).toEqual(new Date(2017, JAN, 1));\n        expect(testComponent.datepickerInput.max).toEqual(new Date(2017, DEC, 31));\n      }));\n    });\n\n    describe('with events', () => {\n      let fixture: ComponentFixture<DatepickerWithEvents>;\n      let testComponent: DatepickerWithEvents;\n\n      beforeEach(fakeAsync(() => {\n        fixture = createComponent(DatepickerWithEvents, [MatNativeDateModule]);\n        fixture.detectChanges();\n        testComponent = fixture.componentInstance;\n      }));\n\n      it('should dispatch an event when a datepicker is opened', () => {\n        testComponent.datepicker.open();\n        fixture.detectChanges();\n\n        expect(testComponent.openedSpy).toHaveBeenCalled();\n      });\n\n      it('should dispatch an event when a datepicker is closed', fakeAsync(() => {\n        testComponent.datepicker.open();\n        fixture.detectChanges();\n\n        testComponent.datepicker.close();\n        flush();\n        fixture.detectChanges();\n\n        expect(testComponent.closedSpy).toHaveBeenCalled();\n      }));\n\n    });\n\n    describe('datepicker that opens on focus', () => {\n      let fixture: ComponentFixture<DatepickerOpeningOnFocus>;\n      let testComponent: DatepickerOpeningOnFocus;\n      let input: HTMLInputElement;\n\n      beforeEach(fakeAsync(() => {\n        fixture = createComponent(DatepickerOpeningOnFocus, [MatNativeDateModule]);\n        fixture.detectChanges();\n        testComponent = fixture.componentInstance;\n        input = fixture.debugElement.query(By.css('input')).nativeElement;\n      }));\n\n      it('should not reopen if the browser fires the focus event asynchronously', fakeAsync(() => {\n        // Stub out the real focus method so we can call it reliably.\n        spyOn(input, 'focus').and.callFake(() => {\n          // Dispatch the event handler async to simulate the IE11 behavior.\n          Promise.resolve().then(() => dispatchFakeEvent(input, 'focus'));\n        });\n\n        // Open initially by focusing.\n        input.focus();\n        fixture.detectChanges();\n        flush();\n\n        // Due to some browser limitations we can't install a stub on `document.activeElement`\n        // so instead we have to override the previously-focused element manually.\n        (fixture.componentInstance.datepicker as any)._focusedElementBeforeOpen = input;\n\n        // Ensure that the datepicker is actually open.\n        expect(testComponent.datepicker.opened).toBe(true, 'Expected datepicker to be open.');\n\n        // Close the datepicker.\n        testComponent.datepicker.close();\n        fixture.detectChanges();\n\n        // Schedule the input to be focused asynchronously.\n        input.focus();\n        fixture.detectChanges();\n\n        // Flush out the scheduled tasks.\n        flush();\n\n        expect(testComponent.datepicker.opened).toBe(false, 'Expected datepicker to be closed.');\n      }));\n    });\n\n    describe('datepicker directionality', () => {\n      it('should pass along the directionality to the popup', () => {\n        const fixture = createComponent(StandardDatepicker, [MatNativeDateModule], [{\n          provide: Directionality,\n          useValue: ({value: 'rtl'})\n        }]);\n\n        fixture.detectChanges();\n        fixture.componentInstance.datepicker.open();\n        fixture.detectChanges();\n\n        const overlay = document.querySelector('.cdk-overlay-connected-position-bounding-box')!;\n\n        expect(overlay.getAttribute('dir')).toBe('rtl');\n      });\n\n      it('should update the popup direction if the directionality value changes', fakeAsync(() => {\n        const dirProvider = {value: 'ltr'};\n        const fixture = createComponent(StandardDatepicker, [MatNativeDateModule], [{\n          provide: Directionality,\n          useFactory: () => dirProvider\n        }]);\n\n        fixture.detectChanges();\n        fixture.componentInstance.datepicker.open();\n        fixture.detectChanges();\n\n        let overlay = document.querySelector('.cdk-overlay-connected-position-bounding-box')!;\n\n        expect(overlay.getAttribute('dir')).toBe('ltr');\n\n        fixture.componentInstance.datepicker.close();\n        fixture.detectChanges();\n        flush();\n\n        dirProvider.value = 'rtl';\n        fixture.componentInstance.datepicker.open();\n        fixture.detectChanges();\n\n        overlay = document.querySelector('.cdk-overlay-connected-position-bounding-box')!;\n\n        expect(overlay.getAttribute('dir')).toBe('rtl');\n      }));\n\n      it('should pass along the directionality to the dialog in touch mode', () => {\n        const fixture = createComponent(StandardDatepicker, [MatNativeDateModule], [{\n          provide: Directionality,\n          useValue: ({value: 'rtl'})\n        }]);\n\n        fixture.componentInstance.touch = true;\n        fixture.detectChanges();\n        fixture.componentInstance.datepicker.open();\n        fixture.detectChanges();\n\n        const overlay = document.querySelector('.cdk-global-overlay-wrapper')!;\n\n        expect(overlay.getAttribute('dir')).toBe('rtl');\n      });\n\n    });\n\n  });\n\n  describe('with missing DateAdapter and MAT_DATE_FORMATS', () => {\n    it('should throw when created', () => {\n      expect(() => createComponent(StandardDatepicker))\n        .toThrowError(/MatDatepicker: No provider found for .*/);\n    });\n  });\n\n  describe('popup positioning', () => {\n    let fixture: ComponentFixture<StandardDatepicker>;\n    let testComponent: StandardDatepicker;\n    let input: HTMLElement;\n\n    beforeEach(fakeAsync(() => {\n      fixture = createComponent(StandardDatepicker, [MatNativeDateModule]);\n      fixture.detectChanges();\n      testComponent = fixture.componentInstance;\n      input = fixture.debugElement.query(By.css('input')).nativeElement;\n      input.style.position = 'fixed';\n    }));\n\n    it('should be below and to the right when there is plenty of space', () => {\n      input.style.top = input.style.left = '20px';\n      testComponent.datepicker.open();\n      fixture.detectChanges();\n\n      const overlayRect = document.querySelector('.cdk-overlay-pane')!.getBoundingClientRect();\n      const inputRect = input.getBoundingClientRect();\n\n      expect(Math.floor(overlayRect.top))\n          .toBe(Math.floor(inputRect.bottom), 'Expected popup to align to input bottom.');\n      expect(Math.floor(overlayRect.left))\n          .toBe(Math.floor(inputRect.left), 'Expected popup to align to input left.');\n    });\n\n    it('should be above and to the right when there is no space below', () => {\n      input.style.bottom = input.style.left = '20px';\n      testComponent.datepicker.open();\n      fixture.detectChanges();\n\n      const overlayRect = document.querySelector('.cdk-overlay-pane')!.getBoundingClientRect();\n      const inputRect = input.getBoundingClientRect();\n\n      expect(Math.floor(overlayRect.bottom))\n          .toBe(Math.floor(inputRect.top), 'Expected popup to align to input top.');\n      expect(Math.floor(overlayRect.left))\n          .toBe(Math.floor(inputRect.left), 'Expected popup to align to input left.');\n    });\n\n    it('should be below and to the left when there is no space on the right', () => {\n      input.style.top = input.style.right = '20px';\n      testComponent.datepicker.open();\n      fixture.detectChanges();\n\n      const overlayRect = document.querySelector('.cdk-overlay-pane')!.getBoundingClientRect();\n      const inputRect = input.getBoundingClientRect();\n\n      expect(Math.floor(overlayRect.top))\n          .toBe(Math.floor(inputRect.bottom), 'Expected popup to align to input bottom.');\n      expect(Math.floor(overlayRect.right))\n          .toBe(Math.floor(inputRect.right), 'Expected popup to align to input right.');\n    });\n\n    it('should be above and to the left when there is no space on the bottom', () => {\n      input.style.bottom = input.style.right = '20px';\n      testComponent.datepicker.open();\n      fixture.detectChanges();\n\n      const overlayRect = document.querySelector('.cdk-overlay-pane')!.getBoundingClientRect();\n      const inputRect = input.getBoundingClientRect();\n\n      expect(Math.floor(overlayRect.bottom))\n          .toBe(Math.floor(inputRect.top), 'Expected popup to align to input top.');\n      expect(Math.floor(overlayRect.right))\n          .toBe(Math.floor(inputRect.right), 'Expected popup to align to input right.');\n    });\n\n  });\n\n  describe('internationalization', () => {\n    let fixture: ComponentFixture<DatepickerWithi18n>;\n    let testComponent: DatepickerWithi18n;\n    let input: HTMLInputElement;\n\n    beforeEach(fakeAsync(() => {\n      fixture = createComponent(DatepickerWithi18n, [MatNativeDateModule, NativeDateModule],\n        [{provide: MAT_DATE_LOCALE, useValue: 'de-DE'}]);\n      fixture.detectChanges();\n      testComponent = fixture.componentInstance;\n      input = fixture.nativeElement.querySelector('input') as HTMLInputElement;\n    }));\n\n    it('should have the correct input value even when inverted date format', fakeAsync(() => {\n      if (typeof Intl === 'undefined') {\n        // Skip this test if the internationalization API is not supported in the current\n        // browser. Browsers like Safari 9 do not support the \"Intl\" API.\n        return;\n      }\n\n      const selected = new Date(2017, SEP, 1);\n      testComponent.date = selected;\n      fixture.detectChanges();\n      flush();\n      fixture.detectChanges();\n\n      // Normally the proper date format would 01.09.2017, but some browsers seem format the\n      // date without the leading zero. (e.g. 1.9.2017).\n      expect(input.value).toMatch(/0?1\\.0?9\\.2017/);\n      expect(testComponent.datepickerInput.value).toBe(selected);\n    }));\n  });\n\n  describe('datepicker with custom header', () => {\n    let fixture: ComponentFixture<DatepickerWithCustomHeader>;\n    let testComponent: DatepickerWithCustomHeader;\n\n    beforeEach(fakeAsync(() => {\n      fixture = createComponent(\n        DatepickerWithCustomHeader,\n        [MatNativeDateModule],\n        [],\n        [CustomHeaderForDatepicker]\n      );\n      fixture.detectChanges();\n      testComponent = fixture.componentInstance;\n    }));\n\n    it('should instantiate a datepicker with a custom header', fakeAsync(() => {\n      expect(testComponent).toBeTruthy();\n    }));\n\n    it('should find the standard header element', fakeAsync(() => {\n      testComponent.datepicker.open();\n      fixture.detectChanges();\n      flush();\n      fixture.detectChanges();\n\n      expect(document.querySelector('mat-calendar-header')).toBeTruthy();\n    }));\n\n    it('should find the custom element', fakeAsync(() => {\n        testComponent.datepicker.open();\n        fixture.detectChanges();\n        flush();\n        fixture.detectChanges();\n\n        expect(document.querySelector('.custom-element')).toBeTruthy();\n    }));\n  });\n\n});\n\n\n@Component({\n  template: `\n    <input [matDatepicker]=\"d\" [value]=\"date\">\n    <mat-datepicker #d [touchUi]=\"touch\" [disabled]=\"disabled\" [opened]=\"opened\"></mat-datepicker>\n  `,\n})\nclass StandardDatepicker {\n  opened = false;\n  touch = false;\n  disabled = false;\n  date: Date | null = new Date(2020, JAN, 1);\n  @ViewChild('d') datepicker: MatDatepicker<Date>;\n  @ViewChild(MatDatepickerInput) datepickerInput: MatDatepickerInput<Date>;\n}\n\n\n@Component({\n  template: `\n    <input [matDatepicker]=\"d\"><input [matDatepicker]=\"d\"><mat-datepicker #d></mat-datepicker>\n  `,\n})\nclass MultiInputDatepicker {}\n\n\n@Component({\n  template: `<mat-datepicker #d></mat-datepicker>`,\n})\nclass NoInputDatepicker {\n  @ViewChild('d') datepicker: MatDatepicker<Date>;\n}\n\n\n@Component({\n  template: `\n    <input [matDatepicker]=\"d\" [value]=\"date\">\n    <mat-datepicker #d [startAt]=\"startDate\"></mat-datepicker>\n  `,\n})\nclass DatepickerWithStartAt {\n  date = new Date(2020, JAN, 1);\n  startDate = new Date(2010, JAN, 1);\n  @ViewChild('d') datepicker: MatDatepicker<Date>;\n}\n\n\n@Component({\n  template: `\n    <input [matDatepicker]=\"d\" [value]=\"date\">\n    <mat-datepicker #d startView=\"year\" (monthSelected)=\"onYearSelection()\"></mat-datepicker>\n  `,\n})\nclass DatepickerWithStartViewYear {\n  date = new Date(2020, JAN, 1);\n  @ViewChild('d') datepicker: MatDatepicker<Date>;\n\n  onYearSelection() {}\n}\n\n\n@Component({\n  template: `\n    <input [matDatepicker]=\"d\" [value]=\"date\">\n    <mat-datepicker #d startView=\"multi-year\"\n        (yearSelected)=\"onMultiYearSelection()\"></mat-datepicker>\n  `,\n})\nclass DatepickerWithStartViewMultiYear {\n  date = new Date(2020, JAN, 1);\n  @ViewChild('d') datepicker: MatDatepicker<Date>;\n\n  onMultiYearSelection() {}\n}\n\n\n@Component({\n  template: `\n    <input [(ngModel)]=\"selected\" [matDatepicker]=\"d\">\n    <mat-datepicker #d></mat-datepicker>\n  `,\n})\nclass DatepickerWithNgModel {\n  selected: Date | null = null;\n  @ViewChild('d') datepicker: MatDatepicker<Date>;\n  @ViewChild(MatDatepickerInput) datepickerInput: MatDatepickerInput<Date>;\n}\n\n\n@Component({\n  template: `\n    <input [formControl]=\"formControl\" [matDatepicker]=\"d\">\n    <mat-datepicker-toggle [for]=\"d\"></mat-datepicker-toggle>\n    <mat-datepicker #d></mat-datepicker>\n  `,\n})\nclass DatepickerWithFormControl {\n  formControl = new FormControl();\n  @ViewChild('d') datepicker: MatDatepicker<Date>;\n  @ViewChild(MatDatepickerInput) datepickerInput: MatDatepickerInput<Date>;\n  @ViewChild(MatDatepickerToggle) datepickerToggle: MatDatepickerToggle<Date>;\n}\n\n\n@Component({\n  template: `\n    <input [matDatepicker]=\"d\">\n    <mat-datepicker-toggle [for]=\"d\"></mat-datepicker-toggle>\n    <mat-datepicker #d [touchUi]=\"touchUI\"></mat-datepicker>\n  `,\n})\nclass DatepickerWithToggle {\n  @ViewChild('d') datepicker: MatDatepicker<Date>;\n  @ViewChild(MatDatepickerInput) input: MatDatepickerInput<Date>;\n  touchUI = true;\n}\n\n\n@Component({\n  template: `\n    <input [matDatepicker]=\"d\">\n    <mat-datepicker-toggle [for]=\"d\">\n      <div class=\"custom-icon\" matDatepickerToggleIcon></div>\n    </mat-datepicker-toggle>\n    <mat-datepicker #d></mat-datepicker>\n  `,\n})\nclass DatepickerWithCustomIcon {}\n\n\n@Component({\n  template: `\n      <mat-form-field>\n        <input matInput [matDatepicker]=\"d\">\n        <mat-datepicker #d></mat-datepicker>\n      </mat-form-field>\n  `,\n})\nclass FormFieldDatepicker {\n  @ViewChild('d') datepicker: MatDatepicker<Date>;\n  @ViewChild(MatDatepickerInput) datepickerInput: MatDatepickerInput<Date>;\n  @ViewChild(MatFormField) formField: MatFormField;\n}\n\n\n@Component({\n  template: `\n    <input [matDatepicker]=\"d\" [(ngModel)]=\"date\" [min]=\"minDate\" [max]=\"maxDate\">\n    <mat-datepicker-toggle [for]=\"d\"></mat-datepicker-toggle>\n    <mat-datepicker #d></mat-datepicker>\n  `,\n})\nclass DatepickerWithMinAndMaxValidation {\n  @ViewChild('d') datepicker: MatDatepicker<Date>;\n  @ViewChild(NgModel) model: NgModel;\n  date: Date | null;\n  minDate = new Date(2010, JAN, 1);\n  maxDate = new Date(2020, JAN, 1);\n}\n\n\n@Component({\n  template: `\n    <input [matDatepicker]=\"d\" [(ngModel)]=\"date\" [matDatepickerFilter]=\"filter\">\n    <mat-datepicker-toggle [for]=\"d\"></mat-datepicker-toggle>\n    <mat-datepicker #d [touchUi]=\"true\"></mat-datepicker>\n  `,\n})\nclass DatepickerWithFilterAndValidation {\n  @ViewChild('d') datepicker: MatDatepicker<Date>;\n  date: Date;\n  filter = (date: Date) => date.getDate() != 1;\n}\n\n\n@Component({\n  template: `\n    <input [matDatepicker]=\"d\" (change)=\"onChange()\" (input)=\"onInput()\"\n           (dateChange)=\"onDateChange()\" (dateInput)=\"onDateInput()\">\n    <mat-datepicker #d [touchUi]=\"true\"></mat-datepicker>\n  `\n})\nclass DatepickerWithChangeAndInputEvents {\n  @ViewChild('d') datepicker: MatDatepicker<Date>;\n\n  onChange() {}\n\n  onInput() {}\n\n  onDateChange() {}\n\n  onDateInput() {}\n}\n\n\n@Component({\n  template: `\n    <input [matDatepicker]=\"d\" [(ngModel)]=\"date\">\n    <mat-datepicker #d></mat-datepicker>\n  `\n})\nclass DatepickerWithi18n {\n  date: Date | null = new Date(2010, JAN, 1);\n  @ViewChild('d') datepicker: MatDatepicker<Date>;\n  @ViewChild(MatDatepickerInput) datepickerInput: MatDatepickerInput<Date>;\n}\n\n\n@Component({\n  template: `\n    <input [matDatepicker]=\"d\" [(ngModel)]=\"value\" [min]=\"min\" [max]=\"max\">\n    <mat-datepicker #d [startAt]=\"startAt\"></mat-datepicker>\n  `\n})\nclass DatepickerWithISOStrings {\n  value = new Date(2017, JUN, 1).toISOString();\n  min = new Date(2017, JAN, 1).toISOString();\n  max = new Date (2017, DEC, 31).toISOString();\n  startAt = new Date(2017, JUL, 1).toISOString();\n  @ViewChild('d') datepicker: MatDatepicker<Date>;\n  @ViewChild(MatDatepickerInput) datepickerInput: MatDatepickerInput<Date>;\n}\n\n\n@Component({\n  template: `\n    <input [(ngModel)]=\"selected\" [matDatepicker]=\"d\">\n    <mat-datepicker (opened)=\"openedSpy()\" (closed)=\"closedSpy()\" #d></mat-datepicker>\n  `,\n})\nclass DatepickerWithEvents {\n  selected: Date | null = null;\n  openedSpy = jasmine.createSpy('opened spy');\n  closedSpy = jasmine.createSpy('closed spy');\n  @ViewChild('d') datepicker: MatDatepicker<Date>;\n}\n\n\n@Component({\n  template: `\n    <input (focus)=\"d.open()\" [matDatepicker]=\"d\">\n    <mat-datepicker #d=\"matDatepicker\"></mat-datepicker>\n  `,\n})\nclass DatepickerOpeningOnFocus {\n  @ViewChild(MatDatepicker) datepicker: MatDatepicker<Date>;\n}\n\n\n@Component({\n  template: `\n    <input [matDatepicker]=\"ch\">\n    <mat-datepicker #ch [calendarHeaderComponent]=\"customHeaderForDatePicker\"></mat-datepicker>\n  `,\n})\nclass DatepickerWithCustomHeader {\n  @ViewChild('ch') datepicker: MatDatepicker<Date>;\n  customHeaderForDatePicker = CustomHeaderForDatepicker;\n}\n\n@Component({\n  template: `\n    <div class=\"custom-element\">Custom element</div>\n    <mat-calendar-header></mat-calendar-header>\n  `,\n})\nclass CustomHeaderForDatepicker {}\n\n@Component({\n  template: `\n    <input [matDatepicker]=\"assignedDatepicker\" [value]=\"date\">\n    <mat-datepicker #d [touchUi]=\"touch\"></mat-datepicker>\n  `,\n})\nclass DelayedDatepicker {\n  @ViewChild('d') datepicker: MatDatepicker<Date>;\n  @ViewChild(MatDatepickerInput) datepickerInput: MatDatepickerInput<Date>;\n  date: Date | null;\n  assignedDatepicker: MatDatepicker<Date>;\n}\n\n\n\n@Component({\n  template: `\n    <input [matDatepicker]=\"d\">\n    <mat-datepicker-toggle tabIndex=\"7\" [for]=\"d\">\n      <div class=\"custom-icon\" matDatepickerToggleIcon></div>\n    </mat-datepicker-toggle>\n    <mat-datepicker #d></mat-datepicker>\n  `,\n})\nclass DatepickerWithTabindexOnToggle {}\n"]}