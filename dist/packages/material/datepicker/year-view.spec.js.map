{"version":3,"file":"year-view.spec.js","sourceRoot":"","sources":["../../../../src/lib/datepicker/year-view.spec.ts"],"names":[],"mappings":"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","sourcesContent":["import {Direction, Directionality} from '@angular/cdk/bidi';\nimport {\n  DOWN_ARROW,\n  END,\n  HOME,\n  LEFT_ARROW,\n  PAGE_DOWN,\n  PAGE_UP,\n  RIGHT_ARROW,\n  UP_ARROW,\n} from '@angular/cdk/keycodes';\nimport {dispatchFakeEvent, dispatchKeyboardEvent} from '@angular/cdk/testing';\nimport {Component, ViewChild} from '@angular/core';\nimport {async, ComponentFixture, TestBed} from '@angular/core/testing';\nimport {MatNativeDateModule} from '@angular/material/core';\nimport {AUG, DEC, FEB, JAN, JUL, JUN, MAR, MAY, NOV, OCT, SEP} from '@angular/material/testing';\nimport {By} from '@angular/platform-browser';\nimport {MatCalendarBody} from './calendar-body';\nimport {MatYearView} from './year-view';\n\ndescribe('MatYearView', () => {\n  let dir: {value: Direction};\n\n  beforeEach(async(() => {\n    TestBed.configureTestingModule({\n      imports: [\n        MatNativeDateModule,\n      ],\n      declarations: [\n        MatCalendarBody,\n        MatYearView,\n\n        // Test components.\n        StandardYearView,\n        YearViewWithDateFilter,\n      ],\n      providers: [\n        {provide: Directionality, useFactory: () => dir = {value: 'ltr'}}\n      ]\n    });\n\n    TestBed.compileComponents();\n  }));\n\n  describe('standard year view', () => {\n    let fixture: ComponentFixture<StandardYearView>;\n    let testComponent: StandardYearView;\n    let yearViewNativeElement: Element;\n\n    beforeEach(() => {\n      fixture = TestBed.createComponent(StandardYearView);\n      fixture.detectChanges();\n\n      let yearViewDebugElement = fixture.debugElement.query(By.directive(MatYearView));\n      yearViewNativeElement = yearViewDebugElement.nativeElement;\n      testComponent = fixture.componentInstance;\n    });\n\n    it('has correct year label', () => {\n      let labelEl = yearViewNativeElement.querySelector('.mat-calendar-body-label')!;\n      expect(labelEl.innerHTML.trim()).toBe('2017');\n    });\n\n    it('has 12 months', () => {\n      let cellEls = yearViewNativeElement.querySelectorAll('.mat-calendar-body-cell')!;\n      expect(cellEls.length).toBe(12);\n    });\n\n    it('shows selected month if in same year', () => {\n      let selectedEl = yearViewNativeElement.querySelector('.mat-calendar-body-selected')!;\n      expect(selectedEl.innerHTML.trim()).toBe('MAR');\n    });\n\n    it('does not show selected month if in different year', () => {\n      testComponent.selected = new Date(2016, MAR, 10);\n      fixture.detectChanges();\n\n      let selectedEl = yearViewNativeElement.querySelector('.mat-calendar-body-selected');\n      expect(selectedEl).toBeNull();\n    });\n\n    it('fires selected change event on cell clicked', () => {\n      let cellEls = yearViewNativeElement.querySelectorAll('.mat-calendar-body-cell');\n      (cellEls[cellEls.length - 1] as HTMLElement).click();\n      fixture.detectChanges();\n\n      let selectedEl = yearViewNativeElement.querySelector('.mat-calendar-body-selected')!;\n      expect(selectedEl.innerHTML.trim()).toBe('DEC');\n    });\n\n    it('should emit the selected month on cell clicked', () => {\n      let cellEls = yearViewNativeElement.querySelectorAll('.mat-calendar-body-cell');\n\n      (cellEls[cellEls.length - 1] as HTMLElement).click();\n      fixture.detectChanges();\n\n      const normalizedMonth: Date = fixture.componentInstance.selectedMonth;\n      expect(normalizedMonth.getMonth()).toEqual(11);\n    });\n\n    it('should mark active date', () => {\n      let cellEls = yearViewNativeElement.querySelectorAll('.mat-calendar-body-cell');\n      expect((cellEls[0] as HTMLElement).innerText.trim()).toBe('JAN');\n      expect(cellEls[0].classList).toContain('mat-calendar-body-active');\n    });\n\n    it('should allow selection of month with less days than current active date', () => {\n      testComponent.date = new Date(2017, JUL, 31);\n      fixture.detectChanges();\n\n      expect(testComponent.yearView._monthSelected(JUN));\n      fixture.detectChanges();\n\n      expect(testComponent.selected).toEqual(new Date(2017, JUN, 30));\n    });\n\n    describe('a11y', () => {\n      describe('calendar body', () => {\n        let calendarBodyEl: HTMLElement;\n        let calendarInstance: StandardYearView;\n\n        beforeEach(() => {\n          calendarInstance = fixture.componentInstance;\n          calendarBodyEl =\n            fixture.debugElement.nativeElement.querySelector('.mat-calendar-body') as HTMLElement;\n          expect(calendarBodyEl).not.toBeNull();\n          dir.value = 'ltr';\n          fixture.componentInstance.date = new Date(2017, JAN, 5);\n          dispatchFakeEvent(calendarBodyEl, 'focus');\n          fixture.detectChanges();\n        });\n\n        it('should decrement month on left arrow press', () => {\n          dispatchKeyboardEvent(calendarBodyEl, 'keydown', LEFT_ARROW);\n          fixture.detectChanges();\n\n          expect(calendarInstance.date).toEqual(new Date(2016, DEC, 5));\n\n          dispatchKeyboardEvent(calendarBodyEl, 'keydown', LEFT_ARROW);\n          fixture.detectChanges();\n\n          expect(calendarInstance.date).toEqual(new Date(2016, NOV, 5));\n        });\n\n        it('should increment month on left arrow press in rtl', () => {\n          dir.value = 'rtl';\n\n          dispatchKeyboardEvent(calendarBodyEl, 'keydown', LEFT_ARROW);\n          fixture.detectChanges();\n\n          expect(calendarInstance.date).toEqual(new Date(2017, FEB, 5));\n\n          dispatchKeyboardEvent(calendarBodyEl, 'keydown', LEFT_ARROW);\n          fixture.detectChanges();\n\n          expect(calendarInstance.date).toEqual(new Date(2017, MAR, 5));\n        });\n\n        it('should increment month on right arrow press', () => {\n          dispatchKeyboardEvent(calendarBodyEl, 'keydown', RIGHT_ARROW);\n          fixture.detectChanges();\n\n          expect(calendarInstance.date).toEqual(new Date(2017, FEB, 5));\n\n          dispatchKeyboardEvent(calendarBodyEl, 'keydown', RIGHT_ARROW);\n          fixture.detectChanges();\n\n          expect(calendarInstance.date).toEqual(new Date(2017, MAR, 5));\n        });\n\n        it('should decrement month on right arrow press in rtl', () => {\n          dir.value = 'rtl';\n\n          dispatchKeyboardEvent(calendarBodyEl, 'keydown', RIGHT_ARROW);\n          fixture.detectChanges();\n\n          expect(calendarInstance.date).toEqual(new Date(2016, DEC, 5));\n\n          dispatchKeyboardEvent(calendarBodyEl, 'keydown', RIGHT_ARROW);\n          fixture.detectChanges();\n\n          expect(calendarInstance.date).toEqual(new Date(2016, NOV, 5));\n        });\n\n        it('should go up a row on up arrow press', () => {\n          dispatchKeyboardEvent(calendarBodyEl, 'keydown', UP_ARROW);\n          fixture.detectChanges();\n\n          expect(calendarInstance.date).toEqual(new Date(2016, SEP, 5));\n\n          calendarInstance.date = new Date(2017, JUL, 1);\n          fixture.detectChanges();\n\n          dispatchKeyboardEvent(calendarBodyEl, 'keydown', UP_ARROW);\n          fixture.detectChanges();\n\n          expect(calendarInstance.date).toEqual(new Date(2017, MAR, 1));\n\n          calendarInstance.date = new Date(2017, DEC, 10);\n          fixture.detectChanges();\n\n          dispatchKeyboardEvent(calendarBodyEl, 'keydown', UP_ARROW);\n          fixture.detectChanges();\n\n          expect(calendarInstance.date).toEqual(new Date(2017, AUG, 10));\n        });\n\n        it('should go down a row on down arrow press', () => {\n          dispatchKeyboardEvent(calendarBodyEl, 'keydown', DOWN_ARROW);\n          fixture.detectChanges();\n\n          expect(calendarInstance.date).toEqual(new Date(2017, MAY, 5));\n\n          calendarInstance.date = new Date(2017, JUN, 1);\n          fixture.detectChanges();\n\n          dispatchKeyboardEvent(calendarBodyEl, 'keydown', DOWN_ARROW);\n          fixture.detectChanges();\n\n          expect(calendarInstance.date).toEqual(new Date(2017, OCT, 1));\n\n          calendarInstance.date = new Date(2017, SEP, 30);\n          fixture.detectChanges();\n\n          dispatchKeyboardEvent(calendarBodyEl, 'keydown', DOWN_ARROW);\n          fixture.detectChanges();\n\n          expect(calendarInstance.date).toEqual(new Date(2018, JAN, 30));\n        });\n\n        it('should go to first month of the year on home press', () => {\n          calendarInstance.date = new Date(2017, SEP, 30);\n          fixture.detectChanges();\n\n          dispatchKeyboardEvent(calendarBodyEl, 'keydown', HOME);\n          fixture.detectChanges();\n\n          expect(calendarInstance.date).toEqual(new Date(2017, JAN, 30));\n\n          dispatchKeyboardEvent(calendarBodyEl, 'keydown', HOME);\n          fixture.detectChanges();\n\n          expect(calendarInstance.date).toEqual(new Date(2017, JAN, 30));\n        });\n\n        it('should go to last month of the year on end press', () => {\n          calendarInstance.date = new Date(2017, OCT, 31);\n          fixture.detectChanges();\n\n          dispatchKeyboardEvent(calendarBodyEl, 'keydown', END);\n          fixture.detectChanges();\n\n          expect(calendarInstance.date).toEqual(new Date(2017, DEC, 31));\n\n          dispatchKeyboardEvent(calendarBodyEl, 'keydown', END);\n          fixture.detectChanges();\n\n          expect(calendarInstance.date).toEqual(new Date(2017, DEC, 31));\n        });\n\n        it('should go back one year on page up press', () => {\n          calendarInstance.date = new Date(2016, FEB, 29);\n          fixture.detectChanges();\n\n          dispatchKeyboardEvent(calendarBodyEl, 'keydown', PAGE_UP);\n          fixture.detectChanges();\n\n          expect(calendarInstance.date).toEqual(new Date(2015, FEB, 28));\n\n          dispatchKeyboardEvent(calendarBodyEl, 'keydown', PAGE_UP);\n          fixture.detectChanges();\n\n          expect(calendarInstance.date).toEqual(new Date(2014, FEB, 28));\n        });\n\n        it('should go forward one year on page down press', () => {\n          calendarInstance.date = new Date(2016, FEB, 29);\n          fixture.detectChanges();\n\n          dispatchKeyboardEvent(calendarBodyEl, 'keydown', PAGE_DOWN);\n          fixture.detectChanges();\n\n          expect(calendarInstance.date).toEqual(new Date(2017, FEB, 28));\n\n          dispatchKeyboardEvent(calendarBodyEl, 'keydown', PAGE_DOWN);\n          fixture.detectChanges();\n\n          expect(calendarInstance.date).toEqual(new Date(2018, FEB, 28));\n        });\n      });\n    });\n  });\n\n  describe('year view with date filter', () => {\n    let fixture: ComponentFixture<YearViewWithDateFilter>;\n    let yearViewNativeElement: Element;\n\n    beforeEach(() => {\n      fixture = TestBed.createComponent(YearViewWithDateFilter);\n      fixture.detectChanges();\n\n      const yearViewDebugElement = fixture.debugElement.query(By.directive(MatYearView));\n      yearViewNativeElement = yearViewDebugElement.nativeElement;\n    });\n\n    it('should disable months with no enabled days', () => {\n      const cells = yearViewNativeElement.querySelectorAll('.mat-calendar-body-cell');\n      expect(cells[0].classList).not.toContain('mat-calendar-body-disabled');\n      expect(cells[1].classList).toContain('mat-calendar-body-disabled');\n    });\n  });\n});\n\n\n@Component({\n  template: `\n    <mat-year-view [(activeDate)]=\"date\" [(selected)]=\"selected\"\n                   (monthSelected)=\"selectedMonth=$event\"></mat-year-view>`\n})\nclass StandardYearView {\n  date = new Date(2017, JAN, 5);\n  selected = new Date(2017, MAR, 10);\n  selectedMonth: Date;\n\n  @ViewChild(MatYearView) yearView: MatYearView<Date>;\n}\n\n\n@Component({\n  template: `<mat-year-view [activeDate]=\"activeDate\" [dateFilter]=\"dateFilter\"></mat-year-view>`\n})\nclass YearViewWithDateFilter {\n  activeDate = new Date(2017, JAN, 1);\n  dateFilter(date: Date) {\n    if (date.getMonth() == JAN) {\n      return date.getDate() == 10;\n    }\n    if (date.getMonth() == FEB) {\n      return false;\n    }\n    return true;\n  }\n}\n"]}