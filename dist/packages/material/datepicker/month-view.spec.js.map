{"version":3,"file":"month-view.spec.js","sourceRoot":"","sources":["../../../../src/lib/datepicker/month-view.spec.ts"],"names":[],"mappings":"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","sourcesContent":["import {Direction, Directionality} from '@angular/cdk/bidi';\nimport {\n  DOWN_ARROW,\n  END,\n  ENTER,\n  HOME,\n  LEFT_ARROW,\n  PAGE_DOWN,\n  PAGE_UP,\n  RIGHT_ARROW,\n  SPACE,\n  UP_ARROW,\n} from '@angular/cdk/keycodes';\nimport {dispatchFakeEvent, dispatchKeyboardEvent} from '@angular/cdk/testing';\nimport {Component} from '@angular/core';\nimport {async, ComponentFixture, TestBed} from '@angular/core/testing';\nimport {MatNativeDateModule} from '@angular/material/core';\nimport {DEC, FEB, JAN, MAR, NOV} from '@angular/material/testing';\nimport {By} from '@angular/platform-browser';\nimport {MatCalendarBody} from './calendar-body';\nimport {MatMonthView} from './month-view';\n\ndescribe('MatMonthView', () => {\n  let dir: {value: Direction};\n\n  beforeEach(async(() => {\n    TestBed.configureTestingModule({\n      imports: [\n        MatNativeDateModule,\n      ],\n      declarations: [\n        MatCalendarBody,\n        MatMonthView,\n\n        // Test components.\n        StandardMonthView,\n        MonthViewWithDateFilter,\n        MonthViewWithDateClass,\n      ],\n      providers: [\n        {provide: Directionality, useFactory: () => dir = {value: 'ltr'}}\n      ]\n    });\n\n    TestBed.compileComponents();\n  }));\n\n  describe('standard month view', () => {\n    let fixture: ComponentFixture<StandardMonthView>;\n    let testComponent: StandardMonthView;\n    let monthViewNativeElement: Element;\n\n    beforeEach(() => {\n      fixture = TestBed.createComponent(StandardMonthView);\n      fixture.detectChanges();\n\n      let monthViewDebugElement = fixture.debugElement.query(By.directive(MatMonthView));\n      monthViewNativeElement = monthViewDebugElement.nativeElement;\n      testComponent = fixture.componentInstance;\n    });\n\n    it('has correct month label', () => {\n      let labelEl = monthViewNativeElement.querySelector('.mat-calendar-body-label')!;\n      expect(labelEl.innerHTML.trim()).toBe('JAN');\n    });\n\n    it('has 31 days', () => {\n      let cellEls = monthViewNativeElement.querySelectorAll('.mat-calendar-body-cell')!;\n      expect(cellEls.length).toBe(31);\n    });\n\n    it('shows selected date if in same month', () => {\n      let selectedEl = monthViewNativeElement.querySelector('.mat-calendar-body-selected')!;\n      expect(selectedEl.innerHTML.trim()).toBe('10');\n    });\n\n    it('does not show selected date if in different month', () => {\n      testComponent.selected = new Date(2017, MAR, 10);\n      fixture.detectChanges();\n\n      let selectedEl = monthViewNativeElement.querySelector('.mat-calendar-body-selected');\n      expect(selectedEl).toBeNull();\n    });\n\n    it('fires selected change event on cell clicked', () => {\n      let cellEls = monthViewNativeElement.querySelectorAll('.mat-calendar-body-cell');\n      (cellEls[cellEls.length - 1] as HTMLElement).click();\n      fixture.detectChanges();\n\n      let selectedEl = monthViewNativeElement.querySelector('.mat-calendar-body-selected')!;\n      expect(selectedEl.innerHTML.trim()).toBe('31');\n    });\n\n    it('should mark active date', () => {\n      let cellEls = monthViewNativeElement.querySelectorAll('.mat-calendar-body-cell');\n      expect((cellEls[4] as HTMLElement).innerText.trim()).toBe('5');\n      expect(cellEls[4].classList).toContain('mat-calendar-body-active');\n    });\n\n    describe('a11y', () => {\n      describe('calendar body', () => {\n        let calendarBodyEl: HTMLElement;\n        let calendarInstance: StandardMonthView;\n\n        beforeEach(() => {\n          calendarInstance = fixture.componentInstance;\n          calendarBodyEl =\n            fixture.debugElement.nativeElement.querySelector('.mat-calendar-body') as HTMLElement;\n          expect(calendarBodyEl).not.toBeNull();\n          dir.value = 'ltr';\n          fixture.componentInstance.date = new Date(2017, JAN, 5);\n          dispatchFakeEvent(calendarBodyEl, 'focus');\n          fixture.detectChanges();\n        });\n\n        it('should decrement date on left arrow press', () => {\n          dispatchKeyboardEvent(calendarBodyEl, 'keydown', LEFT_ARROW);\n          fixture.detectChanges();\n          expect(calendarInstance.date).toEqual(new Date(2017, JAN, 4));\n\n          calendarInstance.date = new Date(2017, JAN, 1);\n          fixture.detectChanges();\n\n          dispatchKeyboardEvent(calendarBodyEl, 'keydown', LEFT_ARROW);\n          fixture.detectChanges();\n\n          expect(calendarInstance.date).toEqual(new Date(2016, DEC, 31));\n        });\n\n        it('should increment date on left arrow press in rtl', () => {\n          dir.value = 'rtl';\n\n          dispatchKeyboardEvent(calendarBodyEl, 'keydown', LEFT_ARROW);\n          fixture.detectChanges();\n\n          expect(calendarInstance.date).toEqual(new Date(2017, JAN, 6));\n\n          dispatchKeyboardEvent(calendarBodyEl, 'keydown', LEFT_ARROW);\n          fixture.detectChanges();\n\n          expect(calendarInstance.date).toEqual(new Date(2017, JAN, 7));\n        });\n\n        it('should increment date on right arrow press', () => {\n          dispatchKeyboardEvent(calendarBodyEl, 'keydown', RIGHT_ARROW);\n          fixture.detectChanges();\n\n          expect(calendarInstance.date).toEqual(new Date(2017, JAN, 6));\n\n          dispatchKeyboardEvent(calendarBodyEl, 'keydown', RIGHT_ARROW);\n          fixture.detectChanges();\n\n          expect(calendarInstance.date).toEqual(new Date(2017, JAN, 7));\n        });\n\n        it('should decrement date on right arrow press in rtl', () => {\n          dir.value = 'rtl';\n\n          dispatchKeyboardEvent(calendarBodyEl, 'keydown', RIGHT_ARROW);\n          fixture.detectChanges();\n\n          expect(calendarInstance.date).toEqual(new Date(2017, JAN, 4));\n\n          calendarInstance.date = new Date(2017, JAN, 1);\n          fixture.detectChanges();\n\n          dispatchKeyboardEvent(calendarBodyEl, 'keydown', RIGHT_ARROW);\n          fixture.detectChanges();\n\n          expect(calendarInstance.date).toEqual(new Date(2016, DEC, 31));\n        });\n\n        it('should go up a row on up arrow press', () => {\n          dispatchKeyboardEvent(calendarBodyEl, 'keydown', UP_ARROW);\n          fixture.detectChanges();\n\n          expect(calendarInstance.date).toEqual(new Date(2016, DEC, 29));\n\n          calendarInstance.date = new Date(2017, JAN, 7);\n          fixture.detectChanges();\n\n          dispatchKeyboardEvent(calendarBodyEl, 'keydown', UP_ARROW);\n          fixture.detectChanges();\n\n          expect(calendarInstance.date).toEqual(new Date(2016, DEC, 31));\n        });\n\n        it('should go down a row on down arrow press', () => {\n          dispatchKeyboardEvent(calendarBodyEl, 'keydown', DOWN_ARROW);\n          fixture.detectChanges();\n\n          expect(calendarInstance.date).toEqual(new Date(2017, JAN, 12));\n\n          dispatchKeyboardEvent(calendarBodyEl, 'keydown', DOWN_ARROW);\n          fixture.detectChanges();\n\n          expect(calendarInstance.date).toEqual(new Date(2017, JAN, 19));\n        });\n\n        it('should go to beginning of the month on home press', () => {\n          dispatchKeyboardEvent(calendarBodyEl, 'keydown', HOME);\n          fixture.detectChanges();\n\n          expect(calendarInstance.date).toEqual(new Date(2017, JAN, 1));\n\n          dispatchKeyboardEvent(calendarBodyEl, 'keydown', HOME);\n          fixture.detectChanges();\n\n          expect(calendarInstance.date).toEqual(new Date(2017, JAN, 1));\n        });\n\n        it('should go to end of the month on end press', () => {\n          calendarInstance.date = new Date(2017, JAN, 10);\n\n          dispatchKeyboardEvent(calendarBodyEl, 'keydown', END);\n          fixture.detectChanges();\n\n          expect(calendarInstance.date).toEqual(new Date(2017, JAN, 31));\n\n          dispatchKeyboardEvent(calendarBodyEl, 'keydown', END);\n          fixture.detectChanges();\n\n          expect(calendarInstance.date).toEqual(new Date(2017, JAN, 31));\n        });\n\n        it('should go back one month on page up press', () => {\n          dispatchKeyboardEvent(calendarBodyEl, 'keydown', PAGE_UP);\n          fixture.detectChanges();\n\n          expect(calendarInstance.date).toEqual(new Date(2016, DEC, 5));\n\n          dispatchKeyboardEvent(calendarBodyEl, 'keydown', PAGE_UP);\n          fixture.detectChanges();\n\n          expect(calendarInstance.date).toEqual(new Date(2016, NOV, 5));\n        });\n\n        it('should go forward one month on page down press', () => {\n          dispatchKeyboardEvent(calendarBodyEl, 'keydown', PAGE_DOWN);\n          fixture.detectChanges();\n\n          expect(calendarInstance.date).toEqual(new Date(2017, FEB, 5));\n\n          dispatchKeyboardEvent(calendarBodyEl, 'keydown', PAGE_DOWN);\n          fixture.detectChanges();\n\n          expect(calendarInstance.date).toEqual(new Date(2017, MAR, 5));\n        });\n\n        it('should select active date on enter', () => {\n          dispatchKeyboardEvent(calendarBodyEl, 'keydown', LEFT_ARROW);\n          fixture.detectChanges();\n\n          expect(testComponent.selected).toEqual(new Date(2017, JAN, 10));\n\n          dispatchKeyboardEvent(calendarBodyEl, 'keydown', ENTER);\n          fixture.detectChanges();\n\n          expect(testComponent.selected).toEqual(new Date(2017, JAN, 4));\n        });\n\n        it('should select active date on space', () => {\n          dispatchKeyboardEvent(calendarBodyEl, 'keydown', LEFT_ARROW);\n          fixture.detectChanges();\n\n          expect(testComponent.selected).toEqual(new Date(2017, JAN, 10));\n\n          dispatchKeyboardEvent(calendarBodyEl, 'keydown', SPACE);\n          fixture.detectChanges();\n\n          expect(testComponent.selected).toEqual(new Date(2017, JAN, 4));\n        });\n      });\n    });\n  });\n\n  describe('month view with date filter', () => {\n    let fixture: ComponentFixture<MonthViewWithDateFilter>;\n    let monthViewNativeElement: Element;\n\n    beforeEach(() => {\n      fixture = TestBed.createComponent(MonthViewWithDateFilter);\n      fixture.detectChanges();\n\n      let monthViewDebugElement = fixture.debugElement.query(By.directive(MatMonthView));\n      monthViewNativeElement = monthViewDebugElement.nativeElement;\n    });\n\n    it('should disable filtered dates', () => {\n      let cells = monthViewNativeElement.querySelectorAll('.mat-calendar-body-cell');\n      expect(cells[0].classList).toContain('mat-calendar-body-disabled');\n      expect(cells[1].classList).not.toContain('mat-calendar-body-disabled');\n    });\n  });\n\n  describe('month view with custom date classes', () => {\n    let fixture: ComponentFixture<MonthViewWithDateClass>;\n    let monthViewNativeElement: Element;\n\n    beforeEach(() => {\n      fixture = TestBed.createComponent(MonthViewWithDateClass);\n      fixture.detectChanges();\n\n      let monthViewDebugElement = fixture.debugElement.query(By.directive(MatMonthView));\n      monthViewNativeElement = monthViewDebugElement.nativeElement;\n    });\n\n    it('should be able to add a custom class to some dates', () => {\n      let cells = monthViewNativeElement.querySelectorAll('.mat-calendar-body-cell');\n      expect(cells[0].classList).not.toContain('even');\n      expect(cells[1].classList).toContain('even');\n    });\n  });\n\n});\n\n\n@Component({\n  template: `<mat-month-view [(activeDate)]=\"date\" [(selected)]=\"selected\"></mat-month-view>`,\n})\nclass StandardMonthView {\n  date = new Date(2017, JAN, 5);\n  selected = new Date(2017, JAN, 10);\n}\n\n\n@Component({\n  template: `<mat-month-view [activeDate]=\"activeDate\" [dateFilter]=\"dateFilter\"></mat-month-view>`\n})\nclass MonthViewWithDateFilter {\n  activeDate = new Date(2017, JAN, 1);\n  dateFilter(date: Date) {\n    return date.getDate() % 2 == 0;\n  }\n}\n\n@Component({\n  template: `<mat-month-view [activeDate]=\"activeDate\" [dateClass]=\"dateClass\"></mat-month-view>`\n})\nclass MonthViewWithDateClass {\n  activeDate = new Date(2017, JAN, 1);\n  dateClass(date: Date) {\n    return date.getDate() % 2 == 0 ? 'even' : undefined;\n  }\n}\n"]}