{"version":3,"file":"calendar-body.spec.js","sourceRoot":"","sources":["../../../../src/lib/datepicker/calendar-body.spec.ts"],"names":[],"mappings":"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","sourcesContent":["import {async, ComponentFixture, TestBed} from '@angular/core/testing';\nimport {Component} from '@angular/core';\nimport {MatCalendarBody, MatCalendarCell, MatCalendarCellCssClasses} from './calendar-body';\nimport {By} from '@angular/platform-browser';\n\n\ndescribe('MatCalendarBody', () => {\n  beforeEach(async(() => {\n    TestBed.configureTestingModule({\n      declarations: [\n        MatCalendarBody,\n\n        // Test components.\n        StandardCalendarBody,\n      ],\n    });\n\n    TestBed.compileComponents();\n  }));\n\n  describe('standard calendar body', () => {\n    let fixture: ComponentFixture<StandardCalendarBody>;\n    let testComponent: StandardCalendarBody;\n    let calendarBodyNativeElement: Element;\n    let rowEls: Element[];\n    let labelEls: Element[];\n    let cellEls: Element[];\n\n    function refreshElementLists() {\n      rowEls = Array.from(calendarBodyNativeElement.querySelectorAll('tr'));\n      labelEls = Array.from(calendarBodyNativeElement.querySelectorAll('.mat-calendar-body-label'));\n      cellEls = Array.from(calendarBodyNativeElement.querySelectorAll('.mat-calendar-body-cell'));\n    }\n\n    beforeEach(() => {\n      fixture = TestBed.createComponent(StandardCalendarBody);\n      fixture.detectChanges();\n\n      const calendarBodyDebugElement = fixture.debugElement.query(By.directive(MatCalendarBody));\n      calendarBodyNativeElement = calendarBodyDebugElement.nativeElement;\n      testComponent = fixture.componentInstance;\n\n      refreshElementLists();\n    });\n\n    it('creates body', () => {\n      expect(rowEls.length).toBe(3);\n      expect(labelEls.length).toBe(1);\n      expect(cellEls.length).toBe(14);\n    });\n\n    it('highlights today', () => {\n      const todayCell = calendarBodyNativeElement.querySelector('.mat-calendar-body-today')!;\n      expect(todayCell).not.toBeNull();\n      expect(todayCell.innerHTML.trim()).toBe('3');\n    });\n\n    it('highlights selected', () => {\n      const selectedCell = calendarBodyNativeElement.querySelector('.mat-calendar-body-selected')!;\n      expect(selectedCell).not.toBeNull();\n      expect(selectedCell.innerHTML.trim()).toBe('4');\n    });\n\n    it('should set aria-selected correctly', () => {\n      const selectedCells = cellEls.filter(c => c.getAttribute('aria-selected') === 'true');\n      const deselectedCells = cellEls.filter(c => c.getAttribute('aria-selected') === 'false');\n\n      expect(selectedCells.length).toBe(1, 'Expected one cell to be marked as selected.');\n      expect(deselectedCells.length)\n          .toBe(cellEls.length - 1, 'Expected remaining cells to be marked as deselected.');\n    });\n\n    it('places label in first row if space is available', () => {\n      testComponent.rows[0] = testComponent.rows[0].slice(3);\n      testComponent.rows = testComponent.rows.slice();\n      fixture.detectChanges();\n      refreshElementLists();\n\n      expect(rowEls.length).toBe(2);\n      expect(labelEls.length).toBe(1);\n      expect(cellEls.length).toBe(11);\n      expect(rowEls[0].firstElementChild!.classList)\n          .toContain('mat-calendar-body-label', 'first cell should be the label');\n      expect(labelEls[0].getAttribute('colspan')).toBe('3');\n    });\n\n    it('cell should be selected on click', () => {\n      const todayElement =\n          calendarBodyNativeElement.querySelector('.mat-calendar-body-today') as HTMLElement;\n      todayElement.click();\n      fixture.detectChanges();\n\n      expect(todayElement.classList)\n          .toContain('mat-calendar-body-selected', 'today should be selected');\n    });\n\n    it('should mark active date', () => {\n      expect((cellEls[10] as HTMLElement).innerText.trim()).toBe('11');\n      expect(cellEls[10].classList).toContain('mat-calendar-body-active');\n    });\n\n    it('should set a class on even dates', () => {\n      expect((cellEls[0] as HTMLElement).innerText.trim()).toBe('1');\n      expect((cellEls[1] as HTMLElement).innerText.trim()).toBe('2');\n      expect(cellEls[0].classList).not.toContain('even');\n      expect(cellEls[1].classList).toContain('even');\n    });\n\n  });\n\n});\n\n\n@Component({\n  template: `<table mat-calendar-body\n                    [label]=\"label\"\n                    [rows]=\"rows\"\n                    [todayValue]=\"todayValue\"\n                    [selectedValue]=\"selectedValue\"\n                    [labelMinRequiredCells]=\"labelMinRequiredCells\"\n                    [numCols]=\"numCols\"\n                    [activeCell]=\"10\"\n                    (selectedValueChange)=\"onSelect($event)\">\n             </table>`,\n})\nclass StandardCalendarBody {\n  label = 'Jan 2017';\n  rows = [[1, 2, 3, 4, 5, 6, 7], [8, 9, 10, 11, 12, 13, 14]].map(row => {\n    return row.map(cell => createCell(cell, cell % 2 === 0 ? 'even' : undefined));\n  });\n  todayValue = 3;\n  selectedValue = 4;\n  labelMinRequiredCells = 3;\n  numCols = 7;\n\n  onSelect(value: number) {\n    this.selectedValue = value;\n  }\n}\n\nfunction createCell(value: number, cellClasses?: MatCalendarCellCssClasses) {\n  return new MatCalendarCell(value, `${value}`, `${value}-label`, true, cellClasses);\n}\n"]}