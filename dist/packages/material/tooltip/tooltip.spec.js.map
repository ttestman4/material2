{"version":3,"file":"tooltip.spec.js","sourceRoot":"","sources":["../../../../src/lib/tooltip/tooltip.spec.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  async,\n  ComponentFixture,\n  fakeAsync,\n  flush,\n  flushMicrotasks,\n  inject,\n  TestBed,\n  tick\n} from '@angular/core/testing';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  DebugElement,\n  ElementRef,\n  ViewChild,\n  NgZone,\n} from '@angular/core';\nimport {AnimationEvent} from '@angular/animations';\nimport {By} from '@angular/platform-browser';\nimport {NoopAnimationsModule} from '@angular/platform-browser/animations';\nimport {Direction, Directionality} from '@angular/cdk/bidi';\nimport {OverlayContainer, OverlayModule, CdkScrollable} from '@angular/cdk/overlay';\nimport {Platform} from '@angular/cdk/platform';\nimport {\n  dispatchFakeEvent,\n  dispatchKeyboardEvent,\n  patchElementFocus,\n  dispatchMouseEvent,\n} from '@angular/cdk/testing';\nimport {ESCAPE} from '@angular/cdk/keycodes';\nimport {FocusMonitor} from '@angular/cdk/a11y';\nimport {\n  MatTooltip,\n  MatTooltipModule,\n  SCROLL_THROTTLE_MS,\n  TOOLTIP_PANEL_CLASS,\n  MAT_TOOLTIP_DEFAULT_OPTIONS,\n} from './index';\n\n\nconst initialTooltipMessage = 'initial tooltip message';\n\ndescribe('MatTooltip', () => {\n  let overlayContainer: OverlayContainer;\n  let overlayContainerElement: HTMLElement;\n  let dir: {value: Direction};\n  let platform: {IOS: boolean, isBrowser: boolean, ANDROID: boolean};\n  let focusMonitor: FocusMonitor;\n\n  beforeEach(async(() => {\n    // Set the default Platform override that can be updated before component creation.\n    platform = {IOS: false, isBrowser: true, ANDROID: false};\n\n    TestBed.configureTestingModule({\n      imports: [MatTooltipModule, OverlayModule, NoopAnimationsModule],\n      declarations: [\n        BasicTooltipDemo,\n        ScrollableTooltipDemo,\n        OnPushTooltipDemo,\n        DynamicTooltipsDemo,\n        TooltipOnTextFields,\n        TooltipOnDraggableElement,\n      ],\n      providers: [\n        {provide: Platform, useFactory: () => platform},\n        {provide: Directionality, useFactory: () => {\n          return dir = {value: 'ltr'};\n        }}\n      ]\n    });\n\n    TestBed.compileComponents();\n\n    inject([OverlayContainer, FocusMonitor], (oc: OverlayContainer, fm: FocusMonitor) => {\n      overlayContainer = oc;\n      overlayContainerElement = oc.getContainerElement();\n      focusMonitor = fm;\n    })();\n  }));\n\n  afterEach(inject([OverlayContainer], (currentOverlayContainer: OverlayContainer) => {\n    // Since we're resetting the testing module in some of the tests,\n    // we can potentially have multiple overlay containers.\n    currentOverlayContainer.ngOnDestroy();\n    overlayContainer.ngOnDestroy();\n  }));\n\n  describe('basic usage', () => {\n    let fixture: ComponentFixture<BasicTooltipDemo>;\n    let buttonDebugElement: DebugElement;\n    let buttonElement: HTMLButtonElement;\n    let tooltipDirective: MatTooltip;\n\n    beforeEach(() => {\n      fixture = TestBed.createComponent(BasicTooltipDemo);\n      fixture.detectChanges();\n      buttonDebugElement = fixture.debugElement.query(By.css('button'));\n      buttonElement = <HTMLButtonElement> buttonDebugElement.nativeElement;\n      tooltipDirective = buttonDebugElement.injector.get<MatTooltip>(MatTooltip);\n    });\n\n    it('should show and hide the tooltip', fakeAsync(() => {\n      assertTooltipInstance(tooltipDirective, false);\n\n      tooltipDirective.show();\n      tick(0); // Tick for the show delay (default is 0)\n      expect(tooltipDirective._isTooltipVisible()).toBe(true);\n\n      fixture.detectChanges();\n\n      // wait till animation has finished\n      tick(500);\n\n      // Make sure tooltip is shown to the user and animation has finished\n      const tooltipElement = overlayContainerElement.querySelector('.mat-tooltip') as HTMLElement;\n      expect(tooltipElement instanceof HTMLElement).toBe(true);\n      expect(tooltipElement.style.transform).toBe('scale(1)');\n\n      expect(overlayContainerElement.textContent).toContain(initialTooltipMessage);\n\n      // After hide called, a timeout delay is created that will to hide the tooltip.\n      const tooltipDelay = 1000;\n      tooltipDirective.hide(tooltipDelay);\n      expect(tooltipDirective._isTooltipVisible()).toBe(true);\n\n      // After the tooltip delay elapses, expect that the tooltip is not visible.\n      tick(tooltipDelay);\n      fixture.detectChanges();\n      expect(tooltipDirective._isTooltipVisible()).toBe(false);\n\n      // On animation complete, should expect that the tooltip has been detached.\n      flushMicrotasks();\n      assertTooltipInstance(tooltipDirective, false);\n    }));\n\n    it('should be able to re-open a tooltip if it was closed by detaching the overlay',\n      fakeAsync(() => {\n        tooltipDirective.show();\n        tick(0);\n        expect(tooltipDirective._isTooltipVisible()).toBe(true);\n        fixture.detectChanges();\n        tick(500);\n\n        tooltipDirective._overlayRef!.detach();\n        tick(0);\n        fixture.detectChanges();\n        expect(tooltipDirective._isTooltipVisible()).toBe(false);\n        flushMicrotasks();\n        assertTooltipInstance(tooltipDirective, false);\n\n        tooltipDirective.show();\n        tick(0);\n        expect(tooltipDirective._isTooltipVisible()).toBe(true);\n      }));\n\n    it('should show with delay', fakeAsync(() => {\n      assertTooltipInstance(tooltipDirective, false);\n\n      const tooltipDelay = 1000;\n      tooltipDirective.show(tooltipDelay);\n      expect(tooltipDirective._isTooltipVisible()).toBe(false);\n\n      fixture.detectChanges();\n      expect(overlayContainerElement.textContent).toContain('');\n\n      tick(tooltipDelay);\n      expect(tooltipDirective._isTooltipVisible()).toBe(true);\n      expect(overlayContainerElement.textContent).toContain(initialTooltipMessage);\n    }));\n\n    it('should be able to override the default show and hide delays', fakeAsync(() => {\n      TestBed\n        .resetTestingModule()\n        .configureTestingModule({\n          imports: [MatTooltipModule, OverlayModule, NoopAnimationsModule],\n          declarations: [BasicTooltipDemo],\n          providers: [{\n            provide: MAT_TOOLTIP_DEFAULT_OPTIONS,\n            useValue: {showDelay: 1337, hideDelay: 7331}\n          }]\n        })\n        .compileComponents();\n\n      fixture = TestBed.createComponent(BasicTooltipDemo);\n      fixture.detectChanges();\n      tooltipDirective = fixture.debugElement.query(By.css('button'))\n          .injector.get<MatTooltip>(MatTooltip);\n\n      tooltipDirective.show();\n      fixture.detectChanges();\n      tick();\n\n      expect(tooltipDirective._isTooltipVisible()).toBe(false);\n      tick(1337);\n      expect(tooltipDirective._isTooltipVisible()).toBe(true);\n\n      tooltipDirective.hide();\n      fixture.detectChanges();\n      tick();\n\n      expect(tooltipDirective._isTooltipVisible()).toBe(true);\n      tick(7331);\n      expect(tooltipDirective._isTooltipVisible()).toBe(false);\n    }));\n\n    it('should be able to override the default position', fakeAsync(() => {\n      TestBed\n        .resetTestingModule()\n        .configureTestingModule({\n          imports: [MatTooltipModule, OverlayModule, NoopAnimationsModule],\n          declarations: [TooltipDemoWithoutPositionBinding],\n          providers: [{\n            provide: MAT_TOOLTIP_DEFAULT_OPTIONS,\n            useValue: {position: 'right'}\n          }]\n        })\n        .compileComponents();\n\n      const newFixture = TestBed.createComponent(TooltipDemoWithoutPositionBinding);\n      newFixture.detectChanges();\n      tooltipDirective = newFixture.debugElement.query(By.css('button'))\n          .injector.get<MatTooltip>(MatTooltip);\n\n      tooltipDirective.show();\n      newFixture.detectChanges();\n      tick();\n\n      expect(tooltipDirective.position).toBe('right');\n      expect(tooltipDirective._getOverlayPosition().main.overlayX).toBe('start');\n      expect(tooltipDirective._getOverlayPosition().fallback.overlayX).toBe('end');\n    }));\n\n    it('should set a css class on the overlay panel element', fakeAsync(() => {\n      tooltipDirective.show();\n      fixture.detectChanges();\n      tick(0);\n\n      const overlayRef = tooltipDirective._overlayRef;\n\n      expect(!!overlayRef).toBeTruthy();\n      expect(overlayRef!.overlayElement.classList).toContain(TOOLTIP_PANEL_CLASS,\n          'Expected the overlay panel element to have the tooltip panel class set.');\n    }));\n\n    it('should not show if disabled', fakeAsync(() => {\n      // Test that disabling the tooltip will not set the tooltip visible\n      tooltipDirective.disabled = true;\n      tooltipDirective.show();\n      fixture.detectChanges();\n      tick(0);\n      expect(tooltipDirective._isTooltipVisible()).toBe(false);\n\n      // Test to make sure setting disabled to false will show the tooltip\n      // Sanity check to make sure everything was correct before (detectChanges, tick)\n      tooltipDirective.disabled = false;\n      tooltipDirective.show();\n      fixture.detectChanges();\n      tick(0);\n      expect(tooltipDirective._isTooltipVisible()).toBe(true);\n    }));\n\n    it('should hide if disabled while visible', fakeAsync(() => {\n      // Display the tooltip with a timeout before hiding.\n      tooltipDirective.hideDelay = 1000;\n      tooltipDirective.show();\n      fixture.detectChanges();\n      tick(0);\n      expect(tooltipDirective._isTooltipVisible()).toBe(true);\n\n      // Set tooltip to be disabled and verify that the tooltip hides.\n      tooltipDirective.disabled = true;\n      tick(0);\n      expect(tooltipDirective._isTooltipVisible()).toBe(false);\n    }));\n\n    it('should hide if the message is cleared while the tooltip is open', fakeAsync(() => {\n      tooltipDirective.show();\n      fixture.detectChanges();\n      tick(0);\n      expect(tooltipDirective._isTooltipVisible()).toBe(true);\n\n      fixture.componentInstance.message = '';\n      fixture.detectChanges();\n      tick(0);\n      expect(tooltipDirective._isTooltipVisible()).toBe(false);\n    }));\n\n    it('should not show if hide is called before delay finishes', async(() => {\n      assertTooltipInstance(tooltipDirective, false);\n\n      const tooltipDelay = 1000;\n\n      tooltipDirective.show(tooltipDelay);\n      expect(tooltipDirective._isTooltipVisible()).toBe(false);\n\n      fixture.detectChanges();\n      expect(overlayContainerElement.textContent).toContain('');\n      tooltipDirective.hide();\n\n      fixture.whenStable().then(() => {\n        expect(tooltipDirective._isTooltipVisible()).toBe(false);\n      });\n    }));\n\n    it('should not show tooltip if message is not present or empty', () => {\n      assertTooltipInstance(tooltipDirective, false);\n\n      tooltipDirective.message = undefined!;\n      fixture.detectChanges();\n      tooltipDirective.show();\n      assertTooltipInstance(tooltipDirective, false);\n\n      tooltipDirective.message = null!;\n      fixture.detectChanges();\n      tooltipDirective.show();\n      assertTooltipInstance(tooltipDirective, false);\n\n      tooltipDirective.message = '';\n      fixture.detectChanges();\n      tooltipDirective.show();\n      assertTooltipInstance(tooltipDirective, false);\n\n      tooltipDirective.message = '   ';\n      fixture.detectChanges();\n      tooltipDirective.show();\n      assertTooltipInstance(tooltipDirective, false);\n    });\n\n    it('should not follow through with hide if show is called after', fakeAsync(() => {\n      tooltipDirective.show();\n      tick(0); // Tick for the show delay (default is 0)\n      expect(tooltipDirective._isTooltipVisible()).toBe(true);\n\n      // After hide called, a timeout delay is created that will to hide the tooltip.\n      const tooltipDelay = 1000;\n      tooltipDirective.hide(tooltipDelay);\n      expect(tooltipDirective._isTooltipVisible()).toBe(true);\n\n      // Before delay time has passed, call show which should cancel intent to hide tooltip.\n      tooltipDirective.show();\n      tick(tooltipDelay);\n      expect(tooltipDirective._isTooltipVisible()).toBe(true);\n    }));\n\n    it('should be able to update the tooltip position while open', fakeAsync(() => {\n      tooltipDirective.position = 'below';\n      tooltipDirective.show();\n      tick();\n\n      assertTooltipInstance(tooltipDirective, true);\n\n      tooltipDirective.position = 'above';\n      spyOn(tooltipDirective._overlayRef!, 'updatePosition').and.callThrough();\n      fixture.detectChanges();\n      tick();\n\n      assertTooltipInstance(tooltipDirective, true);\n      expect(tooltipDirective._overlayRef!.updatePosition).toHaveBeenCalled();\n    }));\n\n    it('should not throw when updating the position for a closed tooltip', fakeAsync(() => {\n      tooltipDirective.position = 'left';\n      tooltipDirective.show(0);\n      fixture.detectChanges();\n      tick();\n\n      tooltipDirective.hide(0);\n      fixture.detectChanges();\n      tick();\n\n      // At this point the animation should be able to complete itself and trigger the\n      // _animationDone function, but for unknown reasons in the test infrastructure,\n      // this does not occur. Manually call the hook so the animation subscriptions get invoked.\n      tooltipDirective._tooltipInstance!._animationDone({\n        fromState: 'visible',\n        toState: 'hidden',\n        totalTime: 150,\n        phaseName: 'done',\n      } as AnimationEvent);\n\n      expect(() => {\n        tooltipDirective.position = 'right';\n        fixture.detectChanges();\n        tick();\n      }).not.toThrow();\n    }));\n\n    it('should be able to modify the tooltip message', fakeAsync(() => {\n      assertTooltipInstance(tooltipDirective, false);\n\n      tooltipDirective.show();\n      tick(0); // Tick for the show delay (default is 0)\n      expect(tooltipDirective._tooltipInstance!._visibility).toBe('visible');\n\n      fixture.detectChanges();\n      expect(overlayContainerElement.textContent).toContain(initialTooltipMessage);\n\n      const newMessage = 'new tooltip message';\n      tooltipDirective.message = newMessage;\n\n      fixture.detectChanges();\n      expect(overlayContainerElement.textContent).toContain(newMessage);\n    }));\n\n    it('should allow extra classes to be set on the tooltip', fakeAsync(() => {\n      assertTooltipInstance(tooltipDirective, false);\n\n      tooltipDirective.show();\n      tick(0); // Tick for the show delay (default is 0)\n      fixture.detectChanges();\n\n      // Make sure classes aren't prematurely added\n      let tooltipElement = overlayContainerElement.querySelector('.mat-tooltip') as HTMLElement;\n      expect(tooltipElement.classList).not.toContain('custom-one',\n        'Expected to not have the class before enabling matTooltipClass');\n      expect(tooltipElement.classList).not.toContain('custom-two',\n        'Expected to not have the class before enabling matTooltipClass');\n\n      // Enable the classes via ngClass syntax\n      fixture.componentInstance.showTooltipClass = true;\n      fixture.detectChanges();\n\n      // Make sure classes are correctly added\n      tooltipElement = overlayContainerElement.querySelector('.mat-tooltip') as HTMLElement;\n      expect(tooltipElement.classList).toContain('custom-one',\n        'Expected to have the class after enabling matTooltipClass');\n      expect(tooltipElement.classList).toContain('custom-two',\n        'Expected to have the class after enabling matTooltipClass');\n    }));\n\n    it('should be removed after parent destroyed', fakeAsync(() => {\n      tooltipDirective.show();\n      tick(0); // Tick for the show delay (default is 0)\n      expect(tooltipDirective._isTooltipVisible()).toBe(true);\n\n      fixture.destroy();\n      expect(overlayContainerElement.childNodes.length).toBe(0);\n      expect(overlayContainerElement.textContent).toBe('');\n    }));\n\n    it('should have an aria-described element with the tooltip message', () => {\n      const dynamicTooltipsDemoFixture = TestBed.createComponent(DynamicTooltipsDemo);\n      const dynamicTooltipsComponent = dynamicTooltipsDemoFixture.componentInstance;\n\n      dynamicTooltipsComponent.tooltips = ['Tooltip One', 'Tooltip Two'];\n      dynamicTooltipsDemoFixture.detectChanges();\n\n      const buttons = dynamicTooltipsComponent.getButtons();\n      const firstButtonAria = buttons[0].getAttribute('aria-describedby');\n      expect(document.querySelector(`#${firstButtonAria}`)!.textContent).toBe('Tooltip One');\n\n      const secondButtonAria = buttons[1].getAttribute('aria-describedby');\n      expect(document.querySelector(`#${secondButtonAria}`)!.textContent).toBe('Tooltip Two');\n    });\n\n    it('should not try to dispose the tooltip when destroyed and done hiding', fakeAsync(() => {\n      tooltipDirective.show();\n      fixture.detectChanges();\n      tick(150);\n\n      const tooltipDelay = 1000;\n      tooltipDirective.hide();\n      tick(tooltipDelay); // Change the tooltip state to hidden and trigger animation start\n\n      // Store the tooltip instance, which will be set to null after the button is hidden.\n      const tooltipInstance = tooltipDirective._tooltipInstance!;\n      fixture.componentInstance.showButton = false;\n      fixture.detectChanges();\n\n      // At this point the animation should be able to complete itself and trigger the\n      // _animationDone function, but for unknown reasons in the test infrastructure,\n      // this does not occur. Manually call this and verify that doing so does not\n      // throw an error.\n      tooltipInstance._animationDone({\n        fromState: 'visible',\n        toState: 'hidden',\n        totalTime: 150,\n        phaseName: 'done',\n      } as AnimationEvent);\n    }));\n\n    it('should complete the afterHidden stream when tooltip is destroyed', fakeAsync(() => {\n      tooltipDirective.show();\n      fixture.detectChanges();\n      tick(150);\n\n      const spy = jasmine.createSpy('complete spy');\n      const subscription = tooltipDirective._tooltipInstance!.afterHidden()\n          .subscribe(undefined, undefined, spy);\n\n      tooltipDirective.hide(0);\n      tick(0);\n      fixture.detectChanges();\n      tick(500);\n\n      expect(spy).toHaveBeenCalled();\n      subscription.unsubscribe();\n    }));\n\n    it('should consistently position before and after overlay origin in ltr and rtl dir', () => {\n      tooltipDirective.position = 'left';\n      const leftOrigin = tooltipDirective._getOrigin().main;\n      tooltipDirective.position = 'right';\n      const rightOrigin = tooltipDirective._getOrigin().main;\n\n      // Test expectations in LTR\n      tooltipDirective.position = 'before';\n      expect(tooltipDirective._getOrigin().main).toEqual(leftOrigin);\n      tooltipDirective.position = 'after';\n      expect(tooltipDirective._getOrigin().main).toEqual(rightOrigin);\n\n      // Test expectations in RTL\n      dir.value = 'rtl';\n      tooltipDirective.position = 'before';\n      expect(tooltipDirective._getOrigin().main).toEqual(leftOrigin);\n      tooltipDirective.position = 'after';\n      expect(tooltipDirective._getOrigin().main).toEqual(rightOrigin);\n    });\n\n    it('should consistently position before and after overlay position in ltr and rtl dir', () => {\n      tooltipDirective.position = 'left';\n      const leftOverlayPosition = tooltipDirective._getOverlayPosition().main;\n      tooltipDirective.position = 'right';\n      const rightOverlayPosition = tooltipDirective._getOverlayPosition().main;\n\n      // Test expectations in LTR\n      tooltipDirective.position = 'before';\n      expect(tooltipDirective._getOverlayPosition().main).toEqual(leftOverlayPosition);\n      tooltipDirective.position = 'after';\n      expect(tooltipDirective._getOverlayPosition().main).toEqual(rightOverlayPosition);\n\n      // Test expectations in RTL\n      dir.value = 'rtl';\n      tooltipDirective.position = 'before';\n      expect(tooltipDirective._getOverlayPosition().main).toEqual(leftOverlayPosition);\n      tooltipDirective.position = 'after';\n      expect(tooltipDirective._getOverlayPosition().main).toEqual(rightOverlayPosition);\n    });\n\n    it('should throw when trying to assign an invalid position', () => {\n      expect(() => {\n        fixture.componentInstance.position = 'everywhere';\n        fixture.detectChanges();\n        tooltipDirective.show();\n      }).toThrowError('Tooltip position \"everywhere\" is invalid.');\n    });\n\n    it('should pass the layout direction to the tooltip', fakeAsync(() => {\n      dir.value = 'rtl';\n\n      tooltipDirective.show();\n      tick(0);\n      fixture.detectChanges();\n\n      const tooltipWrapper =\n          overlayContainerElement.querySelector('.cdk-overlay-connected-position-bounding-box')!;\n\n      expect(tooltipWrapper).toBeTruthy('Expected tooltip to be shown.');\n      expect(tooltipWrapper.getAttribute('dir')).toBe('rtl', 'Expected tooltip to be in RTL mode.');\n    }));\n\n    it('should keep the overlay direction in sync with the trigger direction', fakeAsync(() => {\n      dir.value = 'rtl';\n      tooltipDirective.show();\n      tick(0);\n      fixture.detectChanges();\n      tick(500);\n\n      let tooltipWrapper =\n          overlayContainerElement.querySelector('.cdk-overlay-connected-position-bounding-box')!;\n      expect(tooltipWrapper.getAttribute('dir')).toBe('rtl', 'Expected tooltip to be in RTL.');\n\n      tooltipDirective.hide(0);\n      tick(0);\n      fixture.detectChanges();\n      tick(500);\n\n      dir.value = 'ltr';\n      tooltipDirective.show();\n      tick(0);\n      fixture.detectChanges();\n      tick(500);\n\n      tooltipWrapper =\n          overlayContainerElement.querySelector('.cdk-overlay-connected-position-bounding-box')!;\n      expect(tooltipWrapper.getAttribute('dir')).toBe('ltr', 'Expected tooltip to be in LTR.');\n    }));\n\n    it('should be able to set the tooltip message as a number', fakeAsync(() => {\n      fixture.componentInstance.message = 100;\n      fixture.detectChanges();\n\n      expect(tooltipDirective.message).toBe('100');\n    }));\n\n    it('should hide when clicking away', fakeAsync(() => {\n      tooltipDirective.show();\n      tick(0);\n      fixture.detectChanges();\n      tick(500);\n\n      expect(tooltipDirective._isTooltipVisible()).toBe(true);\n      expect(overlayContainerElement.textContent).toContain(initialTooltipMessage);\n\n      document.body.click();\n      tick(0);\n      fixture.detectChanges();\n      tick(500);\n      fixture.detectChanges();\n\n      expect(tooltipDirective._isTooltipVisible()).toBe(false);\n      expect(overlayContainerElement.textContent).toBe('');\n    }));\n\n    it('should not hide immediately if a click fires while animating', fakeAsync(() => {\n      tooltipDirective.show();\n      tick(0);\n      fixture.detectChanges();\n\n      document.body.click();\n      fixture.detectChanges();\n      tick(500);\n\n      expect(overlayContainerElement.textContent).toContain(initialTooltipMessage);\n    }));\n\n    it('should not throw when pressing ESCAPE', fakeAsync(() => {\n      expect(() => {\n        dispatchKeyboardEvent(buttonElement, 'keydown', ESCAPE);\n        fixture.detectChanges();\n      }).not.toThrow();\n\n      // Flush due to the additional tick that is necessary for the FocusMonitor.\n      flush();\n    }));\n\n    it('should not show the tooltip on progammatic focus', fakeAsync(() => {\n      patchElementFocus(buttonElement);\n      assertTooltipInstance(tooltipDirective, false);\n\n      focusMonitor.focusVia(buttonElement, 'program');\n      tick(0);\n      fixture.detectChanges();\n      tick(500);\n\n      expect(overlayContainerElement.querySelector('.mat-tooltip')).toBeNull();\n    }));\n\n    it('should not show the tooltip on mouse focus', fakeAsync(() => {\n      patchElementFocus(buttonElement);\n      assertTooltipInstance(tooltipDirective, false);\n\n      focusMonitor.focusVia(buttonElement, 'mouse');\n      tick(0);\n      fixture.detectChanges();\n      tick(500);\n\n      expect(overlayContainerElement.querySelector('.mat-tooltip')).toBeNull();\n    }));\n\n    it('should not show the tooltip on touch focus', fakeAsync(() => {\n      patchElementFocus(buttonElement);\n      assertTooltipInstance(tooltipDirective, false);\n\n      focusMonitor.focusVia(buttonElement, 'touch');\n      tick(0);\n      fixture.detectChanges();\n      tick(500);\n\n      expect(overlayContainerElement.querySelector('.mat-tooltip')).toBeNull();\n    }));\n\n    it('should not hide the tooltip when calling `show` twice in a row', fakeAsync(() => {\n      tooltipDirective.show();\n      tick(0);\n      expect(tooltipDirective._isTooltipVisible()).toBe(true);\n      fixture.detectChanges();\n      tick(500);\n\n      const overlayRef = tooltipDirective._overlayRef!;\n\n      spyOn(overlayRef, 'detach').and.callThrough();\n\n      tooltipDirective.show();\n      tick(0);\n      expect(tooltipDirective._isTooltipVisible()).toBe(true);\n      fixture.detectChanges();\n      tick(500);\n\n      expect(overlayRef.detach).not.toHaveBeenCalled();\n    }));\n\n  });\n\n  describe('fallback positions', () => {\n    let fixture: ComponentFixture<BasicTooltipDemo>;\n    let tooltip: MatTooltip;\n\n    beforeEach(() => {\n      fixture = TestBed.createComponent(BasicTooltipDemo);\n      fixture.detectChanges();\n      tooltip = fixture.debugElement.query(By.css('button')).injector.get<MatTooltip>(MatTooltip);\n    });\n\n    it('should set a fallback origin position by inverting the main origin position', () => {\n      tooltip.position = 'left';\n      expect(tooltip._getOrigin().main.originX).toBe('start');\n      expect(tooltip._getOrigin().fallback.originX).toBe('end');\n\n      tooltip.position = 'right';\n      expect(tooltip._getOrigin().main.originX).toBe('end');\n      expect(tooltip._getOrigin().fallback.originX).toBe('start');\n\n      tooltip.position = 'above';\n      expect(tooltip._getOrigin().main.originY).toBe('top');\n      expect(tooltip._getOrigin().fallback.originY).toBe('bottom');\n\n      tooltip.position = 'below';\n      expect(tooltip._getOrigin().main.originY).toBe('bottom');\n      expect(tooltip._getOrigin().fallback.originY).toBe('top');\n    });\n\n    it('should set a fallback overlay position by inverting the main overlay position', () => {\n      tooltip.position = 'left';\n      expect(tooltip._getOverlayPosition().main.overlayX).toBe('end');\n      expect(tooltip._getOverlayPosition().fallback.overlayX).toBe('start');\n\n      tooltip.position = 'right';\n      expect(tooltip._getOverlayPosition().main.overlayX).toBe('start');\n      expect(tooltip._getOverlayPosition().fallback.overlayX).toBe('end');\n\n      tooltip.position = 'above';\n      expect(tooltip._getOverlayPosition().main.overlayY).toBe('bottom');\n      expect(tooltip._getOverlayPosition().fallback.overlayY).toBe('top');\n\n      tooltip.position = 'below';\n      expect(tooltip._getOverlayPosition().main.overlayY).toBe('top');\n      expect(tooltip._getOverlayPosition().fallback.overlayY).toBe('bottom');\n    });\n  });\n\n  describe('scrollable usage', () => {\n    let fixture: ComponentFixture<ScrollableTooltipDemo>;\n    let buttonDebugElement: DebugElement;\n    let tooltipDirective: MatTooltip;\n\n    beforeEach(() => {\n      fixture = TestBed.createComponent(ScrollableTooltipDemo);\n      fixture.detectChanges();\n      buttonDebugElement = fixture.debugElement.query(By.css('button'));\n      tooltipDirective = buttonDebugElement.injector.get<MatTooltip>(MatTooltip);\n    });\n\n    it('should hide tooltip if clipped after changing positions', fakeAsync(() => {\n      assertTooltipInstance(tooltipDirective, false);\n\n      // Show the tooltip and tick for the show delay (default is 0)\n      tooltipDirective.show();\n      fixture.detectChanges();\n      tick(0);\n\n      // Expect that the tooltip is displayed\n      expect(tooltipDirective._isTooltipVisible())\n          .toBe(true, 'Expected tooltip to be initially visible');\n\n      // Scroll the page but tick just before the default throttle should update.\n      fixture.componentInstance.scrollDown();\n      tick(SCROLL_THROTTLE_MS - 1);\n      expect(tooltipDirective._isTooltipVisible())\n          .toBe(true, 'Expected tooltip to be visible when scrolling, before throttle limit');\n\n      // Finish ticking to the throttle's limit and check that the scroll event notified the\n      // tooltip and it was hidden.\n      tick(100);\n      fixture.detectChanges();\n      expect(tooltipDirective._isTooltipVisible())\n          .toBe(false, 'Expected tooltip hidden when scrolled out of view, after throttle limit');\n    }));\n\n    it('should execute the `hide` call, after scrolling away, inside the NgZone', fakeAsync(() => {\n      const inZoneSpy = jasmine.createSpy('in zone spy');\n\n      tooltipDirective.show();\n      fixture.detectChanges();\n      tick(0);\n\n      spyOn(tooltipDirective._tooltipInstance!, 'hide').and.callFake(() => {\n        inZoneSpy(NgZone.isInAngularZone());\n      });\n\n      fixture.componentInstance.scrollDown();\n      tick(100);\n      fixture.detectChanges();\n\n      expect(inZoneSpy).toHaveBeenCalled();\n      expect(inZoneSpy).toHaveBeenCalledWith(true);\n    }));\n\n  });\n\n  describe('with OnPush', () => {\n    let fixture: ComponentFixture<OnPushTooltipDemo>;\n    let buttonDebugElement: DebugElement;\n    let buttonElement: HTMLButtonElement;\n    let tooltipDirective: MatTooltip;\n\n    beforeEach(() => {\n      fixture = TestBed.createComponent(OnPushTooltipDemo);\n      fixture.detectChanges();\n      buttonDebugElement = fixture.debugElement.query(By.css('button'));\n      buttonElement = <HTMLButtonElement> buttonDebugElement.nativeElement;\n      tooltipDirective = buttonDebugElement.injector.get<MatTooltip>(MatTooltip);\n    });\n\n    it('should show and hide the tooltip', fakeAsync(() => {\n      assertTooltipInstance(tooltipDirective, false);\n\n      tooltipDirective.show();\n      tick(0); // Tick for the show delay (default is 0)\n      expect(tooltipDirective._isTooltipVisible()).toBe(true);\n\n      fixture.detectChanges();\n\n      // wait until animation has finished\n      tick(500);\n\n      // Make sure tooltip is shown to the user and animation has finished\n      const tooltipElement = overlayContainerElement.querySelector('.mat-tooltip') as HTMLElement;\n      expect(tooltipElement instanceof HTMLElement).toBe(true);\n      expect(tooltipElement.style.transform).toBe('scale(1)');\n\n      // After hide called, a timeout delay is created that will to hide the tooltip.\n      const tooltipDelay = 1000;\n      tooltipDirective.hide(tooltipDelay);\n      expect(tooltipDirective._isTooltipVisible()).toBe(true);\n\n      // After the tooltip delay elapses, expect that the tooltip is not visible.\n      tick(tooltipDelay);\n      fixture.detectChanges();\n      expect(tooltipDirective._isTooltipVisible()).toBe(false);\n\n      // On animation complete, should expect that the tooltip has been detached.\n      flushMicrotasks();\n      assertTooltipInstance(tooltipDirective, false);\n    }));\n\n    it('should have rendered the tooltip text on init', fakeAsync(() => {\n      dispatchFakeEvent(buttonElement, 'mouseenter');\n      fixture.detectChanges();\n      tick(0);\n\n      const tooltipElement = overlayContainerElement.querySelector('.mat-tooltip') as HTMLElement;\n      expect(tooltipElement.textContent).toContain('initial tooltip message');\n    }));\n  });\n\n  describe('special cases', () => {\n\n    it('should clear the `user-select` when a tooltip is set on a text field', () => {\n      const fixture = TestBed.createComponent(TooltipOnTextFields);\n      const instance = fixture.componentInstance;\n\n      fixture.detectChanges();\n\n      expect(instance.input.nativeElement.style.userSelect).toBeFalsy();\n      expect(instance.input.nativeElement.style.webkitUserSelect).toBeFalsy();\n      expect(instance.input.nativeElement.style.msUserSelect).toBeFalsy();\n\n      expect(instance.textarea.nativeElement.style.userSelect).toBeFalsy();\n      expect(instance.textarea.nativeElement.style.webkitUserSelect).toBeFalsy();\n      expect(instance.textarea.nativeElement.style.msUserSelect).toBeFalsy();\n    });\n\n    it('should clear the `-webkit-user-drag` on draggable elements', () => {\n      const fixture = TestBed.createComponent(TooltipOnDraggableElement);\n\n      fixture.detectChanges();\n\n      expect(fixture.componentInstance.button.nativeElement.style.webkitUserDrag).toBeFalsy();\n    });\n\n    it('should not open on `mouseenter` on iOS', () => {\n      platform.IOS = true;\n\n      const fixture = TestBed.createComponent(BasicTooltipDemo);\n\n      fixture.detectChanges();\n      dispatchMouseEvent(fixture.componentInstance.button.nativeElement, 'mouseenter');\n      fixture.detectChanges();\n\n      assertTooltipInstance(fixture.componentInstance.tooltip, false);\n    });\n\n    it('should not open on `mouseenter` on Android', () => {\n      platform.ANDROID = true;\n\n      const fixture = TestBed.createComponent(BasicTooltipDemo);\n\n      fixture.detectChanges();\n      dispatchMouseEvent(fixture.componentInstance.button.nativeElement, 'mouseenter');\n      fixture.detectChanges();\n\n      assertTooltipInstance(fixture.componentInstance.tooltip, false);\n    });\n\n  });\n\n});\n\n@Component({\n  selector: 'app',\n  template: `\n    <button #button\n            *ngIf=\"showButton\"\n            [matTooltip]=\"message\"\n            [matTooltipPosition]=\"position\"\n            [matTooltipClass]=\"{'custom-one': showTooltipClass, 'custom-two': showTooltipClass }\">\n      Button\n    </button>`\n})\nclass BasicTooltipDemo {\n  position: string = 'below';\n  message: any = initialTooltipMessage;\n  showButton: boolean = true;\n  showTooltipClass = false;\n  @ViewChild(MatTooltip) tooltip: MatTooltip;\n  @ViewChild('button') button: ElementRef<HTMLButtonElement>;\n}\n\n@Component({\n     selector: 'app',\n     template: `\n    <div cdk-scrollable style=\"padding: 100px; margin: 300px;\n                               height: 200px; width: 200px; overflow: auto;\">\n      <button *ngIf=\"showButton\" style=\"margin-bottom: 600px\"\n              [matTooltip]=\"message\"\n              [matTooltipPosition]=\"position\">\n        Button\n      </button>\n    </div>`\n})\nclass ScrollableTooltipDemo {\n position: string = 'below';\n message: string = initialTooltipMessage;\n showButton: boolean = true;\n\n @ViewChild(CdkScrollable) scrollingContainer: CdkScrollable;\n\n scrollDown() {\n     const scrollingContainerEl = this.scrollingContainer.getElementRef().nativeElement;\n     scrollingContainerEl.scrollTop = 250;\n\n     // Emit a scroll event from the scrolling element in our component.\n     // This event should be picked up by the scrollable directive and notify.\n     // The notification should be picked up by the service.\n     dispatchFakeEvent(scrollingContainerEl, 'scroll');\n   }\n}\n\n@Component({\n  selector: 'app',\n  template: `\n    <button [matTooltip]=\"message\"\n            [matTooltipPosition]=\"position\">\n      Button\n    </button>`,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nclass OnPushTooltipDemo {\n  position: string = 'below';\n  message: string = initialTooltipMessage;\n}\n\n\n@Component({\n  selector: 'app',\n  template: `\n    <button *ngFor=\"let tooltip of tooltips\"\n            [matTooltip]=\"tooltip\">\n      Button {{tooltip}}\n    </button>`,\n})\nclass DynamicTooltipsDemo {\n  tooltips: Array<string> = [];\n\n  constructor(private _elementRef: ElementRef<HTMLElement>) {}\n\n  getButtons() {\n    return this._elementRef.nativeElement.querySelectorAll('button');\n  }\n}\n\n@Component({\n  template: `\n    <input\n      #input\n      style=\"user-select: none; -webkit-user-select: none\"\n      matTooltip=\"Something\">\n\n    <textarea\n      #textarea\n      style=\"user-select: none; -webkit-user-select: none\"\n      matTooltip=\"Another thing\"></textarea>\n  `,\n})\nclass TooltipOnTextFields {\n  @ViewChild('input') input: ElementRef<HTMLInputElement>;\n  @ViewChild('textarea') textarea: ElementRef<HTMLTextAreaElement>;\n}\n\n@Component({\n  template: `\n    <button\n      #button\n      style=\"-webkit-user-drag: none;\"\n      draggable=\"true\"\n      matTooltip=\"Drag me\"></button>\n  `,\n})\nclass TooltipOnDraggableElement {\n  @ViewChild('button') button: ElementRef;\n}\n\n@Component({\n  selector: 'app',\n  template: `<button #button [matTooltip]=\"message\">Button</button>`\n})\nclass TooltipDemoWithoutPositionBinding {\n  message: any = initialTooltipMessage;\n  @ViewChild(MatTooltip) tooltip: MatTooltip;\n  @ViewChild('button') button: ElementRef<HTMLButtonElement>;\n}\n\n/** Asserts whether a tooltip directive has a tooltip instance. */\nfunction assertTooltipInstance(tooltip: MatTooltip, shouldExist: boolean): void {\n  // Note that we have to cast this to a boolean, because Jasmine will go into an infinite loop\n  // if it tries to stringify the `_tooltipInstance` when an assertion fails. The infinite loop\n  // happens due to the `_tooltipInstance` having a circular structure.\n  expect(!!tooltip._tooltipInstance).toBe(shouldExist);\n}\n"]}