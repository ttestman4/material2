{"version":3,"file":"dialog-injectors.js","sourceRoot":"","sources":["../../../../src/cdk-experimental/dialog/dialog-injectors.ts"],"names":[],"mappings":";AAAA;;;;;;GAMG;;AAEH,sCAA6C;AAC7C,gDAI8B;AAK9B,uDAAuD;AAC1C,QAAA,sBAAsB,GAC/B,IAAI,qBAAc,CAAuB,sBAAsB,CAAC,CAAC;AAErE,6CAA6C;AAChC,QAAA,WAAW,GAAG,IAAI,qBAAc,CAAM,YAAY,CAAC,CAAC;AAEjE,qDAAqD;AACxC,QAAA,UAAU,GAAG,IAAI,qBAAc,CAAiB,WAAW,CAAC,CAAC;AAE1E,4CAA4C;AAC/B,QAAA,aAAa,GAAG,IAAI,qBAAc,CAAe,cAAc,CAAC,CAAC;AAE9E,kEAAkE;AACrD,QAAA,gBAAgB,GACzB,IAAI,qBAAc,CAAoC,iBAAiB,CAAC,CAAC;AAE7E,oBAAoB;AACpB,SAAgB,2CAA2C,CAAC,OAAgB;IAE1E,OAAO,cAAM,OAAA,OAAO,CAAC,gBAAgB,CAAC,KAAK,EAAE,EAAhC,CAAgC,CAAC;AAChD,CAAC;AAHD,kGAGC;AAED,oBAAoB;AACP,QAAA,mCAAmC,GAAG;IACjD,OAAO,EAAE,8BAAsB;IAC/B,IAAI,EAAE,CAAC,iBAAO,CAAC;IACf,UAAU,EAAE,2CAA2C;CACxD,CAAC","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {InjectionToken} from '@angular/core';\nimport {\n  ComponentType,\n  Overlay,\n  ScrollStrategy,\n} from '@angular/cdk/overlay';\nimport {DialogRef} from './dialog-ref';\nimport {CdkDialogContainer} from './dialog-container';\nimport {DialogConfig} from './dialog-config';\n\n/** Injection token for the Dialog's ScrollStrategy. */\nexport const DIALOG_SCROLL_STRATEGY =\n    new InjectionToken<() => ScrollStrategy>('DialogScrollStrategy');\n\n/** Injection token for the Dialog's Data. */\nexport const DIALOG_DATA = new InjectionToken<any>('DialogData');\n\n/** Injection token for the DialogRef constructor. */\nexport const DIALOG_REF = new InjectionToken<DialogRef<any>>('DialogRef');\n\n/** Injection token for the DialogConfig. */\nexport const DIALOG_CONFIG = new InjectionToken<DialogConfig>('DialogConfig');\n\n/** Injection token for the Dialog's DialogContainer component. */\nexport const DIALOG_CONTAINER =\n    new InjectionToken<ComponentType<CdkDialogContainer>>('DialogContainer');\n\n/** @docs-private */\nexport function MAT_DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay: Overlay):\n    () => ScrollStrategy {\n  return () => overlay.scrollStrategies.block();\n}\n\n/** @docs-private */\nexport const MAT_DIALOG_SCROLL_STRATEGY_PROVIDER = {\n  provide: DIALOG_SCROLL_STRATEGY,\n  deps: [Overlay],\n  useFactory: MAT_DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY,\n};\n"]}